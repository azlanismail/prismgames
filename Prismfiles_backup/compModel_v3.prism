smg

//top level
system  // a set of applications to be migrated
    "A1" || "A2" 
endsystem

//sub-system
system "A1"  
    M1
endsystem

//availability state
global rs1_av : bool init true;
global rs2_av : bool init true;
global rs3_av : bool init true;

module M1
p1:bool init false;	//decision process state
f1: bool init false; 	//execution state
s1: [0..3] init 0;	//selection state

[rs1!]  (p1=false) & (rs1_av=true) -> (p1'=true) & (s1'=1);
[rs2!]  (p1=false) & (rs2_av=true) -> (p1'=true) & (s1'=2);
[rs3!]  (p1=false) & (rs3_av=true) -> (p1'=true) & (s1'=3);

//[r1?] (rs1_av=true) -> 0.5:(rs1_av'=true) + 0.5:(rs1_av'=false);
//[r2?] (rs2_av=true) -> 0.5:(rs2_av'=true) + 0.5:(rs2_av'=false);
//[r3?] (rs3_av=true) -> 0.5:(rs3_av'=true) + 0.5:(rs3_av'=false);

//[] (p1=true) -> (p1'=true);


endmodule

//================================
system "A2" 
    M2
endsystem

module M2
p2:bool init false;	//decision process state
f2: bool init false; 	//execution state
s2: [0..3] init 0;	//selection state

[rs1!]  (p2=false) & (rs1_av=true) -> (p2'=true) & (s2'=1);
[rs2!]  (p2=false) & (rs2_av=true) -> (p2'=true) & (s2'=2);
[rs3!]  (p2=false) & (rs3_av=true) -> (p2'=true) & (s2'=3);

//[] (p2=true) -> (p2'=true);
endmodule


// rewards
//rewards "r1"
//	[a] true : 1;
//endrewards


//formula total_rt = max(rt_rs1, rt_rs2, rt_rs3);
//formula total_rs = cur_rs + new_rs;

//execution time / response time reward
rewards "rt1"
    [rs1] true : 1;
endrewards

//resource utilization
rewards "ru1"
    [rs1] true : 1;
endrewards
