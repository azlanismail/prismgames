smg

//top level
system  // a set of applications to be migrated
    "A1" || "A2" 
endsystem

//sub-system
system "A1"  
    M1
endsystem

//availability state
//global rs1_av : bool init true;
//global rs2_av : bool init true;
//global rs3_av : bool init true;

module M1
p1: [0..2] init 0;	//decision process state
s1: [0..3] init 0;	//selection state
r1_av : bool init true;

[rs1!] (p1=1) & (s1=0) -> (p1'=2) & (s1'=1);
[rs2!] (p1=1) & (s1=0) -> (p1'=2) & (s1'=2);
[rs3!] (p1=1) & (s1=0) -> (p1'=2) & (s1'=3);

[av?] (p1=0) -> (r1_av'=true) & (p1'=1);
[nv?] (p1=0) -> (r1_av'=false) & (p1'=0);
//[re3?] (p1=0) -> (rs3_av'=false) & (p1'=1);

[] (p1=2) & (s1>0) -> (p1'=0);
[] (p1=2) -> true; 

endmodule

//================================
system "A2" 
    M2
endsystem

module M2 = M1 [p1=p2, s1=s2, r1_av=r2_av] endmodule

//module M2
//p2: [0..2] init 0;	//decision process state
//s2: [0..3] init 0;	//selection state

//[r1!] (p2=1) & (s2=0)-> (p2'=2) & (s2'=1);
//[r2!] (p2=1) & (s2=0)-> (p2'=2) & (s2'=2);
//[r3!] (p2=1) & (s2=0)-> (p2'=2) & (s2'=3);

//[re1?] (p2=0) -> (rs1_av'=false) & (p2'=1);
//[re2?] (p2=0) -> (rs2_av'=false) & (p2'=1);
//[re3?] (p2=0) -> (rs3_av'=false) & (p2'=1);

//[] (p2=2) -> (p2'=0);
//[] (p2=2) -> (p2'=2); 
//endmodule


// rewards
//rewards "r1"
//	[a] true : 1;
//endrewards


//formula total_rt = max(rt_rs1, rt_rs2, rt_rs3);
//formula total_rs = cur_rs + new_rs;

//execution time / response time reward
rewards "rt1"
    [rs1] true : 1;
endrewards

//resource utilization
rewards "ru1"
    [rs1] true : 1;
endrewards
