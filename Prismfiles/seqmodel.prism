smg
//=========Player definition=======
player p1
planner,[n0r0],[n0r1],[n0r2],[n0r3],[n0r4],[n0r5],[n0r6],[n0r7],[n0r8],[n0r9],[n0r10],[n0r11],[n0r12],[n0r13],[n0r14],[n0r15],[n0r16],[n0r17],[n0r18],[n0r19],[n0r20],[n0r21],[n0r22],[n0r23],[n0r24],[n0r25],[n0r26],[n0r27],[n0r28],[n0r29],[n0r30],[n0r31],[n0r32],[n0r33],[n0r34],[n0r35],[n0r36],[n0r37],[n0r38],[n0r39],[n0r40],[n0r41],[n0r42],[n0r43],[n0r44],[n0r45],[n0r46],[n0r47],[n0r48],[n0r49],[n1r0],[n1r1],[n1r2],[n1r3],[n1r4],[n1r5],[n1r6],[n1r7],[n1r8],[n1r9],[n1r10],[n1r11],[n1r12],[n1r13],[n1r14],[n1r15],[n1r16],[n1r17],[n1r18],[n1r19],[n1r20],[n1r21],[n1r22],[n1r23],[n1r24],[n1r25],[n1r26],[n1r27],[n1r28],[n1r29],[n1r30],[n1r31],[n1r32],[n1r33],[n1r34],[n1r35],[n1r36],[n1r37],[n1r38],[n1r39],[n1r40],[n1r41],[n1r42],[n1r43],[n1r44],[n1r45],[n1r46],[n1r47],[n1r48],[n1r49],[be],[end]
endplayer

player p2
environment,[n0e0],[n0e1],[n0e2],[n0e3],[n0e4],[n1e0],[n1e1],[n1e2],[n1e3],[n1e4]
endplayer

//=========User Requirements=======
const int A0_ID = 0;
const int A0_DUR = 10; //cost
const double A0_REL = 0.9; //reliability
const double A0_COST= 20; //max cost
const double A0_WG_COST = 0.3; //weight for cost
const double A0_WG_DUR = 0.3; //weight for duration
const double A0_WG_REL = 0.4; //weight for reliability

//=========Resource Profiles=======
const int MXN=2;
const int N0_MAX_SV=50;	//finite number of services
const int N0_MAX_EV=5;	//finite number of computing nodes
const int N1_MAX_SV=50;	//finite number of services
const int N1_MAX_EV=5;	//finite number of computing nodes

const int N0_RS0_ID = 0;
const int N0_RS0_COST = 47;	//cost
const bool N0_RS0_AVAIL = true;	//availability status
const int N0_RS0_DUR0 = 52;	//duration 0;
const int N0_RS0_DUR1 = 91;	//duration 1;
const int N0_RS0_DUR2 = 29;	//duration 2;
const int N0_RS0_DUR3 = 92;	//duration 3;
const int N0_RS0_DUR4 = 94;	//duration 4;
const double N0_RS0_REL0 = 0.13445738289283682;	//reliability 0;
const double N0_RS0_REL1 = 0.03650949632910727;	//reliability 1;
const double N0_RS0_REL2 = 0.40252644949022043;	//reliability 2;
const double N0_RS0_REL3 = 0.8171976732466789;	//reliability 3;
const double N0_RS0_REL4 = 0.17155678773139293;	//reliability 4;

const int N0_RS1_ID = 1;
const int N0_RS1_COST = 54;	//cost
const bool N0_RS1_AVAIL = true;	//availability status
const int N0_RS1_DUR0 = 25;	//duration 0;
const int N0_RS1_DUR1 = 23;	//duration 1;
const int N0_RS1_DUR2 = 54;	//duration 2;
const int N0_RS1_DUR3 = 95;	//duration 3;
const int N0_RS1_DUR4 = 3;	//duration 4;
const double N0_RS1_REL0 = 0.38427059294653465;	//reliability 0;
const double N0_RS1_REL1 = 0.1846476617055478;	//reliability 1;
const double N0_RS1_REL2 = 0.39942058700794614;	//reliability 2;
const double N0_RS1_REL3 = 0.9498097548975102;	//reliability 3;
const double N0_RS1_REL4 = 0.27964745009306335;	//reliability 4;

const int N0_RS2_ID = 2;
const int N0_RS2_COST = 31;	//cost
const bool N0_RS2_AVAIL = true;	//availability status
const int N0_RS2_DUR0 = 41;	//duration 0;
const int N0_RS2_DUR1 = 71;	//duration 1;
const int N0_RS2_DUR2 = 0;	//duration 2;
const int N0_RS2_DUR3 = 36;	//duration 3;
const int N0_RS2_DUR4 = 66;	//duration 4;
const double N0_RS2_REL0 = 0.743373823826594;	//reliability 0;
const double N0_RS2_REL1 = 0.5815821643529516;	//reliability 1;
const double N0_RS2_REL2 = 0.20168372592144201;	//reliability 2;
const double N0_RS2_REL3 = 0.21550441148631772;	//reliability 3;
const double N0_RS2_REL4 = 0.9206601518251549;	//reliability 4;

const int N0_RS3_ID = 3;
const int N0_RS3_COST = 26;	//cost
const bool N0_RS3_AVAIL = true;	//availability status
const int N0_RS3_DUR0 = 80;	//duration 0;
const int N0_RS3_DUR1 = 49;	//duration 1;
const int N0_RS3_DUR2 = 35;	//duration 2;
const int N0_RS3_DUR3 = 52;	//duration 3;
const int N0_RS3_DUR4 = 58;	//duration 4;
const double N0_RS3_REL0 = 0.957956536259342;	//reliability 0;
const double N0_RS3_REL1 = 0.7455165727081767;	//reliability 1;
const double N0_RS3_REL2 = 0.9476767146414219;	//reliability 2;
const double N0_RS3_REL3 = 0.851854153619873;	//reliability 3;
const double N0_RS3_REL4 = 0.7216446687125678;	//reliability 4;

const int N0_RS4_ID = 4;
const int N0_RS4_COST = 58;	//cost
const bool N0_RS4_AVAIL = true;	//availability status
const int N0_RS4_DUR0 = 4;	//duration 0;
const int N0_RS4_DUR1 = 69;	//duration 1;
const int N0_RS4_DUR2 = 60;	//duration 2;
const int N0_RS4_DUR3 = 17;	//duration 3;
const int N0_RS4_DUR4 = 7;	//duration 4;
const double N0_RS4_REL0 = 0.29455768443351094;	//reliability 0;
const double N0_RS4_REL1 = 0.8763533905782186;	//reliability 1;
const double N0_RS4_REL2 = 0.4323601044462041;	//reliability 2;
const double N0_RS4_REL3 = 0.6239907188432522;	//reliability 3;
const double N0_RS4_REL4 = 0.5236383342377066;	//reliability 4;

const int N0_RS5_ID = 5;
const int N0_RS5_COST = 28;	//cost
const bool N0_RS5_AVAIL = true;	//availability status
const int N0_RS5_DUR0 = 19;	//duration 0;
const int N0_RS5_DUR1 = 41;	//duration 1;
const int N0_RS5_DUR2 = 90;	//duration 2;
const int N0_RS5_DUR3 = 29;	//duration 3;
const int N0_RS5_DUR4 = 88;	//duration 4;
const double N0_RS5_REL0 = 0.35403495572573207;	//reliability 0;
const double N0_RS5_REL1 = 0.8329482813010894;	//reliability 1;
const double N0_RS5_REL2 = 0.8078388716208397;	//reliability 2;
const double N0_RS5_REL3 = 0.7880027396877123;	//reliability 3;
const double N0_RS5_REL4 = 0.6270970129029533;	//reliability 4;

const int N0_RS6_ID = 6;
const int N0_RS6_COST = 36;	//cost
const bool N0_RS6_AVAIL = true;	//availability status
const int N0_RS6_DUR0 = 56;	//duration 0;
const int N0_RS6_DUR1 = 42;	//duration 1;
const int N0_RS6_DUR2 = 76;	//duration 2;
const int N0_RS6_DUR3 = 98;	//duration 3;
const int N0_RS6_DUR4 = 46;	//duration 4;
const double N0_RS6_REL0 = 0.08324053620873151;	//reliability 0;
const double N0_RS6_REL1 = 0.8466614778220298;	//reliability 1;
const double N0_RS6_REL2 = 0.13883105589028666;	//reliability 2;
const double N0_RS6_REL3 = 0.36799106079425303;	//reliability 3;
const double N0_RS6_REL4 = 0.9929035384594226;	//reliability 4;

const int N0_RS7_ID = 7;
const int N0_RS7_COST = 43;	//cost
const bool N0_RS7_AVAIL = true;	//availability status
const int N0_RS7_DUR0 = 76;	//duration 0;
const int N0_RS7_DUR1 = 60;	//duration 1;
const int N0_RS7_DUR2 = 18;	//duration 2;
const int N0_RS7_DUR3 = 54;	//duration 3;
const int N0_RS7_DUR4 = 17;	//duration 4;
const double N0_RS7_REL0 = 0.5715903309967452;	//reliability 0;
const double N0_RS7_REL1 = 0.5299854991601664;	//reliability 1;
const double N0_RS7_REL2 = 0.005113740557208923;	//reliability 2;
const double N0_RS7_REL3 = 0.9300805577626688;	//reliability 3;
const double N0_RS7_REL4 = 0.5183818370949101;	//reliability 4;

const int N0_RS8_ID = 8;
const int N0_RS8_COST = 44;	//cost
const bool N0_RS8_AVAIL = true;	//availability status
const int N0_RS8_DUR0 = 41;	//duration 0;
const int N0_RS8_DUR1 = 14;	//duration 1;
const int N0_RS8_DUR2 = 51;	//duration 2;
const int N0_RS8_DUR3 = 82;	//duration 3;
const int N0_RS8_DUR4 = 28;	//duration 4;
const double N0_RS8_REL0 = 0.3605107134657458;	//reliability 0;
const double N0_RS8_REL1 = 0.30737581153057314;	//reliability 1;
const double N0_RS8_REL2 = 0.22659345374268547;	//reliability 2;
const double N0_RS8_REL3 = 0.07634753449718279;	//reliability 3;
const double N0_RS8_REL4 = 0.7474200618441499;	//reliability 4;

const int N0_RS9_ID = 9;
const int N0_RS9_COST = 21;	//cost
const bool N0_RS9_AVAIL = true;	//availability status
const int N0_RS9_DUR0 = 21;	//duration 0;
const int N0_RS9_DUR1 = 80;	//duration 1;
const int N0_RS9_DUR2 = 4;	//duration 2;
const int N0_RS9_DUR3 = 29;	//duration 3;
const int N0_RS9_DUR4 = 54;	//duration 4;
const double N0_RS9_REL0 = 0.9305021666365526;	//reliability 0;
const double N0_RS9_REL1 = 0.22944579587157;	//reliability 1;
const double N0_RS9_REL2 = 0.6712812620052969;	//reliability 2;
const double N0_RS9_REL3 = 0.17329861973204197;	//reliability 3;
const double N0_RS9_REL4 = 0.8820938590701619;	//reliability 4;

const int N0_RS10_ID = 10;
const int N0_RS10_COST = 51;	//cost
const bool N0_RS10_AVAIL = true;	//availability status
const int N0_RS10_DUR0 = 77;	//duration 0;
const int N0_RS10_DUR1 = 14;	//duration 1;
const int N0_RS10_DUR2 = 5;	//duration 2;
const int N0_RS10_DUR3 = 74;	//duration 3;
const int N0_RS10_DUR4 = 75;	//duration 4;
const double N0_RS10_REL0 = 0.26815856320139153;	//reliability 0;
const double N0_RS10_REL1 = 0.5644141121601931;	//reliability 1;
const double N0_RS10_REL2 = 0.40325427673256353;	//reliability 2;
const double N0_RS10_REL3 = 0.11248377124478814;	//reliability 3;
const double N0_RS10_REL4 = 0.057469698167790906;	//reliability 4;

const int N0_RS11_ID = 11;
const int N0_RS11_COST = 38;	//cost
const bool N0_RS11_AVAIL = true;	//availability status
const int N0_RS11_DUR0 = 49;	//duration 0;
const int N0_RS11_DUR1 = 25;	//duration 1;
const int N0_RS11_DUR2 = 90;	//duration 2;
const int N0_RS11_DUR3 = 67;	//duration 3;
const int N0_RS11_DUR4 = 74;	//duration 4;
const double N0_RS11_REL0 = 0.09942848979533714;	//reliability 0;
const double N0_RS11_REL1 = 0.8157483868664223;	//reliability 1;
const double N0_RS11_REL2 = 0.6884169199384683;	//reliability 2;
const double N0_RS11_REL3 = 0.30492852424207617;	//reliability 3;
const double N0_RS11_REL4 = 0.4795624206439838;	//reliability 4;

const int N0_RS12_ID = 12;
const int N0_RS12_COST = 26;	//cost
const bool N0_RS12_AVAIL = true;	//availability status
const int N0_RS12_DUR0 = 49;	//duration 0;
const int N0_RS12_DUR1 = 78;	//duration 1;
const int N0_RS12_DUR2 = 61;	//duration 2;
const int N0_RS12_DUR3 = 74;	//duration 3;
const int N0_RS12_DUR4 = 32;	//duration 4;
const double N0_RS12_REL0 = 0.5418369938479158;	//reliability 0;
const double N0_RS12_REL1 = 0.2565866784327311;	//reliability 1;
const double N0_RS12_REL2 = 0.5429164730677598;	//reliability 2;
const double N0_RS12_REL3 = 0.4068356608757847;	//reliability 3;
const double N0_RS12_REL4 = 0.057353900070550634;	//reliability 4;

const int N0_RS13_ID = 13;
const int N0_RS13_COST = 52;	//cost
const bool N0_RS13_AVAIL = true;	//availability status
const int N0_RS13_DUR0 = 30;	//duration 0;
const int N0_RS13_DUR1 = 10;	//duration 1;
const int N0_RS13_DUR2 = 0;	//duration 2;
const int N0_RS13_DUR3 = 25;	//duration 3;
const int N0_RS13_DUR4 = 51;	//duration 4;
const double N0_RS13_REL0 = 0.7540582746669525;	//reliability 0;
const double N0_RS13_REL1 = 0.4546254661346495;	//reliability 1;
const double N0_RS13_REL2 = 0.1654283127972428;	//reliability 2;
const double N0_RS13_REL3 = 0.12256694111917399;	//reliability 3;
const double N0_RS13_REL4 = 0.57261074934253;	//reliability 4;

const int N0_RS14_ID = 14;
const int N0_RS14_COST = 57;	//cost
const bool N0_RS14_AVAIL = true;	//availability status
const int N0_RS14_DUR0 = 82;	//duration 0;
const int N0_RS14_DUR1 = 17;	//duration 1;
const int N0_RS14_DUR2 = 31;	//duration 2;
const int N0_RS14_DUR3 = 14;	//duration 3;
const int N0_RS14_DUR4 = 10;	//duration 4;
const double N0_RS14_REL0 = 0.2135248974375401;	//reliability 0;
const double N0_RS14_REL1 = 0.9812438328675375;	//reliability 1;
const double N0_RS14_REL2 = 0.21383865253689005;	//reliability 2;
const double N0_RS14_REL3 = 0.6340284871306642;	//reliability 3;
const double N0_RS14_REL4 = 0.6058487037336487;	//reliability 4;

const int N0_RS15_ID = 15;
const int N0_RS15_COST = 36;	//cost
const bool N0_RS15_AVAIL = true;	//availability status
const int N0_RS15_DUR0 = 38;	//duration 0;
const int N0_RS15_DUR1 = 79;	//duration 1;
const int N0_RS15_DUR2 = 83;	//duration 2;
const int N0_RS15_DUR3 = 81;	//duration 3;
const int N0_RS15_DUR4 = 60;	//duration 4;
const double N0_RS15_REL0 = 0.739687129813644;	//reliability 0;
const double N0_RS15_REL1 = 0.841822534201485;	//reliability 1;
const double N0_RS15_REL2 = 0.08337392960114687;	//reliability 2;
const double N0_RS15_REL3 = 0.955633729616162;	//reliability 3;
const double N0_RS15_REL4 = 0.39368945273175593;	//reliability 4;

const int N0_RS16_ID = 16;
const int N0_RS16_COST = 32;	//cost
const bool N0_RS16_AVAIL = true;	//availability status
const int N0_RS16_DUR0 = 42;	//duration 0;
const int N0_RS16_DUR1 = 62;	//duration 1;
const int N0_RS16_DUR2 = 30;	//duration 2;
const int N0_RS16_DUR3 = 6;	//duration 3;
const int N0_RS16_DUR4 = 23;	//duration 4;
const double N0_RS16_REL0 = 0.40072628530414844;	//reliability 0;
const double N0_RS16_REL1 = 0.5572722775521415;	//reliability 1;
const double N0_RS16_REL2 = 0.1218405238407485;	//reliability 2;
const double N0_RS16_REL3 = 0.6440109681246088;	//reliability 3;
const double N0_RS16_REL4 = 0.44317308862534555;	//reliability 4;

const int N0_RS17_ID = 17;
const int N0_RS17_COST = 47;	//cost
const bool N0_RS17_AVAIL = true;	//availability status
const int N0_RS17_DUR0 = 48;	//duration 0;
const int N0_RS17_DUR1 = 87;	//duration 1;
const int N0_RS17_DUR2 = 57;	//duration 2;
const int N0_RS17_DUR3 = 80;	//duration 3;
const int N0_RS17_DUR4 = 78;	//duration 4;
const double N0_RS17_REL0 = 0.23423982861125492;	//reliability 0;
const double N0_RS17_REL1 = 0.08708804979388973;	//reliability 1;
const double N0_RS17_REL2 = 0.7238524351890735;	//reliability 2;
const double N0_RS17_REL3 = 0.5251923841558512;	//reliability 3;
const double N0_RS17_REL4 = 0.12408686954659787;	//reliability 4;

const int N0_RS18_ID = 18;
const int N0_RS18_COST = 41;	//cost
const bool N0_RS18_AVAIL = true;	//availability status
const int N0_RS18_DUR0 = 82;	//duration 0;
const int N0_RS18_DUR1 = 83;	//duration 1;
const int N0_RS18_DUR2 = 37;	//duration 2;
const int N0_RS18_DUR3 = 88;	//duration 3;
const int N0_RS18_DUR4 = 31;	//duration 4;
const double N0_RS18_REL0 = 0.9075333049788485;	//reliability 0;
const double N0_RS18_REL1 = 0.36980727318438666;	//reliability 1;
const double N0_RS18_REL2 = 0.015871262911867245;	//reliability 2;
const double N0_RS18_REL3 = 0.3034265977947792;	//reliability 3;
const double N0_RS18_REL4 = 0.04342716104477584;	//reliability 4;

const int N0_RS19_ID = 19;
const int N0_RS19_COST = 34;	//cost
const bool N0_RS19_AVAIL = true;	//availability status
const int N0_RS19_DUR0 = 58;	//duration 0;
const int N0_RS19_DUR1 = 65;	//duration 1;
const int N0_RS19_DUR2 = 58;	//duration 2;
const int N0_RS19_DUR3 = 19;	//duration 3;
const int N0_RS19_DUR4 = 72;	//duration 4;
const double N0_RS19_REL0 = 0.3111851992273882;	//reliability 0;
const double N0_RS19_REL1 = 0.5161976304195883;	//reliability 1;
const double N0_RS19_REL2 = 0.054321326920656055;	//reliability 2;
const double N0_RS19_REL3 = 0.3398779035225147;	//reliability 3;
const double N0_RS19_REL4 = 0.8597385887841036;	//reliability 4;

const int N0_RS20_ID = 20;
const int N0_RS20_COST = 54;	//cost
const bool N0_RS20_AVAIL = true;	//availability status
const int N0_RS20_DUR0 = 19;	//duration 0;
const int N0_RS20_DUR1 = 53;	//duration 1;
const int N0_RS20_DUR2 = 6;	//duration 2;
const int N0_RS20_DUR3 = 70;	//duration 3;
const int N0_RS20_DUR4 = 71;	//duration 4;
const double N0_RS20_REL0 = 0.7816267401047167;	//reliability 0;
const double N0_RS20_REL1 = 0.11309696622804888;	//reliability 1;
const double N0_RS20_REL2 = 0.17735340281298895;	//reliability 2;
const double N0_RS20_REL3 = 0.43182313208481127;	//reliability 3;
const double N0_RS20_REL4 = 0.29290194058848695;	//reliability 4;

const int N0_RS21_ID = 21;
const int N0_RS21_COST = 21;	//cost
const bool N0_RS21_AVAIL = true;	//availability status
const int N0_RS21_DUR0 = 82;	//duration 0;
const int N0_RS21_DUR1 = 29;	//duration 1;
const int N0_RS21_DUR2 = 75;	//duration 2;
const int N0_RS21_DUR3 = 68;	//duration 3;
const int N0_RS21_DUR4 = 69;	//duration 4;
const double N0_RS21_REL0 = 0.486357364512369;	//reliability 0;
const double N0_RS21_REL1 = 0.5614532987341916;	//reliability 1;
const double N0_RS21_REL2 = 0.08502352895000076;	//reliability 2;
const double N0_RS21_REL3 = 0.8696611402681512;	//reliability 3;
const double N0_RS21_REL4 = 0.5412295752295923;	//reliability 4;

const int N0_RS22_ID = 22;
const int N0_RS22_COST = 50;	//cost
const bool N0_RS22_AVAIL = true;	//availability status
const int N0_RS22_DUR0 = 28;	//duration 0;
const int N0_RS22_DUR1 = 84;	//duration 1;
const int N0_RS22_DUR2 = 35;	//duration 2;
const int N0_RS22_DUR3 = 38;	//duration 3;
const int N0_RS22_DUR4 = 47;	//duration 4;
const double N0_RS22_REL0 = 0.1714825548557508;	//reliability 0;
const double N0_RS22_REL1 = 0.40127613053048716;	//reliability 1;
const double N0_RS22_REL2 = 0.9713601684596159;	//reliability 2;
const double N0_RS22_REL3 = 0.32687125309291776;	//reliability 3;
const double N0_RS22_REL4 = 0.637357429650963;	//reliability 4;

const int N0_RS23_ID = 23;
const int N0_RS23_COST = 18;	//cost
const bool N0_RS23_AVAIL = true;	//availability status
const int N0_RS23_DUR0 = 11;	//duration 0;
const int N0_RS23_DUR1 = 50;	//duration 1;
const int N0_RS23_DUR2 = 98;	//duration 2;
const int N0_RS23_DUR3 = 80;	//duration 3;
const int N0_RS23_DUR4 = 18;	//duration 4;
const double N0_RS23_REL0 = 0.29851908418457507;	//reliability 0;
const double N0_RS23_REL1 = 0.5800442459075348;	//reliability 1;
const double N0_RS23_REL2 = 0.3342716193511549;	//reliability 2;
const double N0_RS23_REL3 = 0.5643752728493368;	//reliability 3;
const double N0_RS23_REL4 = 0.6029017037310214;	//reliability 4;

const int N0_RS24_ID = 24;
const int N0_RS24_COST = 30;	//cost
const bool N0_RS24_AVAIL = true;	//availability status
const int N0_RS24_DUR0 = 55;	//duration 0;
const int N0_RS24_DUR1 = 62;	//duration 1;
const int N0_RS24_DUR2 = 66;	//duration 2;
const int N0_RS24_DUR3 = 7;	//duration 3;
const int N0_RS24_DUR4 = 9;	//duration 4;
const double N0_RS24_REL0 = 0.8094988556992597;	//reliability 0;
const double N0_RS24_REL1 = 0.15137704929798412;	//reliability 1;
const double N0_RS24_REL2 = 0.07537932067940478;	//reliability 2;
const double N0_RS24_REL3 = 0.4635841949953945;	//reliability 3;
const double N0_RS24_REL4 = 0.635311339146661;	//reliability 4;

const int N0_RS25_ID = 25;
const int N0_RS25_COST = 26;	//cost
const bool N0_RS25_AVAIL = true;	//availability status
const int N0_RS25_DUR0 = 90;	//duration 0;
const int N0_RS25_DUR1 = 46;	//duration 1;
const int N0_RS25_DUR2 = 35;	//duration 2;
const int N0_RS25_DUR3 = 3;	//duration 3;
const int N0_RS25_DUR4 = 66;	//duration 4;
const double N0_RS25_REL0 = 0.7205726373097495;	//reliability 0;
const double N0_RS25_REL1 = 0.8898498015273004;	//reliability 1;
const double N0_RS25_REL2 = 0.9421589000950386;	//reliability 2;
const double N0_RS25_REL3 = 0.3903742767042233;	//reliability 3;
const double N0_RS25_REL4 = 0.15555103883008847;	//reliability 4;

const int N0_RS26_ID = 26;
const int N0_RS26_COST = 14;	//cost
const bool N0_RS26_AVAIL = true;	//availability status
const int N0_RS26_DUR0 = 37;	//duration 0;
const int N0_RS26_DUR1 = 41;	//duration 1;
const int N0_RS26_DUR2 = 98;	//duration 2;
const int N0_RS26_DUR3 = 76;	//duration 3;
const int N0_RS26_DUR4 = 55;	//duration 4;
const double N0_RS26_REL0 = 0.20945245864563167;	//reliability 0;
const double N0_RS26_REL1 = 0.35872443624939565;	//reliability 1;
const double N0_RS26_REL2 = 0.920362015740329;	//reliability 2;
const double N0_RS26_REL3 = 0.32459963912525036;	//reliability 3;
const double N0_RS26_REL4 = 0.9295759877026633;	//reliability 4;

const int N0_RS27_ID = 27;
const int N0_RS27_COST = 26;	//cost
const bool N0_RS27_AVAIL = true;	//availability status
const int N0_RS27_DUR0 = 83;	//duration 0;
const int N0_RS27_DUR1 = 50;	//duration 1;
const int N0_RS27_DUR2 = 90;	//duration 2;
const int N0_RS27_DUR3 = 5;	//duration 3;
const int N0_RS27_DUR4 = 88;	//duration 4;
const double N0_RS27_REL0 = 0.22664385530799425;	//reliability 0;
const double N0_RS27_REL1 = 0.5437117554074243;	//reliability 1;
const double N0_RS27_REL2 = 0.6573375195917648;	//reliability 2;
const double N0_RS27_REL3 = 0.9463893840476308;	//reliability 3;
const double N0_RS27_REL4 = 0.858018147628792;	//reliability 4;

const int N0_RS28_ID = 28;
const int N0_RS28_COST = 57;	//cost
const bool N0_RS28_AVAIL = true;	//availability status
const int N0_RS28_DUR0 = 16;	//duration 0;
const int N0_RS28_DUR1 = 83;	//duration 1;
const int N0_RS28_DUR2 = 94;	//duration 2;
const int N0_RS28_DUR3 = 98;	//duration 3;
const int N0_RS28_DUR4 = 97;	//duration 4;
const double N0_RS28_REL0 = 0.21064002143675853;	//reliability 0;
const double N0_RS28_REL1 = 0.881933398100181;	//reliability 1;
const double N0_RS28_REL2 = 0.578950570822328;	//reliability 2;
const double N0_RS28_REL3 = 0.9719063878625342;	//reliability 3;
const double N0_RS28_REL4 = 0.5057262614783546;	//reliability 4;

const int N0_RS29_ID = 29;
const int N0_RS29_COST = 39;	//cost
const bool N0_RS29_AVAIL = true;	//availability status
const int N0_RS29_DUR0 = 15;	//duration 0;
const int N0_RS29_DUR1 = 69;	//duration 1;
const int N0_RS29_DUR2 = 36;	//duration 2;
const int N0_RS29_DUR3 = 16;	//duration 3;
const int N0_RS29_DUR4 = 77;	//duration 4;
const double N0_RS29_REL0 = 0.6498356788804116;	//reliability 0;
const double N0_RS29_REL1 = 0.37589762316975517;	//reliability 1;
const double N0_RS29_REL2 = 0.8873236153078192;	//reliability 2;
const double N0_RS29_REL3 = 0.3885944459659696;	//reliability 3;
const double N0_RS29_REL4 = 0.25504607900504694;	//reliability 4;

const int N0_RS30_ID = 30;
const int N0_RS30_COST = 19;	//cost
const bool N0_RS30_AVAIL = true;	//availability status
const int N0_RS30_DUR0 = 36;	//duration 0;
const int N0_RS30_DUR1 = 40;	//duration 1;
const int N0_RS30_DUR2 = 35;	//duration 2;
const int N0_RS30_DUR3 = 83;	//duration 3;
const int N0_RS30_DUR4 = 22;	//duration 4;
const double N0_RS30_REL0 = 0.8262536243938454;	//reliability 0;
const double N0_RS30_REL1 = 0.13304790285472234;	//reliability 1;
const double N0_RS30_REL2 = 0.8172241294562175;	//reliability 2;
const double N0_RS30_REL3 = 0.9049678403163013;	//reliability 3;
const double N0_RS30_REL4 = 0.7438767151902148;	//reliability 4;

const int N0_RS31_ID = 31;
const int N0_RS31_COST = 34;	//cost
const bool N0_RS31_AVAIL = true;	//availability status
const int N0_RS31_DUR0 = 93;	//duration 0;
const int N0_RS31_DUR1 = 2;	//duration 1;
const int N0_RS31_DUR2 = 37;	//duration 2;
const int N0_RS31_DUR3 = 85;	//duration 3;
const int N0_RS31_DUR4 = 84;	//duration 4;
const double N0_RS31_REL0 = 0.5562676550276071;	//reliability 0;
const double N0_RS31_REL1 = 0.6484221628954188;	//reliability 1;
const double N0_RS31_REL2 = 0.2498600311058612;	//reliability 2;
const double N0_RS31_REL3 = 0.345086289845566;	//reliability 3;
const double N0_RS31_REL4 = 0.2621005518920727;	//reliability 4;

const int N0_RS32_ID = 32;
const int N0_RS32_COST = 14;	//cost
const bool N0_RS32_AVAIL = true;	//availability status
const int N0_RS32_DUR0 = 29;	//duration 0;
const int N0_RS32_DUR1 = 67;	//duration 1;
const int N0_RS32_DUR2 = 23;	//duration 2;
const int N0_RS32_DUR3 = 27;	//duration 3;
const int N0_RS32_DUR4 = 73;	//duration 4;
const double N0_RS32_REL0 = 0.4599862062895461;	//reliability 0;
const double N0_RS32_REL1 = 0.12792893894271673;	//reliability 1;
const double N0_RS32_REL2 = 0.2889966844588562;	//reliability 2;
const double N0_RS32_REL3 = 0.9660153507000176;	//reliability 3;
const double N0_RS32_REL4 = 0.1890915377046326;	//reliability 4;

const int N0_RS33_ID = 33;
const int N0_RS33_COST = 30;	//cost
const bool N0_RS33_AVAIL = true;	//availability status
const int N0_RS33_DUR0 = 35;	//duration 0;
const int N0_RS33_DUR1 = 92;	//duration 1;
const int N0_RS33_DUR2 = 96;	//duration 2;
const int N0_RS33_DUR3 = 78;	//duration 3;
const int N0_RS33_DUR4 = 84;	//duration 4;
const double N0_RS33_REL0 = 0.7330879322983757;	//reliability 0;
const double N0_RS33_REL1 = 0.2000898251719182;	//reliability 1;
const double N0_RS33_REL2 = 0.591187641662806;	//reliability 2;
const double N0_RS33_REL3 = 0.7314321218084981;	//reliability 3;
const double N0_RS33_REL4 = 0.6624172021464734;	//reliability 4;

const int N0_RS34_ID = 34;
const int N0_RS34_COST = 11;	//cost
const bool N0_RS34_AVAIL = true;	//availability status
const int N0_RS34_DUR0 = 45;	//duration 0;
const int N0_RS34_DUR1 = 78;	//duration 1;
const int N0_RS34_DUR2 = 86;	//duration 2;
const int N0_RS34_DUR3 = 42;	//duration 3;
const int N0_RS34_DUR4 = 90;	//duration 4;
const double N0_RS34_REL0 = 0.4425575928667791;	//reliability 0;
const double N0_RS34_REL1 = 0.1928211199038028;	//reliability 1;
const double N0_RS34_REL2 = 0.895647366825936;	//reliability 2;
const double N0_RS34_REL3 = 0.5503540980845063;	//reliability 3;
const double N0_RS34_REL4 = 0.16594579700045964;	//reliability 4;

const int N0_RS35_ID = 35;
const int N0_RS35_COST = 19;	//cost
const bool N0_RS35_AVAIL = true;	//availability status
const int N0_RS35_DUR0 = 15;	//duration 0;
const int N0_RS35_DUR1 = 87;	//duration 1;
const int N0_RS35_DUR2 = 68;	//duration 2;
const int N0_RS35_DUR3 = 63;	//duration 3;
const int N0_RS35_DUR4 = 22;	//duration 4;
const double N0_RS35_REL0 = 0.5414652539134265;	//reliability 0;
const double N0_RS35_REL1 = 0.357565808789696;	//reliability 1;
const double N0_RS35_REL2 = 0.24664614815753572;	//reliability 2;
const double N0_RS35_REL3 = 0.8916303883746279;	//reliability 3;
const double N0_RS35_REL4 = 0.9473609498108906;	//reliability 4;

const int N0_RS36_ID = 36;
const int N0_RS36_COST = 28;	//cost
const bool N0_RS36_AVAIL = true;	//availability status
const int N0_RS36_DUR0 = 68;	//duration 0;
const int N0_RS36_DUR1 = 32;	//duration 1;
const int N0_RS36_DUR2 = 78;	//duration 2;
const int N0_RS36_DUR3 = 77;	//duration 3;
const int N0_RS36_DUR4 = 80;	//duration 4;
const double N0_RS36_REL0 = 0.5087969507937289;	//reliability 0;
const double N0_RS36_REL1 = 0.7450970671496573;	//reliability 1;
const double N0_RS36_REL2 = 0.15965760234521564;	//reliability 2;
const double N0_RS36_REL3 = 0.1578451587910059;	//reliability 3;
const double N0_RS36_REL4 = 0.34420238437232353;	//reliability 4;

const int N0_RS37_ID = 37;
const int N0_RS37_COST = 28;	//cost
const bool N0_RS37_AVAIL = true;	//availability status
const int N0_RS37_DUR0 = 40;	//duration 0;
const int N0_RS37_DUR1 = 54;	//duration 1;
const int N0_RS37_DUR2 = 99;	//duration 2;
const int N0_RS37_DUR3 = 56;	//duration 3;
const int N0_RS37_DUR4 = 68;	//duration 4;
const double N0_RS37_REL0 = 0.32013780527017954;	//reliability 0;
const double N0_RS37_REL1 = 0.005479086952462131;	//reliability 1;
const double N0_RS37_REL2 = 0.4098459600049905;	//reliability 2;
const double N0_RS37_REL3 = 0.7827776963830797;	//reliability 3;
const double N0_RS37_REL4 = 0.5782534113868839;	//reliability 4;

const int N0_RS38_ID = 38;
const int N0_RS38_COST = 23;	//cost
const bool N0_RS38_AVAIL = true;	//availability status
const int N0_RS38_DUR0 = 61;	//duration 0;
const int N0_RS38_DUR1 = 78;	//duration 1;
const int N0_RS38_DUR2 = 64;	//duration 2;
const int N0_RS38_DUR3 = 93;	//duration 3;
const int N0_RS38_DUR4 = 50;	//duration 4;
const double N0_RS38_REL0 = 0.28611323808991984;	//reliability 0;
const double N0_RS38_REL1 = 0.9694989991984337;	//reliability 1;
const double N0_RS38_REL2 = 0.06647614695631765;	//reliability 2;
const double N0_RS38_REL3 = 0.38129711453279913;	//reliability 3;
const double N0_RS38_REL4 = 0.12526414637017247;	//reliability 4;

const int N0_RS39_ID = 39;
const int N0_RS39_COST = 27;	//cost
const bool N0_RS39_AVAIL = true;	//availability status
const int N0_RS39_DUR0 = 89;	//duration 0;
const int N0_RS39_DUR1 = 37;	//duration 1;
const int N0_RS39_DUR2 = 74;	//duration 2;
const int N0_RS39_DUR3 = 14;	//duration 3;
const int N0_RS39_DUR4 = 94;	//duration 4;
const double N0_RS39_REL0 = 0.7409171059280045;	//reliability 0;
const double N0_RS39_REL1 = 0.13150562933944976;	//reliability 1;
const double N0_RS39_REL2 = 0.8487228970277614;	//reliability 2;
const double N0_RS39_REL3 = 0.9969292213436074;	//reliability 3;
const double N0_RS39_REL4 = 0.7761436493050847;	//reliability 4;

const int N0_RS40_ID = 40;
const int N0_RS40_COST = 43;	//cost
const bool N0_RS40_AVAIL = true;	//availability status
const int N0_RS40_DUR0 = 3;	//duration 0;
const int N0_RS40_DUR1 = 53;	//duration 1;
const int N0_RS40_DUR2 = 94;	//duration 2;
const int N0_RS40_DUR3 = 56;	//duration 3;
const int N0_RS40_DUR4 = 99;	//duration 4;
const double N0_RS40_REL0 = 0.09662987484717067;	//reliability 0;
const double N0_RS40_REL1 = 0.8957677170720331;	//reliability 1;
const double N0_RS40_REL2 = 0.21702697968438045;	//reliability 2;
const double N0_RS40_REL3 = 0.76832135823037;	//reliability 3;
const double N0_RS40_REL4 = 0.26300543609773563;	//reliability 4;

const int N0_RS41_ID = 41;
const int N0_RS41_COST = 20;	//cost
const bool N0_RS41_AVAIL = true;	//availability status
const int N0_RS41_DUR0 = 22;	//duration 0;
const int N0_RS41_DUR1 = 90;	//duration 1;
const int N0_RS41_DUR2 = 42;	//duration 2;
const int N0_RS41_DUR3 = 66;	//duration 3;
const int N0_RS41_DUR4 = 22;	//duration 4;
const double N0_RS41_REL0 = 0.014614751010801008;	//reliability 0;
const double N0_RS41_REL1 = 0.8625759065377219;	//reliability 1;
const double N0_RS41_REL2 = 0.8601078291692912;	//reliability 2;
const double N0_RS41_REL3 = 0.2700854788014071;	//reliability 3;
const double N0_RS41_REL4 = 0.2555688354785667;	//reliability 4;

const int N0_RS42_ID = 42;
const int N0_RS42_COST = 57;	//cost
const bool N0_RS42_AVAIL = true;	//availability status
const int N0_RS42_DUR0 = 54;	//duration 0;
const int N0_RS42_DUR1 = 96;	//duration 1;
const int N0_RS42_DUR2 = 0;	//duration 2;
const int N0_RS42_DUR3 = 68;	//duration 3;
const int N0_RS42_DUR4 = 36;	//duration 4;
const double N0_RS42_REL0 = 0.38795597350026945;	//reliability 0;
const double N0_RS42_REL1 = 0.34936875452830574;	//reliability 1;
const double N0_RS42_REL2 = 0.3021216545110197;	//reliability 2;
const double N0_RS42_REL3 = 0.6152753082588964;	//reliability 3;
const double N0_RS42_REL4 = 0.45778392359325315;	//reliability 4;

const int N0_RS43_ID = 43;
const int N0_RS43_COST = 25;	//cost
const bool N0_RS43_AVAIL = true;	//availability status
const int N0_RS43_DUR0 = 20;	//duration 0;
const int N0_RS43_DUR1 = 53;	//duration 1;
const int N0_RS43_DUR2 = 42;	//duration 2;
const int N0_RS43_DUR3 = 95;	//duration 3;
const int N0_RS43_DUR4 = 41;	//duration 4;
const double N0_RS43_REL0 = 0.1241801617371342;	//reliability 0;
const double N0_RS43_REL1 = 0.4897956582954478;	//reliability 1;
const double N0_RS43_REL2 = 0.2890135994318991;	//reliability 2;
const double N0_RS43_REL3 = 0.7659334969182862;	//reliability 3;
const double N0_RS43_REL4 = 0.9091711356812481;	//reliability 4;

const int N0_RS44_ID = 44;
const int N0_RS44_COST = 43;	//cost
const bool N0_RS44_AVAIL = true;	//availability status
const int N0_RS44_DUR0 = 86;	//duration 0;
const int N0_RS44_DUR1 = 8;	//duration 1;
const int N0_RS44_DUR2 = 37;	//duration 2;
const int N0_RS44_DUR3 = 29;	//duration 3;
const int N0_RS44_DUR4 = 35;	//duration 4;
const double N0_RS44_REL0 = 0.9015110210396101;	//reliability 0;
const double N0_RS44_REL1 = 0.49409679399663875;	//reliability 1;
const double N0_RS44_REL2 = 0.8602319681259046;	//reliability 2;
const double N0_RS44_REL3 = 0.6552380985228485;	//reliability 3;
const double N0_RS44_REL4 = 0.7688771054102437;	//reliability 4;

const int N0_RS45_ID = 45;
const int N0_RS45_COST = 19;	//cost
const bool N0_RS45_AVAIL = true;	//availability status
const int N0_RS45_DUR0 = 47;	//duration 0;
const int N0_RS45_DUR1 = 89;	//duration 1;
const int N0_RS45_DUR2 = 19;	//duration 2;
const int N0_RS45_DUR3 = 89;	//duration 3;
const int N0_RS45_DUR4 = 14;	//duration 4;
const double N0_RS45_REL0 = 0.8214083759798199;	//reliability 0;
const double N0_RS45_REL1 = 0.24236428114532338;	//reliability 1;
const double N0_RS45_REL2 = 0.6546617991796727;	//reliability 2;
const double N0_RS45_REL3 = 0.8409161606648846;	//reliability 3;
const double N0_RS45_REL4 = 0.3221074273720169;	//reliability 4;

const int N0_RS46_ID = 46;
const int N0_RS46_COST = 18;	//cost
const bool N0_RS46_AVAIL = true;	//availability status
const int N0_RS46_DUR0 = 4;	//duration 0;
const int N0_RS46_DUR1 = 57;	//duration 1;
const int N0_RS46_DUR2 = 36;	//duration 2;
const int N0_RS46_DUR3 = 19;	//duration 3;
const int N0_RS46_DUR4 = 11;	//duration 4;
const double N0_RS46_REL0 = 0.2625157723259366;	//reliability 0;
const double N0_RS46_REL1 = 0.21365852608412583;	//reliability 1;
const double N0_RS46_REL2 = 0.011524712439296314;	//reliability 2;
const double N0_RS46_REL3 = 0.7865335887603327;	//reliability 3;
const double N0_RS46_REL4 = 0.5782851027151589;	//reliability 4;

const int N0_RS47_ID = 47;
const int N0_RS47_COST = 17;	//cost
const bool N0_RS47_AVAIL = true;	//availability status
const int N0_RS47_DUR0 = 94;	//duration 0;
const int N0_RS47_DUR1 = 70;	//duration 1;
const int N0_RS47_DUR2 = 10;	//duration 2;
const int N0_RS47_DUR3 = 14;	//duration 3;
const int N0_RS47_DUR4 = 20;	//duration 4;
const double N0_RS47_REL0 = 0.964396539029882;	//reliability 0;
const double N0_RS47_REL1 = 0.6147206567808402;	//reliability 1;
const double N0_RS47_REL2 = 0.9223428091295991;	//reliability 2;
const double N0_RS47_REL3 = 0.19739833846907195;	//reliability 3;
const double N0_RS47_REL4 = 0.14850924117903141;	//reliability 4;

const int N0_RS48_ID = 48;
const int N0_RS48_COST = 10;	//cost
const bool N0_RS48_AVAIL = true;	//availability status
const int N0_RS48_DUR0 = 18;	//duration 0;
const int N0_RS48_DUR1 = 52;	//duration 1;
const int N0_RS48_DUR2 = 1;	//duration 2;
const int N0_RS48_DUR3 = 19;	//duration 3;
const int N0_RS48_DUR4 = 24;	//duration 4;
const double N0_RS48_REL0 = 0.03220717810083751;	//reliability 0;
const double N0_RS48_REL1 = 0.3889056014829345;	//reliability 1;
const double N0_RS48_REL2 = 0.37375561385595635;	//reliability 2;
const double N0_RS48_REL3 = 0.4541359752782097;	//reliability 3;
const double N0_RS48_REL4 = 0.507785016775612;	//reliability 4;

const int N0_RS49_ID = 49;
const int N0_RS49_COST = 52;	//cost
const bool N0_RS49_AVAIL = true;	//availability status
const int N0_RS49_DUR0 = 28;	//duration 0;
const int N0_RS49_DUR1 = 26;	//duration 1;
const int N0_RS49_DUR2 = 2;	//duration 2;
const int N0_RS49_DUR3 = 50;	//duration 3;
const int N0_RS49_DUR4 = 16;	//duration 4;
const double N0_RS49_REL0 = 0.8949984517741651;	//reliability 0;
const double N0_RS49_REL1 = 0.8763414872125281;	//reliability 1;
const double N0_RS49_REL2 = 0.23852204711317382;	//reliability 2;
const double N0_RS49_REL3 = 0.31314378138616705;	//reliability 3;
const double N0_RS49_REL4 = 0.8168200456488575;	//reliability 4;

const int N1_RS0_ID = 0;
const int N1_RS0_COST = 58;	//cost
const bool N1_RS0_AVAIL = true;	//availability status
const int N1_RS0_DUR0 = 73;	//duration 0;
const int N1_RS0_DUR1 = 44;	//duration 1;
const int N1_RS0_DUR2 = 56;	//duration 2;
const int N1_RS0_DUR3 = 21;	//duration 3;
const int N1_RS0_DUR4 = 53;	//duration 4;
const double N1_RS0_REL0 = 0.40053041686237856;	//reliability 0;
const double N1_RS0_REL1 = 0.21820903161361094;	//reliability 1;
const double N1_RS0_REL2 = 0.6595643007127615;	//reliability 2;
const double N1_RS0_REL3 = 0.04336359378582;	//reliability 3;
const double N1_RS0_REL4 = 0.14131848970817829;	//reliability 4;

const int N1_RS1_ID = 1;
const int N1_RS1_COST = 39;	//cost
const bool N1_RS1_AVAIL = true;	//availability status
const int N1_RS1_DUR0 = 92;	//duration 0;
const int N1_RS1_DUR1 = 10;	//duration 1;
const int N1_RS1_DUR2 = 61;	//duration 2;
const int N1_RS1_DUR3 = 32;	//duration 3;
const int N1_RS1_DUR4 = 54;	//duration 4;
const double N1_RS1_REL0 = 0.9588466889661668;	//reliability 0;
const double N1_RS1_REL1 = 6.247950634463706E-5;	//reliability 1;
const double N1_RS1_REL2 = 0.006176123123699195;	//reliability 2;
const double N1_RS1_REL3 = 0.7980125538356642;	//reliability 3;
const double N1_RS1_REL4 = 0.7466577026096695;	//reliability 4;

const int N1_RS2_ID = 2;
const int N1_RS2_COST = 47;	//cost
const bool N1_RS2_AVAIL = true;	//availability status
const int N1_RS2_DUR0 = 14;	//duration 0;
const int N1_RS2_DUR1 = 47;	//duration 1;
const int N1_RS2_DUR2 = 31;	//duration 2;
const int N1_RS2_DUR3 = 48;	//duration 3;
const int N1_RS2_DUR4 = 86;	//duration 4;
const double N1_RS2_REL0 = 0.6165066755048537;	//reliability 0;
const double N1_RS2_REL1 = 0.10053639474413678;	//reliability 1;
const double N1_RS2_REL2 = 0.529908223117094;	//reliability 2;
const double N1_RS2_REL3 = 0.6735864547118271;	//reliability 3;
const double N1_RS2_REL4 = 0.6362391436727184;	//reliability 4;

const int N1_RS3_ID = 3;
const int N1_RS3_COST = 24;	//cost
const bool N1_RS3_AVAIL = true;	//availability status
const int N1_RS3_DUR0 = 94;	//duration 0;
const int N1_RS3_DUR1 = 45;	//duration 1;
const int N1_RS3_DUR2 = 78;	//duration 2;
const int N1_RS3_DUR3 = 25;	//duration 3;
const int N1_RS3_DUR4 = 7;	//duration 4;
const double N1_RS3_REL0 = 0.9550824572571452;	//reliability 0;
const double N1_RS3_REL1 = 0.6324879424050921;	//reliability 1;
const double N1_RS3_REL2 = 0.018163132957763506;	//reliability 2;
const double N1_RS3_REL3 = 0.8727334086693884;	//reliability 3;
const double N1_RS3_REL4 = 0.2569201611840414;	//reliability 4;

const int N1_RS4_ID = 4;
const int N1_RS4_COST = 39;	//cost
const bool N1_RS4_AVAIL = true;	//availability status
const int N1_RS4_DUR0 = 3;	//duration 0;
const int N1_RS4_DUR1 = 91;	//duration 1;
const int N1_RS4_DUR2 = 21;	//duration 2;
const int N1_RS4_DUR3 = 87;	//duration 3;
const int N1_RS4_DUR4 = 25;	//duration 4;
const double N1_RS4_REL0 = 0.9536702460284444;	//reliability 0;
const double N1_RS4_REL1 = 0.25411461521766443;	//reliability 1;
const double N1_RS4_REL2 = 0.13481822328393367;	//reliability 2;
const double N1_RS4_REL3 = 0.08924396355856168;	//reliability 3;
const double N1_RS4_REL4 = 0.3196414652359896;	//reliability 4;

const int N1_RS5_ID = 5;
const int N1_RS5_COST = 12;	//cost
const bool N1_RS5_AVAIL = true;	//availability status
const int N1_RS5_DUR0 = 42;	//duration 0;
const int N1_RS5_DUR1 = 53;	//duration 1;
const int N1_RS5_DUR2 = 17;	//duration 2;
const int N1_RS5_DUR3 = 29;	//duration 3;
const int N1_RS5_DUR4 = 6;	//duration 4;
const double N1_RS5_REL0 = 0.26875283732803734;	//reliability 0;
const double N1_RS5_REL1 = 0.8990000259955986;	//reliability 1;
const double N1_RS5_REL2 = 0.9885010129653706;	//reliability 2;
const double N1_RS5_REL3 = 0.4898013972797781;	//reliability 3;
const double N1_RS5_REL4 = 0.6231725450392687;	//reliability 4;

const int N1_RS6_ID = 6;
const int N1_RS6_COST = 48;	//cost
const bool N1_RS6_AVAIL = true;	//availability status
const int N1_RS6_DUR0 = 28;	//duration 0;
const int N1_RS6_DUR1 = 99;	//duration 1;
const int N1_RS6_DUR2 = 3;	//duration 2;
const int N1_RS6_DUR3 = 3;	//duration 3;
const int N1_RS6_DUR4 = 15;	//duration 4;
const double N1_RS6_REL0 = 0.4894144436386515;	//reliability 0;
const double N1_RS6_REL1 = 0.17813013480923057;	//reliability 1;
const double N1_RS6_REL2 = 0.41035387140867663;	//reliability 2;
const double N1_RS6_REL3 = 0.9362892471226927;	//reliability 3;
const double N1_RS6_REL4 = 0.15993874488082882;	//reliability 4;

const int N1_RS7_ID = 7;
const int N1_RS7_COST = 34;	//cost
const bool N1_RS7_AVAIL = true;	//availability status
const int N1_RS7_DUR0 = 9;	//duration 0;
const int N1_RS7_DUR1 = 18;	//duration 1;
const int N1_RS7_DUR2 = 15;	//duration 2;
const int N1_RS7_DUR3 = 22;	//duration 3;
const int N1_RS7_DUR4 = 48;	//duration 4;
const double N1_RS7_REL0 = 0.6859066548799788;	//reliability 0;
const double N1_RS7_REL1 = 0.7860735531002391;	//reliability 1;
const double N1_RS7_REL2 = 0.7247487118963114;	//reliability 2;
const double N1_RS7_REL3 = 0.7229959469559091;	//reliability 3;
const double N1_RS7_REL4 = 0.3019244649397448;	//reliability 4;

const int N1_RS8_ID = 8;
const int N1_RS8_COST = 17;	//cost
const bool N1_RS8_AVAIL = true;	//availability status
const int N1_RS8_DUR0 = 20;	//duration 0;
const int N1_RS8_DUR1 = 58;	//duration 1;
const int N1_RS8_DUR2 = 7;	//duration 2;
const int N1_RS8_DUR3 = 92;	//duration 3;
const int N1_RS8_DUR4 = 58;	//duration 4;
const double N1_RS8_REL0 = 0.2397803464851147;	//reliability 0;
const double N1_RS8_REL1 = 0.28073945746172935;	//reliability 1;
const double N1_RS8_REL2 = 0.619582190787072;	//reliability 2;
const double N1_RS8_REL3 = 0.584246514266711;	//reliability 3;
const double N1_RS8_REL4 = 0.5790525351261364;	//reliability 4;

const int N1_RS9_ID = 9;
const int N1_RS9_COST = 10;	//cost
const bool N1_RS9_AVAIL = true;	//availability status
const int N1_RS9_DUR0 = 36;	//duration 0;
const int N1_RS9_DUR1 = 32;	//duration 1;
const int N1_RS9_DUR2 = 33;	//duration 2;
const int N1_RS9_DUR3 = 15;	//duration 3;
const int N1_RS9_DUR4 = 53;	//duration 4;
const double N1_RS9_REL0 = 0.41973915322834954;	//reliability 0;
const double N1_RS9_REL1 = 0.5750485116246723;	//reliability 1;
const double N1_RS9_REL2 = 0.36925512343127165;	//reliability 2;
const double N1_RS9_REL3 = 0.9397099540511378;	//reliability 3;
const double N1_RS9_REL4 = 0.18022637556681298;	//reliability 4;

const int N1_RS10_ID = 10;
const int N1_RS10_COST = 18;	//cost
const bool N1_RS10_AVAIL = true;	//availability status
const int N1_RS10_DUR0 = 84;	//duration 0;
const int N1_RS10_DUR1 = 32;	//duration 1;
const int N1_RS10_DUR2 = 88;	//duration 2;
const int N1_RS10_DUR3 = 91;	//duration 3;
const int N1_RS10_DUR4 = 90;	//duration 4;
const double N1_RS10_REL0 = 0.2351682403554729;	//reliability 0;
const double N1_RS10_REL1 = 0.49373307327089233;	//reliability 1;
const double N1_RS10_REL2 = 0.8255984151580265;	//reliability 2;
const double N1_RS10_REL3 = 0.8073890896531449;	//reliability 3;
const double N1_RS10_REL4 = 0.4270212147610307;	//reliability 4;

const int N1_RS11_ID = 11;
const int N1_RS11_COST = 47;	//cost
const bool N1_RS11_AVAIL = true;	//availability status
const int N1_RS11_DUR0 = 54;	//duration 0;
const int N1_RS11_DUR1 = 82;	//duration 1;
const int N1_RS11_DUR2 = 54;	//duration 2;
const int N1_RS11_DUR3 = 22;	//duration 3;
const int N1_RS11_DUR4 = 86;	//duration 4;
const double N1_RS11_REL0 = 0.685707021801718;	//reliability 0;
const double N1_RS11_REL1 = 0.31420664163825895;	//reliability 1;
const double N1_RS11_REL2 = 0.6028608011566907;	//reliability 2;
const double N1_RS11_REL3 = 0.9392263115537636;	//reliability 3;
const double N1_RS11_REL4 = 0.831084418100072;	//reliability 4;

const int N1_RS12_ID = 12;
const int N1_RS12_COST = 15;	//cost
const bool N1_RS12_AVAIL = true;	//availability status
const int N1_RS12_DUR0 = 65;	//duration 0;
const int N1_RS12_DUR1 = 54;	//duration 1;
const int N1_RS12_DUR2 = 19;	//duration 2;
const int N1_RS12_DUR3 = 47;	//duration 3;
const int N1_RS12_DUR4 = 49;	//duration 4;
const double N1_RS12_REL0 = 0.947647015493633;	//reliability 0;
const double N1_RS12_REL1 = 0.47251586159201253;	//reliability 1;
const double N1_RS12_REL2 = 0.9660531580934234;	//reliability 2;
const double N1_RS12_REL3 = 0.07311496670298945;	//reliability 3;
const double N1_RS12_REL4 = 0.07853126713267033;	//reliability 4;

const int N1_RS13_ID = 13;
const int N1_RS13_COST = 54;	//cost
const bool N1_RS13_AVAIL = true;	//availability status
const int N1_RS13_DUR0 = 71;	//duration 0;
const int N1_RS13_DUR1 = 15;	//duration 1;
const int N1_RS13_DUR2 = 19;	//duration 2;
const int N1_RS13_DUR3 = 12;	//duration 3;
const int N1_RS13_DUR4 = 95;	//duration 4;
const double N1_RS13_REL0 = 0.2543551019558282;	//reliability 0;
const double N1_RS13_REL1 = 0.6099447059758598;	//reliability 1;
const double N1_RS13_REL2 = 0.45170816173821804;	//reliability 2;
const double N1_RS13_REL3 = 0.6902725824848617;	//reliability 3;
const double N1_RS13_REL4 = 0.15851303260000604;	//reliability 4;

const int N1_RS14_ID = 14;
const int N1_RS14_COST = 30;	//cost
const bool N1_RS14_AVAIL = true;	//availability status
const int N1_RS14_DUR0 = 39;	//duration 0;
const int N1_RS14_DUR1 = 44;	//duration 1;
const int N1_RS14_DUR2 = 17;	//duration 2;
const int N1_RS14_DUR3 = 94;	//duration 3;
const int N1_RS14_DUR4 = 48;	//duration 4;
const double N1_RS14_REL0 = 0.08698154774854028;	//reliability 0;
const double N1_RS14_REL1 = 0.03963805609153925;	//reliability 1;
const double N1_RS14_REL2 = 0.9613450256510465;	//reliability 2;
const double N1_RS14_REL3 = 0.9014179255227239;	//reliability 3;
const double N1_RS14_REL4 = 0.5298193832732285;	//reliability 4;

const int N1_RS15_ID = 15;
const int N1_RS15_COST = 36;	//cost
const bool N1_RS15_AVAIL = true;	//availability status
const int N1_RS15_DUR0 = 1;	//duration 0;
const int N1_RS15_DUR1 = 29;	//duration 1;
const int N1_RS15_DUR2 = 80;	//duration 2;
const int N1_RS15_DUR3 = 3;	//duration 3;
const int N1_RS15_DUR4 = 28;	//duration 4;
const double N1_RS15_REL0 = 0.7826663899410703;	//reliability 0;
const double N1_RS15_REL1 = 0.09303190899039282;	//reliability 1;
const double N1_RS15_REL2 = 0.36613586056661784;	//reliability 2;
const double N1_RS15_REL3 = 0.5326310012780274;	//reliability 3;
const double N1_RS15_REL4 = 0.500615519637881;	//reliability 4;

const int N1_RS16_ID = 16;
const int N1_RS16_COST = 18;	//cost
const bool N1_RS16_AVAIL = true;	//availability status
const int N1_RS16_DUR0 = 81;	//duration 0;
const int N1_RS16_DUR1 = 85;	//duration 1;
const int N1_RS16_DUR2 = 40;	//duration 2;
const int N1_RS16_DUR3 = 70;	//duration 3;
const int N1_RS16_DUR4 = 30;	//duration 4;
const double N1_RS16_REL0 = 0.17019403101399178;	//reliability 0;
const double N1_RS16_REL1 = 0.870930252871704;	//reliability 1;
const double N1_RS16_REL2 = 0.8325837728372537;	//reliability 2;
const double N1_RS16_REL3 = 0.7564221744050401;	//reliability 3;
const double N1_RS16_REL4 = 0.0745894214361118;	//reliability 4;

const int N1_RS17_ID = 17;
const int N1_RS17_COST = 26;	//cost
const bool N1_RS17_AVAIL = true;	//availability status
const int N1_RS17_DUR0 = 3;	//duration 0;
const int N1_RS17_DUR1 = 34;	//duration 1;
const int N1_RS17_DUR2 = 41;	//duration 2;
const int N1_RS17_DUR3 = 86;	//duration 3;
const int N1_RS17_DUR4 = 86;	//duration 4;
const double N1_RS17_REL0 = 0.3780678462143481;	//reliability 0;
const double N1_RS17_REL1 = 0.7723841191788999;	//reliability 1;
const double N1_RS17_REL2 = 0.5502035935931333;	//reliability 2;
const double N1_RS17_REL3 = 0.7202752529828071;	//reliability 3;
const double N1_RS17_REL4 = 0.2249026225248455;	//reliability 4;

const int N1_RS18_ID = 18;
const int N1_RS18_COST = 12;	//cost
const bool N1_RS18_AVAIL = true;	//availability status
const int N1_RS18_DUR0 = 68;	//duration 0;
const int N1_RS18_DUR1 = 0;	//duration 1;
const int N1_RS18_DUR2 = 20;	//duration 2;
const int N1_RS18_DUR3 = 18;	//duration 3;
const int N1_RS18_DUR4 = 70;	//duration 4;
const double N1_RS18_REL0 = 0.43842006231685815;	//reliability 0;
const double N1_RS18_REL1 = 0.04536700490914125;	//reliability 1;
const double N1_RS18_REL2 = 0.1306238200792459;	//reliability 2;
const double N1_RS18_REL3 = 0.20926872397359275;	//reliability 3;
const double N1_RS18_REL4 = 0.6190332538524375;	//reliability 4;

const int N1_RS19_ID = 19;
const int N1_RS19_COST = 22;	//cost
const bool N1_RS19_AVAIL = true;	//availability status
const int N1_RS19_DUR0 = 78;	//duration 0;
const int N1_RS19_DUR1 = 16;	//duration 1;
const int N1_RS19_DUR2 = 20;	//duration 2;
const int N1_RS19_DUR3 = 87;	//duration 3;
const int N1_RS19_DUR4 = 89;	//duration 4;
const double N1_RS19_REL0 = 0.783793780289884;	//reliability 0;
const double N1_RS19_REL1 = 0.1264834749834507;	//reliability 1;
const double N1_RS19_REL2 = 0.11121375596202532;	//reliability 2;
const double N1_RS19_REL3 = 0.9774515829917683;	//reliability 3;
const double N1_RS19_REL4 = 0.09712972902581984;	//reliability 4;

const int N1_RS20_ID = 20;
const int N1_RS20_COST = 28;	//cost
const bool N1_RS20_AVAIL = true;	//availability status
const int N1_RS20_DUR0 = 34;	//duration 0;
const int N1_RS20_DUR1 = 76;	//duration 1;
const int N1_RS20_DUR2 = 48;	//duration 2;
const int N1_RS20_DUR3 = 20;	//duration 3;
const int N1_RS20_DUR4 = 38;	//duration 4;
const double N1_RS20_REL0 = 0.6450157285838226;	//reliability 0;
const double N1_RS20_REL1 = 0.9831036046612092;	//reliability 1;
const double N1_RS20_REL2 = 0.08391364736491558;	//reliability 2;
const double N1_RS20_REL3 = 0.6712122911116978;	//reliability 3;
const double N1_RS20_REL4 = 0.9587399056170407;	//reliability 4;

const int N1_RS21_ID = 21;
const int N1_RS21_COST = 35;	//cost
const bool N1_RS21_AVAIL = true;	//availability status
const int N1_RS21_DUR0 = 10;	//duration 0;
const int N1_RS21_DUR1 = 38;	//duration 1;
const int N1_RS21_DUR2 = 59;	//duration 2;
const int N1_RS21_DUR3 = 46;	//duration 3;
const int N1_RS21_DUR4 = 88;	//duration 4;
const double N1_RS21_REL0 = 0.7901302044894841;	//reliability 0;
const double N1_RS21_REL1 = 0.20151649316710019;	//reliability 1;
const double N1_RS21_REL2 = 0.47066655981643024;	//reliability 2;
const double N1_RS21_REL3 = 0.3143167030847386;	//reliability 3;
const double N1_RS21_REL4 = 0.2332533072156593;	//reliability 4;

const int N1_RS22_ID = 22;
const int N1_RS22_COST = 11;	//cost
const bool N1_RS22_AVAIL = true;	//availability status
const int N1_RS22_DUR0 = 94;	//duration 0;
const int N1_RS22_DUR1 = 21;	//duration 1;
const int N1_RS22_DUR2 = 77;	//duration 2;
const int N1_RS22_DUR3 = 54;	//duration 3;
const int N1_RS22_DUR4 = 76;	//duration 4;
const double N1_RS22_REL0 = 0.9703176027340453;	//reliability 0;
const double N1_RS22_REL1 = 0.480700725085332;	//reliability 1;
const double N1_RS22_REL2 = 0.760601557337813;	//reliability 2;
const double N1_RS22_REL3 = 0.8366075018146457;	//reliability 3;
const double N1_RS22_REL4 = 0.3842226925340395;	//reliability 4;

const int N1_RS23_ID = 23;
const int N1_RS23_COST = 32;	//cost
const bool N1_RS23_AVAIL = true;	//availability status
const int N1_RS23_DUR0 = 24;	//duration 0;
const int N1_RS23_DUR1 = 80;	//duration 1;
const int N1_RS23_DUR2 = 4;	//duration 2;
const int N1_RS23_DUR3 = 0;	//duration 3;
const int N1_RS23_DUR4 = 38;	//duration 4;
const double N1_RS23_REL0 = 0.9731325314909639;	//reliability 0;
const double N1_RS23_REL1 = 0.18549950388289127;	//reliability 1;
const double N1_RS23_REL2 = 0.6314060657532472;	//reliability 2;
const double N1_RS23_REL3 = 0.7051901879300234;	//reliability 3;
const double N1_RS23_REL4 = 0.25367809485436865;	//reliability 4;

const int N1_RS24_ID = 24;
const int N1_RS24_COST = 53;	//cost
const bool N1_RS24_AVAIL = true;	//availability status
const int N1_RS24_DUR0 = 0;	//duration 0;
const int N1_RS24_DUR1 = 11;	//duration 1;
const int N1_RS24_DUR2 = 3;	//duration 2;
const int N1_RS24_DUR3 = 22;	//duration 3;
const int N1_RS24_DUR4 = 25;	//duration 4;
const double N1_RS24_REL0 = 0.8311522938187821;	//reliability 0;
const double N1_RS24_REL1 = 0.018372323138289848;	//reliability 1;
const double N1_RS24_REL2 = 0.2092840643541648;	//reliability 2;
const double N1_RS24_REL3 = 0.0975339634477792;	//reliability 3;
const double N1_RS24_REL4 = 0.8069895925184686;	//reliability 4;

const int N1_RS25_ID = 25;
const int N1_RS25_COST = 40;	//cost
const bool N1_RS25_AVAIL = true;	//availability status
const int N1_RS25_DUR0 = 71;	//duration 0;
const int N1_RS25_DUR1 = 17;	//duration 1;
const int N1_RS25_DUR2 = 91;	//duration 2;
const int N1_RS25_DUR3 = 8;	//duration 3;
const int N1_RS25_DUR4 = 40;	//duration 4;
const double N1_RS25_REL0 = 0.6407304256809363;	//reliability 0;
const double N1_RS25_REL1 = 0.9091059286988064;	//reliability 1;
const double N1_RS25_REL2 = 0.3302840286709099;	//reliability 2;
const double N1_RS25_REL3 = 0.3701748680022733;	//reliability 3;
const double N1_RS25_REL4 = 0.3497860903483355;	//reliability 4;

const int N1_RS26_ID = 26;
const int N1_RS26_COST = 10;	//cost
const bool N1_RS26_AVAIL = true;	//availability status
const int N1_RS26_DUR0 = 27;	//duration 0;
const int N1_RS26_DUR1 = 47;	//duration 1;
const int N1_RS26_DUR2 = 16;	//duration 2;
const int N1_RS26_DUR3 = 0;	//duration 3;
const int N1_RS26_DUR4 = 34;	//duration 4;
const double N1_RS26_REL0 = 0.6471378443017372;	//reliability 0;
const double N1_RS26_REL1 = 0.2611623275741015;	//reliability 1;
const double N1_RS26_REL2 = 0.9929778169694973;	//reliability 2;
const double N1_RS26_REL3 = 0.5951293661186472;	//reliability 3;
const double N1_RS26_REL4 = 0.20452694469302735;	//reliability 4;

const int N1_RS27_ID = 27;
const int N1_RS27_COST = 53;	//cost
const bool N1_RS27_AVAIL = true;	//availability status
const int N1_RS27_DUR0 = 28;	//duration 0;
const int N1_RS27_DUR1 = 32;	//duration 1;
const int N1_RS27_DUR2 = 51;	//duration 2;
const int N1_RS27_DUR3 = 61;	//duration 3;
const int N1_RS27_DUR4 = 26;	//duration 4;
const double N1_RS27_REL0 = 0.9257031558559167;	//reliability 0;
const double N1_RS27_REL1 = 0.48660424140796876;	//reliability 1;
const double N1_RS27_REL2 = 0.8214897476437512;	//reliability 2;
const double N1_RS27_REL3 = 0.3198433171296322;	//reliability 3;
const double N1_RS27_REL4 = 0.3448094219497473;	//reliability 4;

const int N1_RS28_ID = 28;
const int N1_RS28_COST = 15;	//cost
const bool N1_RS28_AVAIL = true;	//availability status
const int N1_RS28_DUR0 = 82;	//duration 0;
const int N1_RS28_DUR1 = 21;	//duration 1;
const int N1_RS28_DUR2 = 6;	//duration 2;
const int N1_RS28_DUR3 = 41;	//duration 3;
const int N1_RS28_DUR4 = 28;	//duration 4;
const double N1_RS28_REL0 = 0.701014515943644;	//reliability 0;
const double N1_RS28_REL1 = 0.7042757603897483;	//reliability 1;
const double N1_RS28_REL2 = 0.7623421787332667;	//reliability 2;
const double N1_RS28_REL3 = 0.2572709513996734;	//reliability 3;
const double N1_RS28_REL4 = 0.57026234116066;	//reliability 4;

const int N1_RS29_ID = 29;
const int N1_RS29_COST = 16;	//cost
const bool N1_RS29_AVAIL = true;	//availability status
const int N1_RS29_DUR0 = 7;	//duration 0;
const int N1_RS29_DUR1 = 49;	//duration 1;
const int N1_RS29_DUR2 = 19;	//duration 2;
const int N1_RS29_DUR3 = 23;	//duration 3;
const int N1_RS29_DUR4 = 77;	//duration 4;
const double N1_RS29_REL0 = 0.3058297001380117;	//reliability 0;
const double N1_RS29_REL1 = 0.8542617592025287;	//reliability 1;
const double N1_RS29_REL2 = 0.03276359018375008;	//reliability 2;
const double N1_RS29_REL3 = 0.5228846175801786;	//reliability 3;
const double N1_RS29_REL4 = 0.48442894361173694;	//reliability 4;

const int N1_RS30_ID = 30;
const int N1_RS30_COST = 10;	//cost
const bool N1_RS30_AVAIL = true;	//availability status
const int N1_RS30_DUR0 = 86;	//duration 0;
const int N1_RS30_DUR1 = 46;	//duration 1;
const int N1_RS30_DUR2 = 46;	//duration 2;
const int N1_RS30_DUR3 = 44;	//duration 3;
const int N1_RS30_DUR4 = 46;	//duration 4;
const double N1_RS30_REL0 = 0.08668805447580363;	//reliability 0;
const double N1_RS30_REL1 = 0.7223605852169613;	//reliability 1;
const double N1_RS30_REL2 = 0.526873815153452;	//reliability 2;
const double N1_RS30_REL3 = 0.1380651911135854;	//reliability 3;
const double N1_RS30_REL4 = 0.7235176641502553;	//reliability 4;

const int N1_RS31_ID = 31;
const int N1_RS31_COST = 57;	//cost
const bool N1_RS31_AVAIL = true;	//availability status
const int N1_RS31_DUR0 = 25;	//duration 0;
const int N1_RS31_DUR1 = 30;	//duration 1;
const int N1_RS31_DUR2 = 84;	//duration 2;
const int N1_RS31_DUR3 = 57;	//duration 3;
const int N1_RS31_DUR4 = 44;	//duration 4;
const double N1_RS31_REL0 = 0.4535873961658228;	//reliability 0;
const double N1_RS31_REL1 = 0.2887642466521595;	//reliability 1;
const double N1_RS31_REL2 = 0.11503267795975824;	//reliability 2;
const double N1_RS31_REL3 = 0.5380501676060755;	//reliability 3;
const double N1_RS31_REL4 = 0.6270512007400358;	//reliability 4;

const int N1_RS32_ID = 32;
const int N1_RS32_COST = 58;	//cost
const bool N1_RS32_AVAIL = true;	//availability status
const int N1_RS32_DUR0 = 67;	//duration 0;
const int N1_RS32_DUR1 = 42;	//duration 1;
const int N1_RS32_DUR2 = 64;	//duration 2;
const int N1_RS32_DUR3 = 78;	//duration 3;
const int N1_RS32_DUR4 = 7;	//duration 4;
const double N1_RS32_REL0 = 0.37636319512835015;	//reliability 0;
const double N1_RS32_REL1 = 0.8733568124536444;	//reliability 1;
const double N1_RS32_REL2 = 0.07674105047562174;	//reliability 2;
const double N1_RS32_REL3 = 0.6216763891542051;	//reliability 3;
const double N1_RS32_REL4 = 0.2846584602892305;	//reliability 4;

const int N1_RS33_ID = 33;
const int N1_RS33_COST = 15;	//cost
const bool N1_RS33_AVAIL = true;	//availability status
const int N1_RS33_DUR0 = 14;	//duration 0;
const int N1_RS33_DUR1 = 96;	//duration 1;
const int N1_RS33_DUR2 = 1;	//duration 2;
const int N1_RS33_DUR3 = 42;	//duration 3;
const int N1_RS33_DUR4 = 61;	//duration 4;
const double N1_RS33_REL0 = 0.22109428463495906;	//reliability 0;
const double N1_RS33_REL1 = 0.09464646504326435;	//reliability 1;
const double N1_RS33_REL2 = 0.9655773173756024;	//reliability 2;
const double N1_RS33_REL3 = 0.7144332665085568;	//reliability 3;
const double N1_RS33_REL4 = 0.7195361855039032;	//reliability 4;

const int N1_RS34_ID = 34;
const int N1_RS34_COST = 59;	//cost
const bool N1_RS34_AVAIL = true;	//availability status
const int N1_RS34_DUR0 = 72;	//duration 0;
const int N1_RS34_DUR1 = 1;	//duration 1;
const int N1_RS34_DUR2 = 31;	//duration 2;
const int N1_RS34_DUR3 = 87;	//duration 3;
const int N1_RS34_DUR4 = 66;	//duration 4;
const double N1_RS34_REL0 = 0.05709126089866412;	//reliability 0;
const double N1_RS34_REL1 = 0.17959927957486332;	//reliability 1;
const double N1_RS34_REL2 = 0.5831201494739315;	//reliability 2;
const double N1_RS34_REL3 = 0.5813450095929067;	//reliability 3;
const double N1_RS34_REL4 = 0.852091398065947;	//reliability 4;

const int N1_RS35_ID = 35;
const int N1_RS35_COST = 13;	//cost
const bool N1_RS35_AVAIL = true;	//availability status
const int N1_RS35_DUR0 = 70;	//duration 0;
const int N1_RS35_DUR1 = 41;	//duration 1;
const int N1_RS35_DUR2 = 17;	//duration 2;
const int N1_RS35_DUR3 = 18;	//duration 3;
const int N1_RS35_DUR4 = 98;	//duration 4;
const double N1_RS35_REL0 = 0.7505595877937891;	//reliability 0;
const double N1_RS35_REL1 = 0.5374246524330549;	//reliability 1;
const double N1_RS35_REL2 = 0.1456571178383892;	//reliability 2;
const double N1_RS35_REL3 = 0.10806187345769669;	//reliability 3;
const double N1_RS35_REL4 = 0.9412192051570762;	//reliability 4;

const int N1_RS36_ID = 36;
const int N1_RS36_COST = 45;	//cost
const bool N1_RS36_AVAIL = true;	//availability status
const int N1_RS36_DUR0 = 38;	//duration 0;
const int N1_RS36_DUR1 = 55;	//duration 1;
const int N1_RS36_DUR2 = 80;	//duration 2;
const int N1_RS36_DUR3 = 24;	//duration 3;
const int N1_RS36_DUR4 = 44;	//duration 4;
const double N1_RS36_REL0 = 0.98725041178533;	//reliability 0;
const double N1_RS36_REL1 = 0.26218173479077733;	//reliability 1;
const double N1_RS36_REL2 = 0.7613416528558373;	//reliability 2;
const double N1_RS36_REL3 = 0.3940168131915699;	//reliability 3;
const double N1_RS36_REL4 = 0.9304567386533517;	//reliability 4;

const int N1_RS37_ID = 37;
const int N1_RS37_COST = 25;	//cost
const bool N1_RS37_AVAIL = true;	//availability status
const int N1_RS37_DUR0 = 50;	//duration 0;
const int N1_RS37_DUR1 = 93;	//duration 1;
const int N1_RS37_DUR2 = 49;	//duration 2;
const int N1_RS37_DUR3 = 27;	//duration 3;
const int N1_RS37_DUR4 = 30;	//duration 4;
const double N1_RS37_REL0 = 0.16632779634489003;	//reliability 0;
const double N1_RS37_REL1 = 0.7680668063235551;	//reliability 1;
const double N1_RS37_REL2 = 0.7355963183734052;	//reliability 2;
const double N1_RS37_REL3 = 0.08797995580571494;	//reliability 3;
const double N1_RS37_REL4 = 0.6773898337876414;	//reliability 4;

const int N1_RS38_ID = 38;
const int N1_RS38_COST = 11;	//cost
const bool N1_RS38_AVAIL = true;	//availability status
const int N1_RS38_DUR0 = 73;	//duration 0;
const int N1_RS38_DUR1 = 73;	//duration 1;
const int N1_RS38_DUR2 = 4;	//duration 2;
const int N1_RS38_DUR3 = 56;	//duration 3;
const int N1_RS38_DUR4 = 38;	//duration 4;
const double N1_RS38_REL0 = 0.10492284006143193;	//reliability 0;
const double N1_RS38_REL1 = 0.6391590153649604;	//reliability 1;
const double N1_RS38_REL2 = 0.11884976792902557;	//reliability 2;
const double N1_RS38_REL3 = 0.8018243072027202;	//reliability 3;
const double N1_RS38_REL4 = 0.45330786219619135;	//reliability 4;

const int N1_RS39_ID = 39;
const int N1_RS39_COST = 59;	//cost
const bool N1_RS39_AVAIL = true;	//availability status
const int N1_RS39_DUR0 = 1;	//duration 0;
const int N1_RS39_DUR1 = 47;	//duration 1;
const int N1_RS39_DUR2 = 60;	//duration 2;
const int N1_RS39_DUR3 = 30;	//duration 3;
const int N1_RS39_DUR4 = 62;	//duration 4;
const double N1_RS39_REL0 = 0.05167168773346875;	//reliability 0;
const double N1_RS39_REL1 = 0.9346318575653213;	//reliability 1;
const double N1_RS39_REL2 = 0.07364735796235777;	//reliability 2;
const double N1_RS39_REL3 = 0.21143756806465364;	//reliability 3;
const double N1_RS39_REL4 = 0.5429620200754038;	//reliability 4;

const int N1_RS40_ID = 40;
const int N1_RS40_COST = 43;	//cost
const bool N1_RS40_AVAIL = true;	//availability status
const int N1_RS40_DUR0 = 4;	//duration 0;
const int N1_RS40_DUR1 = 19;	//duration 1;
const int N1_RS40_DUR2 = 20;	//duration 2;
const int N1_RS40_DUR3 = 16;	//duration 3;
const int N1_RS40_DUR4 = 13;	//duration 4;
const double N1_RS40_REL0 = 0.38282815607614396;	//reliability 0;
const double N1_RS40_REL1 = 0.2139854753022289;	//reliability 1;
const double N1_RS40_REL2 = 0.7289233174028484;	//reliability 2;
const double N1_RS40_REL3 = 0.9837323415681671;	//reliability 3;
const double N1_RS40_REL4 = 0.8187656019698578;	//reliability 4;

const int N1_RS41_ID = 41;
const int N1_RS41_COST = 13;	//cost
const bool N1_RS41_AVAIL = true;	//availability status
const int N1_RS41_DUR0 = 97;	//duration 0;
const int N1_RS41_DUR1 = 3;	//duration 1;
const int N1_RS41_DUR2 = 88;	//duration 2;
const int N1_RS41_DUR3 = 17;	//duration 3;
const int N1_RS41_DUR4 = 75;	//duration 4;
const double N1_RS41_REL0 = 0.9418103670845652;	//reliability 0;
const double N1_RS41_REL1 = 0.9083547732906209;	//reliability 1;
const double N1_RS41_REL2 = 0.009523141928414192;	//reliability 2;
const double N1_RS41_REL3 = 0.33550523083422545;	//reliability 3;
const double N1_RS41_REL4 = 0.01788885174269128;	//reliability 4;

const int N1_RS42_ID = 42;
const int N1_RS42_COST = 35;	//cost
const bool N1_RS42_AVAIL = true;	//availability status
const int N1_RS42_DUR0 = 12;	//duration 0;
const int N1_RS42_DUR1 = 33;	//duration 1;
const int N1_RS42_DUR2 = 38;	//duration 2;
const int N1_RS42_DUR3 = 21;	//duration 3;
const int N1_RS42_DUR4 = 71;	//duration 4;
const double N1_RS42_REL0 = 0.5684179207762644;	//reliability 0;
const double N1_RS42_REL1 = 0.9776575809642277;	//reliability 1;
const double N1_RS42_REL2 = 0.6713022825509697;	//reliability 2;
const double N1_RS42_REL3 = 0.8539796799102497;	//reliability 3;
const double N1_RS42_REL4 = 0.21308027030764176;	//reliability 4;

const int N1_RS43_ID = 43;
const int N1_RS43_COST = 58;	//cost
const bool N1_RS43_AVAIL = true;	//availability status
const int N1_RS43_DUR0 = 89;	//duration 0;
const int N1_RS43_DUR1 = 27;	//duration 1;
const int N1_RS43_DUR2 = 84;	//duration 2;
const int N1_RS43_DUR3 = 1;	//duration 3;
const int N1_RS43_DUR4 = 32;	//duration 4;
const double N1_RS43_REL0 = 0.37419809742434573;	//reliability 0;
const double N1_RS43_REL1 = 0.06414898376981415;	//reliability 1;
const double N1_RS43_REL2 = 0.2693079462661355;	//reliability 2;
const double N1_RS43_REL3 = 0.10137401174026295;	//reliability 3;
const double N1_RS43_REL4 = 0.8779466289042956;	//reliability 4;

const int N1_RS44_ID = 44;
const int N1_RS44_COST = 47;	//cost
const bool N1_RS44_AVAIL = true;	//availability status
const int N1_RS44_DUR0 = 37;	//duration 0;
const int N1_RS44_DUR1 = 84;	//duration 1;
const int N1_RS44_DUR2 = 74;	//duration 2;
const int N1_RS44_DUR3 = 39;	//duration 3;
const int N1_RS44_DUR4 = 61;	//duration 4;
const double N1_RS44_REL0 = 0.5729310563971827;	//reliability 0;
const double N1_RS44_REL1 = 0.22634869462460194;	//reliability 1;
const double N1_RS44_REL2 = 0.7623085738714959;	//reliability 2;
const double N1_RS44_REL3 = 0.5385193026434835;	//reliability 3;
const double N1_RS44_REL4 = 0.6347292449986001;	//reliability 4;

const int N1_RS45_ID = 45;
const int N1_RS45_COST = 14;	//cost
const bool N1_RS45_AVAIL = true;	//availability status
const int N1_RS45_DUR0 = 82;	//duration 0;
const int N1_RS45_DUR1 = 76;	//duration 1;
const int N1_RS45_DUR2 = 97;	//duration 2;
const int N1_RS45_DUR3 = 35;	//duration 3;
const int N1_RS45_DUR4 = 90;	//duration 4;
const double N1_RS45_REL0 = 0.6279508312869718;	//reliability 0;
const double N1_RS45_REL1 = 0.3494439885707268;	//reliability 1;
const double N1_RS45_REL2 = 0.7755274144468944;	//reliability 2;
const double N1_RS45_REL3 = 0.877797025628683;	//reliability 3;
const double N1_RS45_REL4 = 0.5078325846059694;	//reliability 4;

const int N1_RS46_ID = 46;
const int N1_RS46_COST = 17;	//cost
const bool N1_RS46_AVAIL = true;	//availability status
const int N1_RS46_DUR0 = 13;	//duration 0;
const int N1_RS46_DUR1 = 68;	//duration 1;
const int N1_RS46_DUR2 = 52;	//duration 2;
const int N1_RS46_DUR3 = 13;	//duration 3;
const int N1_RS46_DUR4 = 20;	//duration 4;
const double N1_RS46_REL0 = 0.47965592585877936;	//reliability 0;
const double N1_RS46_REL1 = 0.15589523519048665;	//reliability 1;
const double N1_RS46_REL2 = 0.45974604975808553;	//reliability 2;
const double N1_RS46_REL3 = 0.196479856747105;	//reliability 3;
const double N1_RS46_REL4 = 0.45062404487557084;	//reliability 4;

const int N1_RS47_ID = 47;
const int N1_RS47_COST = 32;	//cost
const bool N1_RS47_AVAIL = true;	//availability status
const int N1_RS47_DUR0 = 44;	//duration 0;
const int N1_RS47_DUR1 = 11;	//duration 1;
const int N1_RS47_DUR2 = 23;	//duration 2;
const int N1_RS47_DUR3 = 76;	//duration 3;
const int N1_RS47_DUR4 = 18;	//duration 4;
const double N1_RS47_REL0 = 0.15634669311193294;	//reliability 0;
const double N1_RS47_REL1 = 0.4504700909305156;	//reliability 1;
const double N1_RS47_REL2 = 0.29447865344406343;	//reliability 2;
const double N1_RS47_REL3 = 0.9815746239468602;	//reliability 3;
const double N1_RS47_REL4 = 0.3680912701801191;	//reliability 4;

const int N1_RS48_ID = 48;
const int N1_RS48_COST = 23;	//cost
const bool N1_RS48_AVAIL = true;	//availability status
const int N1_RS48_DUR0 = 35;	//duration 0;
const int N1_RS48_DUR1 = 41;	//duration 1;
const int N1_RS48_DUR2 = 66;	//duration 2;
const int N1_RS48_DUR3 = 65;	//duration 3;
const int N1_RS48_DUR4 = 90;	//duration 4;
const double N1_RS48_REL0 = 0.029339263886024147;	//reliability 0;
const double N1_RS48_REL1 = 0.5353127365668506;	//reliability 1;
const double N1_RS48_REL2 = 0.8718089433257136;	//reliability 2;
const double N1_RS48_REL3 = 0.8507413619107257;	//reliability 3;
const double N1_RS48_REL4 = 0.5161952763331029;	//reliability 4;

const int N1_RS49_ID = 49;
const int N1_RS49_COST = 40;	//cost
const bool N1_RS49_AVAIL = true;	//availability status
const int N1_RS49_DUR0 = 68;	//duration 0;
const int N1_RS49_DUR1 = 42;	//duration 1;
const int N1_RS49_DUR2 = 80;	//duration 2;
const int N1_RS49_DUR3 = 82;	//duration 3;
const int N1_RS49_DUR4 = 59;	//duration 4;
const double N1_RS49_REL0 = 0.8696580354769399;	//reliability 0;
const double N1_RS49_REL1 = 0.22154851047941249;	//reliability 1;
const double N1_RS49_REL2 = 0.5924914910753677;	//reliability 2;
const double N1_RS49_REL3 = 0.5056794011494065;	//reliability 3;
const double N1_RS49_REL4 = 0.35320474592133366;	//reliability 4;


//=========Global Parameters=======
const int TE=0;	//plater 2 state
const int TP=1;	//player 1 state
const int TS=2;	//coordinator state
global t:[TE..TS] init TS;	//to control the turn
global end : bool init false;	//(absorbing state)
global n:[0..MXN] init 0;  //to control the sequence

//=========Module for Player 1=======
module planner
n0:[-1..N0_MAX_SV-1] init -1;
n1:[-1..N1_MAX_SV-1] init -1;
//P1 moves :
[be] (t=TS) & (n < MXN) -> (t'=TP);
[end] (t=TS) & (n >= MXN) -> (end'=true);
[n0r0] (t=TP) & (n=0) & (a0_n0_rs0_sat_all=true) -> (n0'=0) & (t'=TE);
[n0r1] (t=TP) & (n=0) & (a0_n0_rs1_sat_all=true) -> (n0'=1) & (t'=TE);
[n0r2] (t=TP) & (n=0) & (a0_n0_rs2_sat_all=true) -> (n0'=2) & (t'=TE);
[n0r3] (t=TP) & (n=0) & (a0_n0_rs3_sat_all=true) -> (n0'=3) & (t'=TE);
[n0r4] (t=TP) & (n=0) & (a0_n0_rs4_sat_all=true) -> (n0'=4) & (t'=TE);
[n0r5] (t=TP) & (n=0) & (a0_n0_rs5_sat_all=true) -> (n0'=5) & (t'=TE);
[n0r6] (t=TP) & (n=0) & (a0_n0_rs6_sat_all=true) -> (n0'=6) & (t'=TE);
[n0r7] (t=TP) & (n=0) & (a0_n0_rs7_sat_all=true) -> (n0'=7) & (t'=TE);
[n0r8] (t=TP) & (n=0) & (a0_n0_rs8_sat_all=true) -> (n0'=8) & (t'=TE);
[n0r9] (t=TP) & (n=0) & (a0_n0_rs9_sat_all=true) -> (n0'=9) & (t'=TE);
[n0r10] (t=TP) & (n=0) & (a0_n0_rs10_sat_all=true) -> (n0'=10) & (t'=TE);
[n0r11] (t=TP) & (n=0) & (a0_n0_rs11_sat_all=true) -> (n0'=11) & (t'=TE);
[n0r12] (t=TP) & (n=0) & (a0_n0_rs12_sat_all=true) -> (n0'=12) & (t'=TE);
[n0r13] (t=TP) & (n=0) & (a0_n0_rs13_sat_all=true) -> (n0'=13) & (t'=TE);
[n0r14] (t=TP) & (n=0) & (a0_n0_rs14_sat_all=true) -> (n0'=14) & (t'=TE);
[n0r15] (t=TP) & (n=0) & (a0_n0_rs15_sat_all=true) -> (n0'=15) & (t'=TE);
[n0r16] (t=TP) & (n=0) & (a0_n0_rs16_sat_all=true) -> (n0'=16) & (t'=TE);
[n0r17] (t=TP) & (n=0) & (a0_n0_rs17_sat_all=true) -> (n0'=17) & (t'=TE);
[n0r18] (t=TP) & (n=0) & (a0_n0_rs18_sat_all=true) -> (n0'=18) & (t'=TE);
[n0r19] (t=TP) & (n=0) & (a0_n0_rs19_sat_all=true) -> (n0'=19) & (t'=TE);
[n0r20] (t=TP) & (n=0) & (a0_n0_rs20_sat_all=true) -> (n0'=20) & (t'=TE);
[n0r21] (t=TP) & (n=0) & (a0_n0_rs21_sat_all=true) -> (n0'=21) & (t'=TE);
[n0r22] (t=TP) & (n=0) & (a0_n0_rs22_sat_all=true) -> (n0'=22) & (t'=TE);
[n0r23] (t=TP) & (n=0) & (a0_n0_rs23_sat_all=true) -> (n0'=23) & (t'=TE);
[n0r24] (t=TP) & (n=0) & (a0_n0_rs24_sat_all=true) -> (n0'=24) & (t'=TE);
[n0r25] (t=TP) & (n=0) & (a0_n0_rs25_sat_all=true) -> (n0'=25) & (t'=TE);
[n0r26] (t=TP) & (n=0) & (a0_n0_rs26_sat_all=true) -> (n0'=26) & (t'=TE);
[n0r27] (t=TP) & (n=0) & (a0_n0_rs27_sat_all=true) -> (n0'=27) & (t'=TE);
[n0r28] (t=TP) & (n=0) & (a0_n0_rs28_sat_all=true) -> (n0'=28) & (t'=TE);
[n0r29] (t=TP) & (n=0) & (a0_n0_rs29_sat_all=true) -> (n0'=29) & (t'=TE);
[n0r30] (t=TP) & (n=0) & (a0_n0_rs30_sat_all=true) -> (n0'=30) & (t'=TE);
[n0r31] (t=TP) & (n=0) & (a0_n0_rs31_sat_all=true) -> (n0'=31) & (t'=TE);
[n0r32] (t=TP) & (n=0) & (a0_n0_rs32_sat_all=true) -> (n0'=32) & (t'=TE);
[n0r33] (t=TP) & (n=0) & (a0_n0_rs33_sat_all=true) -> (n0'=33) & (t'=TE);
[n0r34] (t=TP) & (n=0) & (a0_n0_rs34_sat_all=true) -> (n0'=34) & (t'=TE);
[n0r35] (t=TP) & (n=0) & (a0_n0_rs35_sat_all=true) -> (n0'=35) & (t'=TE);
[n0r36] (t=TP) & (n=0) & (a0_n0_rs36_sat_all=true) -> (n0'=36) & (t'=TE);
[n0r37] (t=TP) & (n=0) & (a0_n0_rs37_sat_all=true) -> (n0'=37) & (t'=TE);
[n0r38] (t=TP) & (n=0) & (a0_n0_rs38_sat_all=true) -> (n0'=38) & (t'=TE);
[n0r39] (t=TP) & (n=0) & (a0_n0_rs39_sat_all=true) -> (n0'=39) & (t'=TE);
[n0r40] (t=TP) & (n=0) & (a0_n0_rs40_sat_all=true) -> (n0'=40) & (t'=TE);
[n0r41] (t=TP) & (n=0) & (a0_n0_rs41_sat_all=true) -> (n0'=41) & (t'=TE);
[n0r42] (t=TP) & (n=0) & (a0_n0_rs42_sat_all=true) -> (n0'=42) & (t'=TE);
[n0r43] (t=TP) & (n=0) & (a0_n0_rs43_sat_all=true) -> (n0'=43) & (t'=TE);
[n0r44] (t=TP) & (n=0) & (a0_n0_rs44_sat_all=true) -> (n0'=44) & (t'=TE);
[n0r45] (t=TP) & (n=0) & (a0_n0_rs45_sat_all=true) -> (n0'=45) & (t'=TE);
[n0r46] (t=TP) & (n=0) & (a0_n0_rs46_sat_all=true) -> (n0'=46) & (t'=TE);
[n0r47] (t=TP) & (n=0) & (a0_n0_rs47_sat_all=true) -> (n0'=47) & (t'=TE);
[n0r48] (t=TP) & (n=0) & (a0_n0_rs48_sat_all=true) -> (n0'=48) & (t'=TE);
[n0r49] (t=TP) & (n=0) & (a0_n0_rs49_sat_all=true) -> (n0'=49) & (t'=TE);
[n1r0] (t=TP) & (n=1) & (a0_n1_rs0_sat_all=true) -> (n1'=0) & (t'=TE);
[n1r1] (t=TP) & (n=1) & (a0_n1_rs1_sat_all=true) -> (n1'=1) & (t'=TE);
[n1r2] (t=TP) & (n=1) & (a0_n1_rs2_sat_all=true) -> (n1'=2) & (t'=TE);
[n1r3] (t=TP) & (n=1) & (a0_n1_rs3_sat_all=true) -> (n1'=3) & (t'=TE);
[n1r4] (t=TP) & (n=1) & (a0_n1_rs4_sat_all=true) -> (n1'=4) & (t'=TE);
[n1r5] (t=TP) & (n=1) & (a0_n1_rs5_sat_all=true) -> (n1'=5) & (t'=TE);
[n1r6] (t=TP) & (n=1) & (a0_n1_rs6_sat_all=true) -> (n1'=6) & (t'=TE);
[n1r7] (t=TP) & (n=1) & (a0_n1_rs7_sat_all=true) -> (n1'=7) & (t'=TE);
[n1r8] (t=TP) & (n=1) & (a0_n1_rs8_sat_all=true) -> (n1'=8) & (t'=TE);
[n1r9] (t=TP) & (n=1) & (a0_n1_rs9_sat_all=true) -> (n1'=9) & (t'=TE);
[n1r10] (t=TP) & (n=1) & (a0_n1_rs10_sat_all=true) -> (n1'=10) & (t'=TE);
[n1r11] (t=TP) & (n=1) & (a0_n1_rs11_sat_all=true) -> (n1'=11) & (t'=TE);
[n1r12] (t=TP) & (n=1) & (a0_n1_rs12_sat_all=true) -> (n1'=12) & (t'=TE);
[n1r13] (t=TP) & (n=1) & (a0_n1_rs13_sat_all=true) -> (n1'=13) & (t'=TE);
[n1r14] (t=TP) & (n=1) & (a0_n1_rs14_sat_all=true) -> (n1'=14) & (t'=TE);
[n1r15] (t=TP) & (n=1) & (a0_n1_rs15_sat_all=true) -> (n1'=15) & (t'=TE);
[n1r16] (t=TP) & (n=1) & (a0_n1_rs16_sat_all=true) -> (n1'=16) & (t'=TE);
[n1r17] (t=TP) & (n=1) & (a0_n1_rs17_sat_all=true) -> (n1'=17) & (t'=TE);
[n1r18] (t=TP) & (n=1) & (a0_n1_rs18_sat_all=true) -> (n1'=18) & (t'=TE);
[n1r19] (t=TP) & (n=1) & (a0_n1_rs19_sat_all=true) -> (n1'=19) & (t'=TE);
[n1r20] (t=TP) & (n=1) & (a0_n1_rs20_sat_all=true) -> (n1'=20) & (t'=TE);
[n1r21] (t=TP) & (n=1) & (a0_n1_rs21_sat_all=true) -> (n1'=21) & (t'=TE);
[n1r22] (t=TP) & (n=1) & (a0_n1_rs22_sat_all=true) -> (n1'=22) & (t'=TE);
[n1r23] (t=TP) & (n=1) & (a0_n1_rs23_sat_all=true) -> (n1'=23) & (t'=TE);
[n1r24] (t=TP) & (n=1) & (a0_n1_rs24_sat_all=true) -> (n1'=24) & (t'=TE);
[n1r25] (t=TP) & (n=1) & (a0_n1_rs25_sat_all=true) -> (n1'=25) & (t'=TE);
[n1r26] (t=TP) & (n=1) & (a0_n1_rs26_sat_all=true) -> (n1'=26) & (t'=TE);
[n1r27] (t=TP) & (n=1) & (a0_n1_rs27_sat_all=true) -> (n1'=27) & (t'=TE);
[n1r28] (t=TP) & (n=1) & (a0_n1_rs28_sat_all=true) -> (n1'=28) & (t'=TE);
[n1r29] (t=TP) & (n=1) & (a0_n1_rs29_sat_all=true) -> (n1'=29) & (t'=TE);
[n1r30] (t=TP) & (n=1) & (a0_n1_rs30_sat_all=true) -> (n1'=30) & (t'=TE);
[n1r31] (t=TP) & (n=1) & (a0_n1_rs31_sat_all=true) -> (n1'=31) & (t'=TE);
[n1r32] (t=TP) & (n=1) & (a0_n1_rs32_sat_all=true) -> (n1'=32) & (t'=TE);
[n1r33] (t=TP) & (n=1) & (a0_n1_rs33_sat_all=true) -> (n1'=33) & (t'=TE);
[n1r34] (t=TP) & (n=1) & (a0_n1_rs34_sat_all=true) -> (n1'=34) & (t'=TE);
[n1r35] (t=TP) & (n=1) & (a0_n1_rs35_sat_all=true) -> (n1'=35) & (t'=TE);
[n1r36] (t=TP) & (n=1) & (a0_n1_rs36_sat_all=true) -> (n1'=36) & (t'=TE);
[n1r37] (t=TP) & (n=1) & (a0_n1_rs37_sat_all=true) -> (n1'=37) & (t'=TE);
[n1r38] (t=TP) & (n=1) & (a0_n1_rs38_sat_all=true) -> (n1'=38) & (t'=TE);
[n1r39] (t=TP) & (n=1) & (a0_n1_rs39_sat_all=true) -> (n1'=39) & (t'=TE);
[n1r40] (t=TP) & (n=1) & (a0_n1_rs40_sat_all=true) -> (n1'=40) & (t'=TE);
[n1r41] (t=TP) & (n=1) & (a0_n1_rs41_sat_all=true) -> (n1'=41) & (t'=TE);
[n1r42] (t=TP) & (n=1) & (a0_n1_rs42_sat_all=true) -> (n1'=42) & (t'=TE);
[n1r43] (t=TP) & (n=1) & (a0_n1_rs43_sat_all=true) -> (n1'=43) & (t'=TE);
[n1r44] (t=TP) & (n=1) & (a0_n1_rs44_sat_all=true) -> (n1'=44) & (t'=TE);
[n1r45] (t=TP) & (n=1) & (a0_n1_rs45_sat_all=true) -> (n1'=45) & (t'=TE);
[n1r46] (t=TP) & (n=1) & (a0_n1_rs46_sat_all=true) -> (n1'=46) & (t'=TE);
[n1r47] (t=TP) & (n=1) & (a0_n1_rs47_sat_all=true) -> (n1'=47) & (t'=TE);
[n1r48] (t=TP) & (n=1) & (a0_n1_rs48_sat_all=true) -> (n1'=48) & (t'=TE);
[n1r49] (t=TP) & (n=1) & (a0_n1_rs49_sat_all=true) -> (n1'=49) & (t'=TE);
endmodule

//=========Module for Player 2=======
module environment
n0ev:[-1..N0_MAX_EV] init -1;
n1ev:[-1..N1_MAX_EV] init -1;
//P2 moves :
[n0e0] (t=TE) & (n=0) -> n0ev0_rel:(n0ev'=0) & (t'=TS) & (n'=n+1) + 1-n0ev0_rel:(n0ev'=-1) & (t'=TS) & (n'=n+1);
[n0e1] (t=TE) & (n=0) -> n0ev1_rel:(n0ev'=1) & (t'=TS) & (n'=n+1) + 1-n0ev1_rel:(n0ev'=-1) & (t'=TS) & (n'=n+1);
[n0e2] (t=TE) & (n=0) -> n0ev2_rel:(n0ev'=2) & (t'=TS) & (n'=n+1) + 1-n0ev2_rel:(n0ev'=-1) & (t'=TS) & (n'=n+1);
[n0e3] (t=TE) & (n=0) -> n0ev3_rel:(n0ev'=3) & (t'=TS) & (n'=n+1) + 1-n0ev3_rel:(n0ev'=-1) & (t'=TS) & (n'=n+1);
[n0e4] (t=TE) & (n=0) -> n0ev4_rel:(n0ev'=4) & (t'=TS) & (n'=n+1) + 1-n0ev4_rel:(n0ev'=-1) & (t'=TS) & (n'=n+1);
[n1e0] (t=TE) & (n=1) -> n1ev0_rel:(n1ev'=0) & (t'=TS) & (n'=n+1) + 1-n1ev0_rel:(n1ev'=-1) & (t'=TS) & (n'=n+1);
[n1e1] (t=TE) & (n=1) -> n1ev1_rel:(n1ev'=1) & (t'=TS) & (n'=n+1) + 1-n1ev1_rel:(n1ev'=-1) & (t'=TS) & (n'=n+1);
[n1e2] (t=TE) & (n=1) -> n1ev2_rel:(n1ev'=2) & (t'=TS) & (n'=n+1) + 1-n1ev2_rel:(n1ev'=-1) & (t'=TS) & (n'=n+1);
[n1e3] (t=TE) & (n=1) -> n1ev3_rel:(n1ev'=3) & (t'=TS) & (n'=n+1) + 1-n1ev3_rel:(n1ev'=-1) & (t'=TS) & (n'=n+1);
[n1e4] (t=TE) & (n=1) -> n1ev4_rel:(n1ev'=4) & (t'=TS) & (n'=n+1) + 1-n1ev4_rel:(n1ev'=-1) & (t'=TS) & (n'=n+1);
endmodule

//=========Assign reliability values=======
formula n0ev0_rel = ( n0 = 0 ? N0_RS0_REL0 : ( n0 = 1 ? N0_RS1_REL0 : ( n0 = 2 ? N0_RS2_REL0 : ( n0 = 3 ? N0_RS3_REL0 : ( n0 = 4 ? N0_RS4_REL0 : ( n0 = 5 ? N0_RS5_REL0 : ( n0 = 6 ? N0_RS6_REL0 : ( n0 = 7 ? N0_RS7_REL0 : ( n0 = 8 ? N0_RS8_REL0 : ( n0 = 9 ? N0_RS9_REL0 : ( n0 = 10 ? N0_RS10_REL0 : ( n0 = 11 ? N0_RS11_REL0 : ( n0 = 12 ? N0_RS12_REL0 : ( n0 = 13 ? N0_RS13_REL0 : ( n0 = 14 ? N0_RS14_REL0 : ( n0 = 15 ? N0_RS15_REL0 : ( n0 = 16 ? N0_RS16_REL0 : ( n0 = 17 ? N0_RS17_REL0 : ( n0 = 18 ? N0_RS18_REL0 : ( n0 = 19 ? N0_RS19_REL0 : ( n0 = 20 ? N0_RS20_REL0 : ( n0 = 21 ? N0_RS21_REL0 : ( n0 = 22 ? N0_RS22_REL0 : ( n0 = 23 ? N0_RS23_REL0 : ( n0 = 24 ? N0_RS24_REL0 : ( n0 = 25 ? N0_RS25_REL0 : ( n0 = 26 ? N0_RS26_REL0 : ( n0 = 27 ? N0_RS27_REL0 : ( n0 = 28 ? N0_RS28_REL0 : ( n0 = 29 ? N0_RS29_REL0 : ( n0 = 30 ? N0_RS30_REL0 : ( n0 = 31 ? N0_RS31_REL0 : ( n0 = 32 ? N0_RS32_REL0 : ( n0 = 33 ? N0_RS33_REL0 : ( n0 = 34 ? N0_RS34_REL0 : ( n0 = 35 ? N0_RS35_REL0 : ( n0 = 36 ? N0_RS36_REL0 : ( n0 = 37 ? N0_RS37_REL0 : ( n0 = 38 ? N0_RS38_REL0 : ( n0 = 39 ? N0_RS39_REL0 : ( n0 = 40 ? N0_RS40_REL0 : ( n0 = 41 ? N0_RS41_REL0 : ( n0 = 42 ? N0_RS42_REL0 : ( n0 = 43 ? N0_RS43_REL0 : ( n0 = 44 ? N0_RS44_REL0 : ( n0 = 45 ? N0_RS45_REL0 : ( n0 = 46 ? N0_RS46_REL0 : ( n0 = 47 ? N0_RS47_REL0 : ( n0 = 48 ? N0_RS48_REL0 : ( n0 = 49 ? N0_RS49_REL0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n0ev1_rel = ( n0 = 0 ? N0_RS0_REL1 : ( n0 = 1 ? N0_RS1_REL1 : ( n0 = 2 ? N0_RS2_REL1 : ( n0 = 3 ? N0_RS3_REL1 : ( n0 = 4 ? N0_RS4_REL1 : ( n0 = 5 ? N0_RS5_REL1 : ( n0 = 6 ? N0_RS6_REL1 : ( n0 = 7 ? N0_RS7_REL1 : ( n0 = 8 ? N0_RS8_REL1 : ( n0 = 9 ? N0_RS9_REL1 : ( n0 = 10 ? N0_RS10_REL1 : ( n0 = 11 ? N0_RS11_REL1 : ( n0 = 12 ? N0_RS12_REL1 : ( n0 = 13 ? N0_RS13_REL1 : ( n0 = 14 ? N0_RS14_REL1 : ( n0 = 15 ? N0_RS15_REL1 : ( n0 = 16 ? N0_RS16_REL1 : ( n0 = 17 ? N0_RS17_REL1 : ( n0 = 18 ? N0_RS18_REL1 : ( n0 = 19 ? N0_RS19_REL1 : ( n0 = 20 ? N0_RS20_REL1 : ( n0 = 21 ? N0_RS21_REL1 : ( n0 = 22 ? N0_RS22_REL1 : ( n0 = 23 ? N0_RS23_REL1 : ( n0 = 24 ? N0_RS24_REL1 : ( n0 = 25 ? N0_RS25_REL1 : ( n0 = 26 ? N0_RS26_REL1 : ( n0 = 27 ? N0_RS27_REL1 : ( n0 = 28 ? N0_RS28_REL1 : ( n0 = 29 ? N0_RS29_REL1 : ( n0 = 30 ? N0_RS30_REL1 : ( n0 = 31 ? N0_RS31_REL1 : ( n0 = 32 ? N0_RS32_REL1 : ( n0 = 33 ? N0_RS33_REL1 : ( n0 = 34 ? N0_RS34_REL1 : ( n0 = 35 ? N0_RS35_REL1 : ( n0 = 36 ? N0_RS36_REL1 : ( n0 = 37 ? N0_RS37_REL1 : ( n0 = 38 ? N0_RS38_REL1 : ( n0 = 39 ? N0_RS39_REL1 : ( n0 = 40 ? N0_RS40_REL1 : ( n0 = 41 ? N0_RS41_REL1 : ( n0 = 42 ? N0_RS42_REL1 : ( n0 = 43 ? N0_RS43_REL1 : ( n0 = 44 ? N0_RS44_REL1 : ( n0 = 45 ? N0_RS45_REL1 : ( n0 = 46 ? N0_RS46_REL1 : ( n0 = 47 ? N0_RS47_REL1 : ( n0 = 48 ? N0_RS48_REL1 : ( n0 = 49 ? N0_RS49_REL1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n0ev2_rel = ( n0 = 0 ? N0_RS0_REL2 : ( n0 = 1 ? N0_RS1_REL2 : ( n0 = 2 ? N0_RS2_REL2 : ( n0 = 3 ? N0_RS3_REL2 : ( n0 = 4 ? N0_RS4_REL2 : ( n0 = 5 ? N0_RS5_REL2 : ( n0 = 6 ? N0_RS6_REL2 : ( n0 = 7 ? N0_RS7_REL2 : ( n0 = 8 ? N0_RS8_REL2 : ( n0 = 9 ? N0_RS9_REL2 : ( n0 = 10 ? N0_RS10_REL2 : ( n0 = 11 ? N0_RS11_REL2 : ( n0 = 12 ? N0_RS12_REL2 : ( n0 = 13 ? N0_RS13_REL2 : ( n0 = 14 ? N0_RS14_REL2 : ( n0 = 15 ? N0_RS15_REL2 : ( n0 = 16 ? N0_RS16_REL2 : ( n0 = 17 ? N0_RS17_REL2 : ( n0 = 18 ? N0_RS18_REL2 : ( n0 = 19 ? N0_RS19_REL2 : ( n0 = 20 ? N0_RS20_REL2 : ( n0 = 21 ? N0_RS21_REL2 : ( n0 = 22 ? N0_RS22_REL2 : ( n0 = 23 ? N0_RS23_REL2 : ( n0 = 24 ? N0_RS24_REL2 : ( n0 = 25 ? N0_RS25_REL2 : ( n0 = 26 ? N0_RS26_REL2 : ( n0 = 27 ? N0_RS27_REL2 : ( n0 = 28 ? N0_RS28_REL2 : ( n0 = 29 ? N0_RS29_REL2 : ( n0 = 30 ? N0_RS30_REL2 : ( n0 = 31 ? N0_RS31_REL2 : ( n0 = 32 ? N0_RS32_REL2 : ( n0 = 33 ? N0_RS33_REL2 : ( n0 = 34 ? N0_RS34_REL2 : ( n0 = 35 ? N0_RS35_REL2 : ( n0 = 36 ? N0_RS36_REL2 : ( n0 = 37 ? N0_RS37_REL2 : ( n0 = 38 ? N0_RS38_REL2 : ( n0 = 39 ? N0_RS39_REL2 : ( n0 = 40 ? N0_RS40_REL2 : ( n0 = 41 ? N0_RS41_REL2 : ( n0 = 42 ? N0_RS42_REL2 : ( n0 = 43 ? N0_RS43_REL2 : ( n0 = 44 ? N0_RS44_REL2 : ( n0 = 45 ? N0_RS45_REL2 : ( n0 = 46 ? N0_RS46_REL2 : ( n0 = 47 ? N0_RS47_REL2 : ( n0 = 48 ? N0_RS48_REL2 : ( n0 = 49 ? N0_RS49_REL2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n0ev3_rel = ( n0 = 0 ? N0_RS0_REL3 : ( n0 = 1 ? N0_RS1_REL3 : ( n0 = 2 ? N0_RS2_REL3 : ( n0 = 3 ? N0_RS3_REL3 : ( n0 = 4 ? N0_RS4_REL3 : ( n0 = 5 ? N0_RS5_REL3 : ( n0 = 6 ? N0_RS6_REL3 : ( n0 = 7 ? N0_RS7_REL3 : ( n0 = 8 ? N0_RS8_REL3 : ( n0 = 9 ? N0_RS9_REL3 : ( n0 = 10 ? N0_RS10_REL3 : ( n0 = 11 ? N0_RS11_REL3 : ( n0 = 12 ? N0_RS12_REL3 : ( n0 = 13 ? N0_RS13_REL3 : ( n0 = 14 ? N0_RS14_REL3 : ( n0 = 15 ? N0_RS15_REL3 : ( n0 = 16 ? N0_RS16_REL3 : ( n0 = 17 ? N0_RS17_REL3 : ( n0 = 18 ? N0_RS18_REL3 : ( n0 = 19 ? N0_RS19_REL3 : ( n0 = 20 ? N0_RS20_REL3 : ( n0 = 21 ? N0_RS21_REL3 : ( n0 = 22 ? N0_RS22_REL3 : ( n0 = 23 ? N0_RS23_REL3 : ( n0 = 24 ? N0_RS24_REL3 : ( n0 = 25 ? N0_RS25_REL3 : ( n0 = 26 ? N0_RS26_REL3 : ( n0 = 27 ? N0_RS27_REL3 : ( n0 = 28 ? N0_RS28_REL3 : ( n0 = 29 ? N0_RS29_REL3 : ( n0 = 30 ? N0_RS30_REL3 : ( n0 = 31 ? N0_RS31_REL3 : ( n0 = 32 ? N0_RS32_REL3 : ( n0 = 33 ? N0_RS33_REL3 : ( n0 = 34 ? N0_RS34_REL3 : ( n0 = 35 ? N0_RS35_REL3 : ( n0 = 36 ? N0_RS36_REL3 : ( n0 = 37 ? N0_RS37_REL3 : ( n0 = 38 ? N0_RS38_REL3 : ( n0 = 39 ? N0_RS39_REL3 : ( n0 = 40 ? N0_RS40_REL3 : ( n0 = 41 ? N0_RS41_REL3 : ( n0 = 42 ? N0_RS42_REL3 : ( n0 = 43 ? N0_RS43_REL3 : ( n0 = 44 ? N0_RS44_REL3 : ( n0 = 45 ? N0_RS45_REL3 : ( n0 = 46 ? N0_RS46_REL3 : ( n0 = 47 ? N0_RS47_REL3 : ( n0 = 48 ? N0_RS48_REL3 : ( n0 = 49 ? N0_RS49_REL3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n0ev4_rel = ( n0 = 0 ? N0_RS0_REL4 : ( n0 = 1 ? N0_RS1_REL4 : ( n0 = 2 ? N0_RS2_REL4 : ( n0 = 3 ? N0_RS3_REL4 : ( n0 = 4 ? N0_RS4_REL4 : ( n0 = 5 ? N0_RS5_REL4 : ( n0 = 6 ? N0_RS6_REL4 : ( n0 = 7 ? N0_RS7_REL4 : ( n0 = 8 ? N0_RS8_REL4 : ( n0 = 9 ? N0_RS9_REL4 : ( n0 = 10 ? N0_RS10_REL4 : ( n0 = 11 ? N0_RS11_REL4 : ( n0 = 12 ? N0_RS12_REL4 : ( n0 = 13 ? N0_RS13_REL4 : ( n0 = 14 ? N0_RS14_REL4 : ( n0 = 15 ? N0_RS15_REL4 : ( n0 = 16 ? N0_RS16_REL4 : ( n0 = 17 ? N0_RS17_REL4 : ( n0 = 18 ? N0_RS18_REL4 : ( n0 = 19 ? N0_RS19_REL4 : ( n0 = 20 ? N0_RS20_REL4 : ( n0 = 21 ? N0_RS21_REL4 : ( n0 = 22 ? N0_RS22_REL4 : ( n0 = 23 ? N0_RS23_REL4 : ( n0 = 24 ? N0_RS24_REL4 : ( n0 = 25 ? N0_RS25_REL4 : ( n0 = 26 ? N0_RS26_REL4 : ( n0 = 27 ? N0_RS27_REL4 : ( n0 = 28 ? N0_RS28_REL4 : ( n0 = 29 ? N0_RS29_REL4 : ( n0 = 30 ? N0_RS30_REL4 : ( n0 = 31 ? N0_RS31_REL4 : ( n0 = 32 ? N0_RS32_REL4 : ( n0 = 33 ? N0_RS33_REL4 : ( n0 = 34 ? N0_RS34_REL4 : ( n0 = 35 ? N0_RS35_REL4 : ( n0 = 36 ? N0_RS36_REL4 : ( n0 = 37 ? N0_RS37_REL4 : ( n0 = 38 ? N0_RS38_REL4 : ( n0 = 39 ? N0_RS39_REL4 : ( n0 = 40 ? N0_RS40_REL4 : ( n0 = 41 ? N0_RS41_REL4 : ( n0 = 42 ? N0_RS42_REL4 : ( n0 = 43 ? N0_RS43_REL4 : ( n0 = 44 ? N0_RS44_REL4 : ( n0 = 45 ? N0_RS45_REL4 : ( n0 = 46 ? N0_RS46_REL4 : ( n0 = 47 ? N0_RS47_REL4 : ( n0 = 48 ? N0_RS48_REL4 : ( n0 = 49 ? N0_RS49_REL4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));

formula n1ev0_rel = ( n1 = 0 ? N1_RS0_REL0 : ( n1 = 1 ? N1_RS1_REL0 : ( n1 = 2 ? N1_RS2_REL0 : ( n1 = 3 ? N1_RS3_REL0 : ( n1 = 4 ? N1_RS4_REL0 : ( n1 = 5 ? N1_RS5_REL0 : ( n1 = 6 ? N1_RS6_REL0 : ( n1 = 7 ? N1_RS7_REL0 : ( n1 = 8 ? N1_RS8_REL0 : ( n1 = 9 ? N1_RS9_REL0 : ( n1 = 10 ? N1_RS10_REL0 : ( n1 = 11 ? N1_RS11_REL0 : ( n1 = 12 ? N1_RS12_REL0 : ( n1 = 13 ? N1_RS13_REL0 : ( n1 = 14 ? N1_RS14_REL0 : ( n1 = 15 ? N1_RS15_REL0 : ( n1 = 16 ? N1_RS16_REL0 : ( n1 = 17 ? N1_RS17_REL0 : ( n1 = 18 ? N1_RS18_REL0 : ( n1 = 19 ? N1_RS19_REL0 : ( n1 = 20 ? N1_RS20_REL0 : ( n1 = 21 ? N1_RS21_REL0 : ( n1 = 22 ? N1_RS22_REL0 : ( n1 = 23 ? N1_RS23_REL0 : ( n1 = 24 ? N1_RS24_REL0 : ( n1 = 25 ? N1_RS25_REL0 : ( n1 = 26 ? N1_RS26_REL0 : ( n1 = 27 ? N1_RS27_REL0 : ( n1 = 28 ? N1_RS28_REL0 : ( n1 = 29 ? N1_RS29_REL0 : ( n1 = 30 ? N1_RS30_REL0 : ( n1 = 31 ? N1_RS31_REL0 : ( n1 = 32 ? N1_RS32_REL0 : ( n1 = 33 ? N1_RS33_REL0 : ( n1 = 34 ? N1_RS34_REL0 : ( n1 = 35 ? N1_RS35_REL0 : ( n1 = 36 ? N1_RS36_REL0 : ( n1 = 37 ? N1_RS37_REL0 : ( n1 = 38 ? N1_RS38_REL0 : ( n1 = 39 ? N1_RS39_REL0 : ( n1 = 40 ? N1_RS40_REL0 : ( n1 = 41 ? N1_RS41_REL0 : ( n1 = 42 ? N1_RS42_REL0 : ( n1 = 43 ? N1_RS43_REL0 : ( n1 = 44 ? N1_RS44_REL0 : ( n1 = 45 ? N1_RS45_REL0 : ( n1 = 46 ? N1_RS46_REL0 : ( n1 = 47 ? N1_RS47_REL0 : ( n1 = 48 ? N1_RS48_REL0 : ( n1 = 49 ? N1_RS49_REL0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n1ev1_rel = ( n1 = 0 ? N1_RS0_REL1 : ( n1 = 1 ? N1_RS1_REL1 : ( n1 = 2 ? N1_RS2_REL1 : ( n1 = 3 ? N1_RS3_REL1 : ( n1 = 4 ? N1_RS4_REL1 : ( n1 = 5 ? N1_RS5_REL1 : ( n1 = 6 ? N1_RS6_REL1 : ( n1 = 7 ? N1_RS7_REL1 : ( n1 = 8 ? N1_RS8_REL1 : ( n1 = 9 ? N1_RS9_REL1 : ( n1 = 10 ? N1_RS10_REL1 : ( n1 = 11 ? N1_RS11_REL1 : ( n1 = 12 ? N1_RS12_REL1 : ( n1 = 13 ? N1_RS13_REL1 : ( n1 = 14 ? N1_RS14_REL1 : ( n1 = 15 ? N1_RS15_REL1 : ( n1 = 16 ? N1_RS16_REL1 : ( n1 = 17 ? N1_RS17_REL1 : ( n1 = 18 ? N1_RS18_REL1 : ( n1 = 19 ? N1_RS19_REL1 : ( n1 = 20 ? N1_RS20_REL1 : ( n1 = 21 ? N1_RS21_REL1 : ( n1 = 22 ? N1_RS22_REL1 : ( n1 = 23 ? N1_RS23_REL1 : ( n1 = 24 ? N1_RS24_REL1 : ( n1 = 25 ? N1_RS25_REL1 : ( n1 = 26 ? N1_RS26_REL1 : ( n1 = 27 ? N1_RS27_REL1 : ( n1 = 28 ? N1_RS28_REL1 : ( n1 = 29 ? N1_RS29_REL1 : ( n1 = 30 ? N1_RS30_REL1 : ( n1 = 31 ? N1_RS31_REL1 : ( n1 = 32 ? N1_RS32_REL1 : ( n1 = 33 ? N1_RS33_REL1 : ( n1 = 34 ? N1_RS34_REL1 : ( n1 = 35 ? N1_RS35_REL1 : ( n1 = 36 ? N1_RS36_REL1 : ( n1 = 37 ? N1_RS37_REL1 : ( n1 = 38 ? N1_RS38_REL1 : ( n1 = 39 ? N1_RS39_REL1 : ( n1 = 40 ? N1_RS40_REL1 : ( n1 = 41 ? N1_RS41_REL1 : ( n1 = 42 ? N1_RS42_REL1 : ( n1 = 43 ? N1_RS43_REL1 : ( n1 = 44 ? N1_RS44_REL1 : ( n1 = 45 ? N1_RS45_REL1 : ( n1 = 46 ? N1_RS46_REL1 : ( n1 = 47 ? N1_RS47_REL1 : ( n1 = 48 ? N1_RS48_REL1 : ( n1 = 49 ? N1_RS49_REL1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n1ev2_rel = ( n1 = 0 ? N1_RS0_REL2 : ( n1 = 1 ? N1_RS1_REL2 : ( n1 = 2 ? N1_RS2_REL2 : ( n1 = 3 ? N1_RS3_REL2 : ( n1 = 4 ? N1_RS4_REL2 : ( n1 = 5 ? N1_RS5_REL2 : ( n1 = 6 ? N1_RS6_REL2 : ( n1 = 7 ? N1_RS7_REL2 : ( n1 = 8 ? N1_RS8_REL2 : ( n1 = 9 ? N1_RS9_REL2 : ( n1 = 10 ? N1_RS10_REL2 : ( n1 = 11 ? N1_RS11_REL2 : ( n1 = 12 ? N1_RS12_REL2 : ( n1 = 13 ? N1_RS13_REL2 : ( n1 = 14 ? N1_RS14_REL2 : ( n1 = 15 ? N1_RS15_REL2 : ( n1 = 16 ? N1_RS16_REL2 : ( n1 = 17 ? N1_RS17_REL2 : ( n1 = 18 ? N1_RS18_REL2 : ( n1 = 19 ? N1_RS19_REL2 : ( n1 = 20 ? N1_RS20_REL2 : ( n1 = 21 ? N1_RS21_REL2 : ( n1 = 22 ? N1_RS22_REL2 : ( n1 = 23 ? N1_RS23_REL2 : ( n1 = 24 ? N1_RS24_REL2 : ( n1 = 25 ? N1_RS25_REL2 : ( n1 = 26 ? N1_RS26_REL2 : ( n1 = 27 ? N1_RS27_REL2 : ( n1 = 28 ? N1_RS28_REL2 : ( n1 = 29 ? N1_RS29_REL2 : ( n1 = 30 ? N1_RS30_REL2 : ( n1 = 31 ? N1_RS31_REL2 : ( n1 = 32 ? N1_RS32_REL2 : ( n1 = 33 ? N1_RS33_REL2 : ( n1 = 34 ? N1_RS34_REL2 : ( n1 = 35 ? N1_RS35_REL2 : ( n1 = 36 ? N1_RS36_REL2 : ( n1 = 37 ? N1_RS37_REL2 : ( n1 = 38 ? N1_RS38_REL2 : ( n1 = 39 ? N1_RS39_REL2 : ( n1 = 40 ? N1_RS40_REL2 : ( n1 = 41 ? N1_RS41_REL2 : ( n1 = 42 ? N1_RS42_REL2 : ( n1 = 43 ? N1_RS43_REL2 : ( n1 = 44 ? N1_RS44_REL2 : ( n1 = 45 ? N1_RS45_REL2 : ( n1 = 46 ? N1_RS46_REL2 : ( n1 = 47 ? N1_RS47_REL2 : ( n1 = 48 ? N1_RS48_REL2 : ( n1 = 49 ? N1_RS49_REL2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n1ev3_rel = ( n1 = 0 ? N1_RS0_REL3 : ( n1 = 1 ? N1_RS1_REL3 : ( n1 = 2 ? N1_RS2_REL3 : ( n1 = 3 ? N1_RS3_REL3 : ( n1 = 4 ? N1_RS4_REL3 : ( n1 = 5 ? N1_RS5_REL3 : ( n1 = 6 ? N1_RS6_REL3 : ( n1 = 7 ? N1_RS7_REL3 : ( n1 = 8 ? N1_RS8_REL3 : ( n1 = 9 ? N1_RS9_REL3 : ( n1 = 10 ? N1_RS10_REL3 : ( n1 = 11 ? N1_RS11_REL3 : ( n1 = 12 ? N1_RS12_REL3 : ( n1 = 13 ? N1_RS13_REL3 : ( n1 = 14 ? N1_RS14_REL3 : ( n1 = 15 ? N1_RS15_REL3 : ( n1 = 16 ? N1_RS16_REL3 : ( n1 = 17 ? N1_RS17_REL3 : ( n1 = 18 ? N1_RS18_REL3 : ( n1 = 19 ? N1_RS19_REL3 : ( n1 = 20 ? N1_RS20_REL3 : ( n1 = 21 ? N1_RS21_REL3 : ( n1 = 22 ? N1_RS22_REL3 : ( n1 = 23 ? N1_RS23_REL3 : ( n1 = 24 ? N1_RS24_REL3 : ( n1 = 25 ? N1_RS25_REL3 : ( n1 = 26 ? N1_RS26_REL3 : ( n1 = 27 ? N1_RS27_REL3 : ( n1 = 28 ? N1_RS28_REL3 : ( n1 = 29 ? N1_RS29_REL3 : ( n1 = 30 ? N1_RS30_REL3 : ( n1 = 31 ? N1_RS31_REL3 : ( n1 = 32 ? N1_RS32_REL3 : ( n1 = 33 ? N1_RS33_REL3 : ( n1 = 34 ? N1_RS34_REL3 : ( n1 = 35 ? N1_RS35_REL3 : ( n1 = 36 ? N1_RS36_REL3 : ( n1 = 37 ? N1_RS37_REL3 : ( n1 = 38 ? N1_RS38_REL3 : ( n1 = 39 ? N1_RS39_REL3 : ( n1 = 40 ? N1_RS40_REL3 : ( n1 = 41 ? N1_RS41_REL3 : ( n1 = 42 ? N1_RS42_REL3 : ( n1 = 43 ? N1_RS43_REL3 : ( n1 = 44 ? N1_RS44_REL3 : ( n1 = 45 ? N1_RS45_REL3 : ( n1 = 46 ? N1_RS46_REL3 : ( n1 = 47 ? N1_RS47_REL3 : ( n1 = 48 ? N1_RS48_REL3 : ( n1 = 49 ? N1_RS49_REL3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
formula n1ev4_rel = ( n1 = 0 ? N1_RS0_REL4 : ( n1 = 1 ? N1_RS1_REL4 : ( n1 = 2 ? N1_RS2_REL4 : ( n1 = 3 ? N1_RS3_REL4 : ( n1 = 4 ? N1_RS4_REL4 : ( n1 = 5 ? N1_RS5_REL4 : ( n1 = 6 ? N1_RS6_REL4 : ( n1 = 7 ? N1_RS7_REL4 : ( n1 = 8 ? N1_RS8_REL4 : ( n1 = 9 ? N1_RS9_REL4 : ( n1 = 10 ? N1_RS10_REL4 : ( n1 = 11 ? N1_RS11_REL4 : ( n1 = 12 ? N1_RS12_REL4 : ( n1 = 13 ? N1_RS13_REL4 : ( n1 = 14 ? N1_RS14_REL4 : ( n1 = 15 ? N1_RS15_REL4 : ( n1 = 16 ? N1_RS16_REL4 : ( n1 = 17 ? N1_RS17_REL4 : ( n1 = 18 ? N1_RS18_REL4 : ( n1 = 19 ? N1_RS19_REL4 : ( n1 = 20 ? N1_RS20_REL4 : ( n1 = 21 ? N1_RS21_REL4 : ( n1 = 22 ? N1_RS22_REL4 : ( n1 = 23 ? N1_RS23_REL4 : ( n1 = 24 ? N1_RS24_REL4 : ( n1 = 25 ? N1_RS25_REL4 : ( n1 = 26 ? N1_RS26_REL4 : ( n1 = 27 ? N1_RS27_REL4 : ( n1 = 28 ? N1_RS28_REL4 : ( n1 = 29 ? N1_RS29_REL4 : ( n1 = 30 ? N1_RS30_REL4 : ( n1 = 31 ? N1_RS31_REL4 : ( n1 = 32 ? N1_RS32_REL4 : ( n1 = 33 ? N1_RS33_REL4 : ( n1 = 34 ? N1_RS34_REL4 : ( n1 = 35 ? N1_RS35_REL4 : ( n1 = 36 ? N1_RS36_REL4 : ( n1 = 37 ? N1_RS37_REL4 : ( n1 = 38 ? N1_RS38_REL4 : ( n1 = 39 ? N1_RS39_REL4 : ( n1 = 40 ? N1_RS40_REL4 : ( n1 = 41 ? N1_RS41_REL4 : ( n1 = 42 ? N1_RS42_REL4 : ( n1 = 43 ? N1_RS43_REL4 : ( n1 = 44 ? N1_RS44_REL4 : ( n1 = 45 ? N1_RS45_REL4 : ( n1 = 46 ? N1_RS46_REL4 : ( n1 = 47 ? N1_RS47_REL4 : ( n1 = 48 ? N1_RS48_REL4 : ( n1 = 49 ? N1_RS49_REL4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));


//=========QoS Constraints Checking=======
//=====Application 0, Node0 and RS0
formula a0_n0_rs0_sat_dur0 = ( (A0_DUR <= N0_RS0_DUR0) ? true:false);
formula a0_n0_rs0_sat_dur1 = ( (A0_DUR <= N0_RS0_DUR1) ? true:false);
formula a0_n0_rs0_sat_dur2 = ( (A0_DUR <= N0_RS0_DUR2) ? true:false);
formula a0_n0_rs0_sat_dur3 = ( (A0_DUR <= N0_RS0_DUR3) ? true:false);
formula a0_n0_rs0_sat_dur4 = ( (A0_DUR <= N0_RS0_DUR4) ? true:false);
formula a0_n0_rs0_sat_rel0 = ( (A0_DUR <= N0_RS0_REL0) ? true:false);
formula a0_n0_rs0_sat_rel1 = ( (A0_DUR <= N0_RS0_REL1) ? true:false);
formula a0_n0_rs0_sat_rel2 = ( (A0_DUR <= N0_RS0_REL2) ? true:false);
formula a0_n0_rs0_sat_rel3 = ( (A0_DUR <= N0_RS0_REL3) ? true:false);
formula a0_n0_rs0_sat_rel4 = ( (A0_DUR <= N0_RS0_REL4) ? true:false);
formula a0_n0_rs0_sat_cost = ( (A0_COST <= N0_RS0_COST) ? true:false);
formula a0_n0_rs0_sat_avail = N0_RS0_AVAIL;
formula a0_n0_rs0_sat_all = a0_n0_rs0_sat_avail;

//=====Application 0, Node0 and RS1
formula a0_n0_rs1_sat_dur0 = ( (A0_DUR <= N0_RS1_DUR0) ? true:false);
formula a0_n0_rs1_sat_dur1 = ( (A0_DUR <= N0_RS1_DUR1) ? true:false);
formula a0_n0_rs1_sat_dur2 = ( (A0_DUR <= N0_RS1_DUR2) ? true:false);
formula a0_n0_rs1_sat_dur3 = ( (A0_DUR <= N0_RS1_DUR3) ? true:false);
formula a0_n0_rs1_sat_dur4 = ( (A0_DUR <= N0_RS1_DUR4) ? true:false);
formula a0_n0_rs1_sat_rel0 = ( (A0_DUR <= N0_RS1_REL0) ? true:false);
formula a0_n0_rs1_sat_rel1 = ( (A0_DUR <= N0_RS1_REL1) ? true:false);
formula a0_n0_rs1_sat_rel2 = ( (A0_DUR <= N0_RS1_REL2) ? true:false);
formula a0_n0_rs1_sat_rel3 = ( (A0_DUR <= N0_RS1_REL3) ? true:false);
formula a0_n0_rs1_sat_rel4 = ( (A0_DUR <= N0_RS1_REL4) ? true:false);
formula a0_n0_rs1_sat_cost = ( (A0_COST <= N0_RS1_COST) ? true:false);
formula a0_n0_rs1_sat_avail = N0_RS1_AVAIL;
formula a0_n0_rs1_sat_all = a0_n0_rs1_sat_avail;

//=====Application 0, Node0 and RS2
formula a0_n0_rs2_sat_dur0 = ( (A0_DUR <= N0_RS2_DUR0) ? true:false);
formula a0_n0_rs2_sat_dur1 = ( (A0_DUR <= N0_RS2_DUR1) ? true:false);
formula a0_n0_rs2_sat_dur2 = ( (A0_DUR <= N0_RS2_DUR2) ? true:false);
formula a0_n0_rs2_sat_dur3 = ( (A0_DUR <= N0_RS2_DUR3) ? true:false);
formula a0_n0_rs2_sat_dur4 = ( (A0_DUR <= N0_RS2_DUR4) ? true:false);
formula a0_n0_rs2_sat_rel0 = ( (A0_DUR <= N0_RS2_REL0) ? true:false);
formula a0_n0_rs2_sat_rel1 = ( (A0_DUR <= N0_RS2_REL1) ? true:false);
formula a0_n0_rs2_sat_rel2 = ( (A0_DUR <= N0_RS2_REL2) ? true:false);
formula a0_n0_rs2_sat_rel3 = ( (A0_DUR <= N0_RS2_REL3) ? true:false);
formula a0_n0_rs2_sat_rel4 = ( (A0_DUR <= N0_RS2_REL4) ? true:false);
formula a0_n0_rs2_sat_cost = ( (A0_COST <= N0_RS2_COST) ? true:false);
formula a0_n0_rs2_sat_avail = N0_RS2_AVAIL;
formula a0_n0_rs2_sat_all = a0_n0_rs2_sat_avail;

//=====Application 0, Node0 and RS3
formula a0_n0_rs3_sat_dur0 = ( (A0_DUR <= N0_RS3_DUR0) ? true:false);
formula a0_n0_rs3_sat_dur1 = ( (A0_DUR <= N0_RS3_DUR1) ? true:false);
formula a0_n0_rs3_sat_dur2 = ( (A0_DUR <= N0_RS3_DUR2) ? true:false);
formula a0_n0_rs3_sat_dur3 = ( (A0_DUR <= N0_RS3_DUR3) ? true:false);
formula a0_n0_rs3_sat_dur4 = ( (A0_DUR <= N0_RS3_DUR4) ? true:false);
formula a0_n0_rs3_sat_rel0 = ( (A0_DUR <= N0_RS3_REL0) ? true:false);
formula a0_n0_rs3_sat_rel1 = ( (A0_DUR <= N0_RS3_REL1) ? true:false);
formula a0_n0_rs3_sat_rel2 = ( (A0_DUR <= N0_RS3_REL2) ? true:false);
formula a0_n0_rs3_sat_rel3 = ( (A0_DUR <= N0_RS3_REL3) ? true:false);
formula a0_n0_rs3_sat_rel4 = ( (A0_DUR <= N0_RS3_REL4) ? true:false);
formula a0_n0_rs3_sat_cost = ( (A0_COST <= N0_RS3_COST) ? true:false);
formula a0_n0_rs3_sat_avail = N0_RS3_AVAIL;
formula a0_n0_rs3_sat_all = a0_n0_rs3_sat_avail;

//=====Application 0, Node0 and RS4
formula a0_n0_rs4_sat_dur0 = ( (A0_DUR <= N0_RS4_DUR0) ? true:false);
formula a0_n0_rs4_sat_dur1 = ( (A0_DUR <= N0_RS4_DUR1) ? true:false);
formula a0_n0_rs4_sat_dur2 = ( (A0_DUR <= N0_RS4_DUR2) ? true:false);
formula a0_n0_rs4_sat_dur3 = ( (A0_DUR <= N0_RS4_DUR3) ? true:false);
formula a0_n0_rs4_sat_dur4 = ( (A0_DUR <= N0_RS4_DUR4) ? true:false);
formula a0_n0_rs4_sat_rel0 = ( (A0_DUR <= N0_RS4_REL0) ? true:false);
formula a0_n0_rs4_sat_rel1 = ( (A0_DUR <= N0_RS4_REL1) ? true:false);
formula a0_n0_rs4_sat_rel2 = ( (A0_DUR <= N0_RS4_REL2) ? true:false);
formula a0_n0_rs4_sat_rel3 = ( (A0_DUR <= N0_RS4_REL3) ? true:false);
formula a0_n0_rs4_sat_rel4 = ( (A0_DUR <= N0_RS4_REL4) ? true:false);
formula a0_n0_rs4_sat_cost = ( (A0_COST <= N0_RS4_COST) ? true:false);
formula a0_n0_rs4_sat_avail = N0_RS4_AVAIL;
formula a0_n0_rs4_sat_all = a0_n0_rs4_sat_avail;

//=====Application 0, Node0 and RS5
formula a0_n0_rs5_sat_dur0 = ( (A0_DUR <= N0_RS5_DUR0) ? true:false);
formula a0_n0_rs5_sat_dur1 = ( (A0_DUR <= N0_RS5_DUR1) ? true:false);
formula a0_n0_rs5_sat_dur2 = ( (A0_DUR <= N0_RS5_DUR2) ? true:false);
formula a0_n0_rs5_sat_dur3 = ( (A0_DUR <= N0_RS5_DUR3) ? true:false);
formula a0_n0_rs5_sat_dur4 = ( (A0_DUR <= N0_RS5_DUR4) ? true:false);
formula a0_n0_rs5_sat_rel0 = ( (A0_DUR <= N0_RS5_REL0) ? true:false);
formula a0_n0_rs5_sat_rel1 = ( (A0_DUR <= N0_RS5_REL1) ? true:false);
formula a0_n0_rs5_sat_rel2 = ( (A0_DUR <= N0_RS5_REL2) ? true:false);
formula a0_n0_rs5_sat_rel3 = ( (A0_DUR <= N0_RS5_REL3) ? true:false);
formula a0_n0_rs5_sat_rel4 = ( (A0_DUR <= N0_RS5_REL4) ? true:false);
formula a0_n0_rs5_sat_cost = ( (A0_COST <= N0_RS5_COST) ? true:false);
formula a0_n0_rs5_sat_avail = N0_RS5_AVAIL;
formula a0_n0_rs5_sat_all = a0_n0_rs5_sat_avail;

//=====Application 0, Node0 and RS6
formula a0_n0_rs6_sat_dur0 = ( (A0_DUR <= N0_RS6_DUR0) ? true:false);
formula a0_n0_rs6_sat_dur1 = ( (A0_DUR <= N0_RS6_DUR1) ? true:false);
formula a0_n0_rs6_sat_dur2 = ( (A0_DUR <= N0_RS6_DUR2) ? true:false);
formula a0_n0_rs6_sat_dur3 = ( (A0_DUR <= N0_RS6_DUR3) ? true:false);
formula a0_n0_rs6_sat_dur4 = ( (A0_DUR <= N0_RS6_DUR4) ? true:false);
formula a0_n0_rs6_sat_rel0 = ( (A0_DUR <= N0_RS6_REL0) ? true:false);
formula a0_n0_rs6_sat_rel1 = ( (A0_DUR <= N0_RS6_REL1) ? true:false);
formula a0_n0_rs6_sat_rel2 = ( (A0_DUR <= N0_RS6_REL2) ? true:false);
formula a0_n0_rs6_sat_rel3 = ( (A0_DUR <= N0_RS6_REL3) ? true:false);
formula a0_n0_rs6_sat_rel4 = ( (A0_DUR <= N0_RS6_REL4) ? true:false);
formula a0_n0_rs6_sat_cost = ( (A0_COST <= N0_RS6_COST) ? true:false);
formula a0_n0_rs6_sat_avail = N0_RS6_AVAIL;
formula a0_n0_rs6_sat_all = a0_n0_rs6_sat_avail;

//=====Application 0, Node0 and RS7
formula a0_n0_rs7_sat_dur0 = ( (A0_DUR <= N0_RS7_DUR0) ? true:false);
formula a0_n0_rs7_sat_dur1 = ( (A0_DUR <= N0_RS7_DUR1) ? true:false);
formula a0_n0_rs7_sat_dur2 = ( (A0_DUR <= N0_RS7_DUR2) ? true:false);
formula a0_n0_rs7_sat_dur3 = ( (A0_DUR <= N0_RS7_DUR3) ? true:false);
formula a0_n0_rs7_sat_dur4 = ( (A0_DUR <= N0_RS7_DUR4) ? true:false);
formula a0_n0_rs7_sat_rel0 = ( (A0_DUR <= N0_RS7_REL0) ? true:false);
formula a0_n0_rs7_sat_rel1 = ( (A0_DUR <= N0_RS7_REL1) ? true:false);
formula a0_n0_rs7_sat_rel2 = ( (A0_DUR <= N0_RS7_REL2) ? true:false);
formula a0_n0_rs7_sat_rel3 = ( (A0_DUR <= N0_RS7_REL3) ? true:false);
formula a0_n0_rs7_sat_rel4 = ( (A0_DUR <= N0_RS7_REL4) ? true:false);
formula a0_n0_rs7_sat_cost = ( (A0_COST <= N0_RS7_COST) ? true:false);
formula a0_n0_rs7_sat_avail = N0_RS7_AVAIL;
formula a0_n0_rs7_sat_all = a0_n0_rs7_sat_avail;

//=====Application 0, Node0 and RS8
formula a0_n0_rs8_sat_dur0 = ( (A0_DUR <= N0_RS8_DUR0) ? true:false);
formula a0_n0_rs8_sat_dur1 = ( (A0_DUR <= N0_RS8_DUR1) ? true:false);
formula a0_n0_rs8_sat_dur2 = ( (A0_DUR <= N0_RS8_DUR2) ? true:false);
formula a0_n0_rs8_sat_dur3 = ( (A0_DUR <= N0_RS8_DUR3) ? true:false);
formula a0_n0_rs8_sat_dur4 = ( (A0_DUR <= N0_RS8_DUR4) ? true:false);
formula a0_n0_rs8_sat_rel0 = ( (A0_DUR <= N0_RS8_REL0) ? true:false);
formula a0_n0_rs8_sat_rel1 = ( (A0_DUR <= N0_RS8_REL1) ? true:false);
formula a0_n0_rs8_sat_rel2 = ( (A0_DUR <= N0_RS8_REL2) ? true:false);
formula a0_n0_rs8_sat_rel3 = ( (A0_DUR <= N0_RS8_REL3) ? true:false);
formula a0_n0_rs8_sat_rel4 = ( (A0_DUR <= N0_RS8_REL4) ? true:false);
formula a0_n0_rs8_sat_cost = ( (A0_COST <= N0_RS8_COST) ? true:false);
formula a0_n0_rs8_sat_avail = N0_RS8_AVAIL;
formula a0_n0_rs8_sat_all = a0_n0_rs8_sat_avail;

//=====Application 0, Node0 and RS9
formula a0_n0_rs9_sat_dur0 = ( (A0_DUR <= N0_RS9_DUR0) ? true:false);
formula a0_n0_rs9_sat_dur1 = ( (A0_DUR <= N0_RS9_DUR1) ? true:false);
formula a0_n0_rs9_sat_dur2 = ( (A0_DUR <= N0_RS9_DUR2) ? true:false);
formula a0_n0_rs9_sat_dur3 = ( (A0_DUR <= N0_RS9_DUR3) ? true:false);
formula a0_n0_rs9_sat_dur4 = ( (A0_DUR <= N0_RS9_DUR4) ? true:false);
formula a0_n0_rs9_sat_rel0 = ( (A0_DUR <= N0_RS9_REL0) ? true:false);
formula a0_n0_rs9_sat_rel1 = ( (A0_DUR <= N0_RS9_REL1) ? true:false);
formula a0_n0_rs9_sat_rel2 = ( (A0_DUR <= N0_RS9_REL2) ? true:false);
formula a0_n0_rs9_sat_rel3 = ( (A0_DUR <= N0_RS9_REL3) ? true:false);
formula a0_n0_rs9_sat_rel4 = ( (A0_DUR <= N0_RS9_REL4) ? true:false);
formula a0_n0_rs9_sat_cost = ( (A0_COST <= N0_RS9_COST) ? true:false);
formula a0_n0_rs9_sat_avail = N0_RS9_AVAIL;
formula a0_n0_rs9_sat_all = a0_n0_rs9_sat_avail;

//=====Application 0, Node0 and RS10
formula a0_n0_rs10_sat_dur0 = ( (A0_DUR <= N0_RS10_DUR0) ? true:false);
formula a0_n0_rs10_sat_dur1 = ( (A0_DUR <= N0_RS10_DUR1) ? true:false);
formula a0_n0_rs10_sat_dur2 = ( (A0_DUR <= N0_RS10_DUR2) ? true:false);
formula a0_n0_rs10_sat_dur3 = ( (A0_DUR <= N0_RS10_DUR3) ? true:false);
formula a0_n0_rs10_sat_dur4 = ( (A0_DUR <= N0_RS10_DUR4) ? true:false);
formula a0_n0_rs10_sat_rel0 = ( (A0_DUR <= N0_RS10_REL0) ? true:false);
formula a0_n0_rs10_sat_rel1 = ( (A0_DUR <= N0_RS10_REL1) ? true:false);
formula a0_n0_rs10_sat_rel2 = ( (A0_DUR <= N0_RS10_REL2) ? true:false);
formula a0_n0_rs10_sat_rel3 = ( (A0_DUR <= N0_RS10_REL3) ? true:false);
formula a0_n0_rs10_sat_rel4 = ( (A0_DUR <= N0_RS10_REL4) ? true:false);
formula a0_n0_rs10_sat_cost = ( (A0_COST <= N0_RS10_COST) ? true:false);
formula a0_n0_rs10_sat_avail = N0_RS10_AVAIL;
formula a0_n0_rs10_sat_all = a0_n0_rs10_sat_avail;

//=====Application 0, Node0 and RS11
formula a0_n0_rs11_sat_dur0 = ( (A0_DUR <= N0_RS11_DUR0) ? true:false);
formula a0_n0_rs11_sat_dur1 = ( (A0_DUR <= N0_RS11_DUR1) ? true:false);
formula a0_n0_rs11_sat_dur2 = ( (A0_DUR <= N0_RS11_DUR2) ? true:false);
formula a0_n0_rs11_sat_dur3 = ( (A0_DUR <= N0_RS11_DUR3) ? true:false);
formula a0_n0_rs11_sat_dur4 = ( (A0_DUR <= N0_RS11_DUR4) ? true:false);
formula a0_n0_rs11_sat_rel0 = ( (A0_DUR <= N0_RS11_REL0) ? true:false);
formula a0_n0_rs11_sat_rel1 = ( (A0_DUR <= N0_RS11_REL1) ? true:false);
formula a0_n0_rs11_sat_rel2 = ( (A0_DUR <= N0_RS11_REL2) ? true:false);
formula a0_n0_rs11_sat_rel3 = ( (A0_DUR <= N0_RS11_REL3) ? true:false);
formula a0_n0_rs11_sat_rel4 = ( (A0_DUR <= N0_RS11_REL4) ? true:false);
formula a0_n0_rs11_sat_cost = ( (A0_COST <= N0_RS11_COST) ? true:false);
formula a0_n0_rs11_sat_avail = N0_RS11_AVAIL;
formula a0_n0_rs11_sat_all = a0_n0_rs11_sat_avail;

//=====Application 0, Node0 and RS12
formula a0_n0_rs12_sat_dur0 = ( (A0_DUR <= N0_RS12_DUR0) ? true:false);
formula a0_n0_rs12_sat_dur1 = ( (A0_DUR <= N0_RS12_DUR1) ? true:false);
formula a0_n0_rs12_sat_dur2 = ( (A0_DUR <= N0_RS12_DUR2) ? true:false);
formula a0_n0_rs12_sat_dur3 = ( (A0_DUR <= N0_RS12_DUR3) ? true:false);
formula a0_n0_rs12_sat_dur4 = ( (A0_DUR <= N0_RS12_DUR4) ? true:false);
formula a0_n0_rs12_sat_rel0 = ( (A0_DUR <= N0_RS12_REL0) ? true:false);
formula a0_n0_rs12_sat_rel1 = ( (A0_DUR <= N0_RS12_REL1) ? true:false);
formula a0_n0_rs12_sat_rel2 = ( (A0_DUR <= N0_RS12_REL2) ? true:false);
formula a0_n0_rs12_sat_rel3 = ( (A0_DUR <= N0_RS12_REL3) ? true:false);
formula a0_n0_rs12_sat_rel4 = ( (A0_DUR <= N0_RS12_REL4) ? true:false);
formula a0_n0_rs12_sat_cost = ( (A0_COST <= N0_RS12_COST) ? true:false);
formula a0_n0_rs12_sat_avail = N0_RS12_AVAIL;
formula a0_n0_rs12_sat_all = a0_n0_rs12_sat_avail;

//=====Application 0, Node0 and RS13
formula a0_n0_rs13_sat_dur0 = ( (A0_DUR <= N0_RS13_DUR0) ? true:false);
formula a0_n0_rs13_sat_dur1 = ( (A0_DUR <= N0_RS13_DUR1) ? true:false);
formula a0_n0_rs13_sat_dur2 = ( (A0_DUR <= N0_RS13_DUR2) ? true:false);
formula a0_n0_rs13_sat_dur3 = ( (A0_DUR <= N0_RS13_DUR3) ? true:false);
formula a0_n0_rs13_sat_dur4 = ( (A0_DUR <= N0_RS13_DUR4) ? true:false);
formula a0_n0_rs13_sat_rel0 = ( (A0_DUR <= N0_RS13_REL0) ? true:false);
formula a0_n0_rs13_sat_rel1 = ( (A0_DUR <= N0_RS13_REL1) ? true:false);
formula a0_n0_rs13_sat_rel2 = ( (A0_DUR <= N0_RS13_REL2) ? true:false);
formula a0_n0_rs13_sat_rel3 = ( (A0_DUR <= N0_RS13_REL3) ? true:false);
formula a0_n0_rs13_sat_rel4 = ( (A0_DUR <= N0_RS13_REL4) ? true:false);
formula a0_n0_rs13_sat_cost = ( (A0_COST <= N0_RS13_COST) ? true:false);
formula a0_n0_rs13_sat_avail = N0_RS13_AVAIL;
formula a0_n0_rs13_sat_all = a0_n0_rs13_sat_avail;

//=====Application 0, Node0 and RS14
formula a0_n0_rs14_sat_dur0 = ( (A0_DUR <= N0_RS14_DUR0) ? true:false);
formula a0_n0_rs14_sat_dur1 = ( (A0_DUR <= N0_RS14_DUR1) ? true:false);
formula a0_n0_rs14_sat_dur2 = ( (A0_DUR <= N0_RS14_DUR2) ? true:false);
formula a0_n0_rs14_sat_dur3 = ( (A0_DUR <= N0_RS14_DUR3) ? true:false);
formula a0_n0_rs14_sat_dur4 = ( (A0_DUR <= N0_RS14_DUR4) ? true:false);
formula a0_n0_rs14_sat_rel0 = ( (A0_DUR <= N0_RS14_REL0) ? true:false);
formula a0_n0_rs14_sat_rel1 = ( (A0_DUR <= N0_RS14_REL1) ? true:false);
formula a0_n0_rs14_sat_rel2 = ( (A0_DUR <= N0_RS14_REL2) ? true:false);
formula a0_n0_rs14_sat_rel3 = ( (A0_DUR <= N0_RS14_REL3) ? true:false);
formula a0_n0_rs14_sat_rel4 = ( (A0_DUR <= N0_RS14_REL4) ? true:false);
formula a0_n0_rs14_sat_cost = ( (A0_COST <= N0_RS14_COST) ? true:false);
formula a0_n0_rs14_sat_avail = N0_RS14_AVAIL;
formula a0_n0_rs14_sat_all = a0_n0_rs14_sat_avail;

//=====Application 0, Node0 and RS15
formula a0_n0_rs15_sat_dur0 = ( (A0_DUR <= N0_RS15_DUR0) ? true:false);
formula a0_n0_rs15_sat_dur1 = ( (A0_DUR <= N0_RS15_DUR1) ? true:false);
formula a0_n0_rs15_sat_dur2 = ( (A0_DUR <= N0_RS15_DUR2) ? true:false);
formula a0_n0_rs15_sat_dur3 = ( (A0_DUR <= N0_RS15_DUR3) ? true:false);
formula a0_n0_rs15_sat_dur4 = ( (A0_DUR <= N0_RS15_DUR4) ? true:false);
formula a0_n0_rs15_sat_rel0 = ( (A0_DUR <= N0_RS15_REL0) ? true:false);
formula a0_n0_rs15_sat_rel1 = ( (A0_DUR <= N0_RS15_REL1) ? true:false);
formula a0_n0_rs15_sat_rel2 = ( (A0_DUR <= N0_RS15_REL2) ? true:false);
formula a0_n0_rs15_sat_rel3 = ( (A0_DUR <= N0_RS15_REL3) ? true:false);
formula a0_n0_rs15_sat_rel4 = ( (A0_DUR <= N0_RS15_REL4) ? true:false);
formula a0_n0_rs15_sat_cost = ( (A0_COST <= N0_RS15_COST) ? true:false);
formula a0_n0_rs15_sat_avail = N0_RS15_AVAIL;
formula a0_n0_rs15_sat_all = a0_n0_rs15_sat_avail;

//=====Application 0, Node0 and RS16
formula a0_n0_rs16_sat_dur0 = ( (A0_DUR <= N0_RS16_DUR0) ? true:false);
formula a0_n0_rs16_sat_dur1 = ( (A0_DUR <= N0_RS16_DUR1) ? true:false);
formula a0_n0_rs16_sat_dur2 = ( (A0_DUR <= N0_RS16_DUR2) ? true:false);
formula a0_n0_rs16_sat_dur3 = ( (A0_DUR <= N0_RS16_DUR3) ? true:false);
formula a0_n0_rs16_sat_dur4 = ( (A0_DUR <= N0_RS16_DUR4) ? true:false);
formula a0_n0_rs16_sat_rel0 = ( (A0_DUR <= N0_RS16_REL0) ? true:false);
formula a0_n0_rs16_sat_rel1 = ( (A0_DUR <= N0_RS16_REL1) ? true:false);
formula a0_n0_rs16_sat_rel2 = ( (A0_DUR <= N0_RS16_REL2) ? true:false);
formula a0_n0_rs16_sat_rel3 = ( (A0_DUR <= N0_RS16_REL3) ? true:false);
formula a0_n0_rs16_sat_rel4 = ( (A0_DUR <= N0_RS16_REL4) ? true:false);
formula a0_n0_rs16_sat_cost = ( (A0_COST <= N0_RS16_COST) ? true:false);
formula a0_n0_rs16_sat_avail = N0_RS16_AVAIL;
formula a0_n0_rs16_sat_all = a0_n0_rs16_sat_avail;

//=====Application 0, Node0 and RS17
formula a0_n0_rs17_sat_dur0 = ( (A0_DUR <= N0_RS17_DUR0) ? true:false);
formula a0_n0_rs17_sat_dur1 = ( (A0_DUR <= N0_RS17_DUR1) ? true:false);
formula a0_n0_rs17_sat_dur2 = ( (A0_DUR <= N0_RS17_DUR2) ? true:false);
formula a0_n0_rs17_sat_dur3 = ( (A0_DUR <= N0_RS17_DUR3) ? true:false);
formula a0_n0_rs17_sat_dur4 = ( (A0_DUR <= N0_RS17_DUR4) ? true:false);
formula a0_n0_rs17_sat_rel0 = ( (A0_DUR <= N0_RS17_REL0) ? true:false);
formula a0_n0_rs17_sat_rel1 = ( (A0_DUR <= N0_RS17_REL1) ? true:false);
formula a0_n0_rs17_sat_rel2 = ( (A0_DUR <= N0_RS17_REL2) ? true:false);
formula a0_n0_rs17_sat_rel3 = ( (A0_DUR <= N0_RS17_REL3) ? true:false);
formula a0_n0_rs17_sat_rel4 = ( (A0_DUR <= N0_RS17_REL4) ? true:false);
formula a0_n0_rs17_sat_cost = ( (A0_COST <= N0_RS17_COST) ? true:false);
formula a0_n0_rs17_sat_avail = N0_RS17_AVAIL;
formula a0_n0_rs17_sat_all = a0_n0_rs17_sat_avail;

//=====Application 0, Node0 and RS18
formula a0_n0_rs18_sat_dur0 = ( (A0_DUR <= N0_RS18_DUR0) ? true:false);
formula a0_n0_rs18_sat_dur1 = ( (A0_DUR <= N0_RS18_DUR1) ? true:false);
formula a0_n0_rs18_sat_dur2 = ( (A0_DUR <= N0_RS18_DUR2) ? true:false);
formula a0_n0_rs18_sat_dur3 = ( (A0_DUR <= N0_RS18_DUR3) ? true:false);
formula a0_n0_rs18_sat_dur4 = ( (A0_DUR <= N0_RS18_DUR4) ? true:false);
formula a0_n0_rs18_sat_rel0 = ( (A0_DUR <= N0_RS18_REL0) ? true:false);
formula a0_n0_rs18_sat_rel1 = ( (A0_DUR <= N0_RS18_REL1) ? true:false);
formula a0_n0_rs18_sat_rel2 = ( (A0_DUR <= N0_RS18_REL2) ? true:false);
formula a0_n0_rs18_sat_rel3 = ( (A0_DUR <= N0_RS18_REL3) ? true:false);
formula a0_n0_rs18_sat_rel4 = ( (A0_DUR <= N0_RS18_REL4) ? true:false);
formula a0_n0_rs18_sat_cost = ( (A0_COST <= N0_RS18_COST) ? true:false);
formula a0_n0_rs18_sat_avail = N0_RS18_AVAIL;
formula a0_n0_rs18_sat_all = a0_n0_rs18_sat_avail;

//=====Application 0, Node0 and RS19
formula a0_n0_rs19_sat_dur0 = ( (A0_DUR <= N0_RS19_DUR0) ? true:false);
formula a0_n0_rs19_sat_dur1 = ( (A0_DUR <= N0_RS19_DUR1) ? true:false);
formula a0_n0_rs19_sat_dur2 = ( (A0_DUR <= N0_RS19_DUR2) ? true:false);
formula a0_n0_rs19_sat_dur3 = ( (A0_DUR <= N0_RS19_DUR3) ? true:false);
formula a0_n0_rs19_sat_dur4 = ( (A0_DUR <= N0_RS19_DUR4) ? true:false);
formula a0_n0_rs19_sat_rel0 = ( (A0_DUR <= N0_RS19_REL0) ? true:false);
formula a0_n0_rs19_sat_rel1 = ( (A0_DUR <= N0_RS19_REL1) ? true:false);
formula a0_n0_rs19_sat_rel2 = ( (A0_DUR <= N0_RS19_REL2) ? true:false);
formula a0_n0_rs19_sat_rel3 = ( (A0_DUR <= N0_RS19_REL3) ? true:false);
formula a0_n0_rs19_sat_rel4 = ( (A0_DUR <= N0_RS19_REL4) ? true:false);
formula a0_n0_rs19_sat_cost = ( (A0_COST <= N0_RS19_COST) ? true:false);
formula a0_n0_rs19_sat_avail = N0_RS19_AVAIL;
formula a0_n0_rs19_sat_all = a0_n0_rs19_sat_avail;

//=====Application 0, Node0 and RS20
formula a0_n0_rs20_sat_dur0 = ( (A0_DUR <= N0_RS20_DUR0) ? true:false);
formula a0_n0_rs20_sat_dur1 = ( (A0_DUR <= N0_RS20_DUR1) ? true:false);
formula a0_n0_rs20_sat_dur2 = ( (A0_DUR <= N0_RS20_DUR2) ? true:false);
formula a0_n0_rs20_sat_dur3 = ( (A0_DUR <= N0_RS20_DUR3) ? true:false);
formula a0_n0_rs20_sat_dur4 = ( (A0_DUR <= N0_RS20_DUR4) ? true:false);
formula a0_n0_rs20_sat_rel0 = ( (A0_DUR <= N0_RS20_REL0) ? true:false);
formula a0_n0_rs20_sat_rel1 = ( (A0_DUR <= N0_RS20_REL1) ? true:false);
formula a0_n0_rs20_sat_rel2 = ( (A0_DUR <= N0_RS20_REL2) ? true:false);
formula a0_n0_rs20_sat_rel3 = ( (A0_DUR <= N0_RS20_REL3) ? true:false);
formula a0_n0_rs20_sat_rel4 = ( (A0_DUR <= N0_RS20_REL4) ? true:false);
formula a0_n0_rs20_sat_cost = ( (A0_COST <= N0_RS20_COST) ? true:false);
formula a0_n0_rs20_sat_avail = N0_RS20_AVAIL;
formula a0_n0_rs20_sat_all = a0_n0_rs20_sat_avail;

//=====Application 0, Node0 and RS21
formula a0_n0_rs21_sat_dur0 = ( (A0_DUR <= N0_RS21_DUR0) ? true:false);
formula a0_n0_rs21_sat_dur1 = ( (A0_DUR <= N0_RS21_DUR1) ? true:false);
formula a0_n0_rs21_sat_dur2 = ( (A0_DUR <= N0_RS21_DUR2) ? true:false);
formula a0_n0_rs21_sat_dur3 = ( (A0_DUR <= N0_RS21_DUR3) ? true:false);
formula a0_n0_rs21_sat_dur4 = ( (A0_DUR <= N0_RS21_DUR4) ? true:false);
formula a0_n0_rs21_sat_rel0 = ( (A0_DUR <= N0_RS21_REL0) ? true:false);
formula a0_n0_rs21_sat_rel1 = ( (A0_DUR <= N0_RS21_REL1) ? true:false);
formula a0_n0_rs21_sat_rel2 = ( (A0_DUR <= N0_RS21_REL2) ? true:false);
formula a0_n0_rs21_sat_rel3 = ( (A0_DUR <= N0_RS21_REL3) ? true:false);
formula a0_n0_rs21_sat_rel4 = ( (A0_DUR <= N0_RS21_REL4) ? true:false);
formula a0_n0_rs21_sat_cost = ( (A0_COST <= N0_RS21_COST) ? true:false);
formula a0_n0_rs21_sat_avail = N0_RS21_AVAIL;
formula a0_n0_rs21_sat_all = a0_n0_rs21_sat_avail;

//=====Application 0, Node0 and RS22
formula a0_n0_rs22_sat_dur0 = ( (A0_DUR <= N0_RS22_DUR0) ? true:false);
formula a0_n0_rs22_sat_dur1 = ( (A0_DUR <= N0_RS22_DUR1) ? true:false);
formula a0_n0_rs22_sat_dur2 = ( (A0_DUR <= N0_RS22_DUR2) ? true:false);
formula a0_n0_rs22_sat_dur3 = ( (A0_DUR <= N0_RS22_DUR3) ? true:false);
formula a0_n0_rs22_sat_dur4 = ( (A0_DUR <= N0_RS22_DUR4) ? true:false);
formula a0_n0_rs22_sat_rel0 = ( (A0_DUR <= N0_RS22_REL0) ? true:false);
formula a0_n0_rs22_sat_rel1 = ( (A0_DUR <= N0_RS22_REL1) ? true:false);
formula a0_n0_rs22_sat_rel2 = ( (A0_DUR <= N0_RS22_REL2) ? true:false);
formula a0_n0_rs22_sat_rel3 = ( (A0_DUR <= N0_RS22_REL3) ? true:false);
formula a0_n0_rs22_sat_rel4 = ( (A0_DUR <= N0_RS22_REL4) ? true:false);
formula a0_n0_rs22_sat_cost = ( (A0_COST <= N0_RS22_COST) ? true:false);
formula a0_n0_rs22_sat_avail = N0_RS22_AVAIL;
formula a0_n0_rs22_sat_all = a0_n0_rs22_sat_avail;

//=====Application 0, Node0 and RS23
formula a0_n0_rs23_sat_dur0 = ( (A0_DUR <= N0_RS23_DUR0) ? true:false);
formula a0_n0_rs23_sat_dur1 = ( (A0_DUR <= N0_RS23_DUR1) ? true:false);
formula a0_n0_rs23_sat_dur2 = ( (A0_DUR <= N0_RS23_DUR2) ? true:false);
formula a0_n0_rs23_sat_dur3 = ( (A0_DUR <= N0_RS23_DUR3) ? true:false);
formula a0_n0_rs23_sat_dur4 = ( (A0_DUR <= N0_RS23_DUR4) ? true:false);
formula a0_n0_rs23_sat_rel0 = ( (A0_DUR <= N0_RS23_REL0) ? true:false);
formula a0_n0_rs23_sat_rel1 = ( (A0_DUR <= N0_RS23_REL1) ? true:false);
formula a0_n0_rs23_sat_rel2 = ( (A0_DUR <= N0_RS23_REL2) ? true:false);
formula a0_n0_rs23_sat_rel3 = ( (A0_DUR <= N0_RS23_REL3) ? true:false);
formula a0_n0_rs23_sat_rel4 = ( (A0_DUR <= N0_RS23_REL4) ? true:false);
formula a0_n0_rs23_sat_cost = ( (A0_COST <= N0_RS23_COST) ? true:false);
formula a0_n0_rs23_sat_avail = N0_RS23_AVAIL;
formula a0_n0_rs23_sat_all = a0_n0_rs23_sat_avail;

//=====Application 0, Node0 and RS24
formula a0_n0_rs24_sat_dur0 = ( (A0_DUR <= N0_RS24_DUR0) ? true:false);
formula a0_n0_rs24_sat_dur1 = ( (A0_DUR <= N0_RS24_DUR1) ? true:false);
formula a0_n0_rs24_sat_dur2 = ( (A0_DUR <= N0_RS24_DUR2) ? true:false);
formula a0_n0_rs24_sat_dur3 = ( (A0_DUR <= N0_RS24_DUR3) ? true:false);
formula a0_n0_rs24_sat_dur4 = ( (A0_DUR <= N0_RS24_DUR4) ? true:false);
formula a0_n0_rs24_sat_rel0 = ( (A0_DUR <= N0_RS24_REL0) ? true:false);
formula a0_n0_rs24_sat_rel1 = ( (A0_DUR <= N0_RS24_REL1) ? true:false);
formula a0_n0_rs24_sat_rel2 = ( (A0_DUR <= N0_RS24_REL2) ? true:false);
formula a0_n0_rs24_sat_rel3 = ( (A0_DUR <= N0_RS24_REL3) ? true:false);
formula a0_n0_rs24_sat_rel4 = ( (A0_DUR <= N0_RS24_REL4) ? true:false);
formula a0_n0_rs24_sat_cost = ( (A0_COST <= N0_RS24_COST) ? true:false);
formula a0_n0_rs24_sat_avail = N0_RS24_AVAIL;
formula a0_n0_rs24_sat_all = a0_n0_rs24_sat_avail;

//=====Application 0, Node0 and RS25
formula a0_n0_rs25_sat_dur0 = ( (A0_DUR <= N0_RS25_DUR0) ? true:false);
formula a0_n0_rs25_sat_dur1 = ( (A0_DUR <= N0_RS25_DUR1) ? true:false);
formula a0_n0_rs25_sat_dur2 = ( (A0_DUR <= N0_RS25_DUR2) ? true:false);
formula a0_n0_rs25_sat_dur3 = ( (A0_DUR <= N0_RS25_DUR3) ? true:false);
formula a0_n0_rs25_sat_dur4 = ( (A0_DUR <= N0_RS25_DUR4) ? true:false);
formula a0_n0_rs25_sat_rel0 = ( (A0_DUR <= N0_RS25_REL0) ? true:false);
formula a0_n0_rs25_sat_rel1 = ( (A0_DUR <= N0_RS25_REL1) ? true:false);
formula a0_n0_rs25_sat_rel2 = ( (A0_DUR <= N0_RS25_REL2) ? true:false);
formula a0_n0_rs25_sat_rel3 = ( (A0_DUR <= N0_RS25_REL3) ? true:false);
formula a0_n0_rs25_sat_rel4 = ( (A0_DUR <= N0_RS25_REL4) ? true:false);
formula a0_n0_rs25_sat_cost = ( (A0_COST <= N0_RS25_COST) ? true:false);
formula a0_n0_rs25_sat_avail = N0_RS25_AVAIL;
formula a0_n0_rs25_sat_all = a0_n0_rs25_sat_avail;

//=====Application 0, Node0 and RS26
formula a0_n0_rs26_sat_dur0 = ( (A0_DUR <= N0_RS26_DUR0) ? true:false);
formula a0_n0_rs26_sat_dur1 = ( (A0_DUR <= N0_RS26_DUR1) ? true:false);
formula a0_n0_rs26_sat_dur2 = ( (A0_DUR <= N0_RS26_DUR2) ? true:false);
formula a0_n0_rs26_sat_dur3 = ( (A0_DUR <= N0_RS26_DUR3) ? true:false);
formula a0_n0_rs26_sat_dur4 = ( (A0_DUR <= N0_RS26_DUR4) ? true:false);
formula a0_n0_rs26_sat_rel0 = ( (A0_DUR <= N0_RS26_REL0) ? true:false);
formula a0_n0_rs26_sat_rel1 = ( (A0_DUR <= N0_RS26_REL1) ? true:false);
formula a0_n0_rs26_sat_rel2 = ( (A0_DUR <= N0_RS26_REL2) ? true:false);
formula a0_n0_rs26_sat_rel3 = ( (A0_DUR <= N0_RS26_REL3) ? true:false);
formula a0_n0_rs26_sat_rel4 = ( (A0_DUR <= N0_RS26_REL4) ? true:false);
formula a0_n0_rs26_sat_cost = ( (A0_COST <= N0_RS26_COST) ? true:false);
formula a0_n0_rs26_sat_avail = N0_RS26_AVAIL;
formula a0_n0_rs26_sat_all = a0_n0_rs26_sat_avail;

//=====Application 0, Node0 and RS27
formula a0_n0_rs27_sat_dur0 = ( (A0_DUR <= N0_RS27_DUR0) ? true:false);
formula a0_n0_rs27_sat_dur1 = ( (A0_DUR <= N0_RS27_DUR1) ? true:false);
formula a0_n0_rs27_sat_dur2 = ( (A0_DUR <= N0_RS27_DUR2) ? true:false);
formula a0_n0_rs27_sat_dur3 = ( (A0_DUR <= N0_RS27_DUR3) ? true:false);
formula a0_n0_rs27_sat_dur4 = ( (A0_DUR <= N0_RS27_DUR4) ? true:false);
formula a0_n0_rs27_sat_rel0 = ( (A0_DUR <= N0_RS27_REL0) ? true:false);
formula a0_n0_rs27_sat_rel1 = ( (A0_DUR <= N0_RS27_REL1) ? true:false);
formula a0_n0_rs27_sat_rel2 = ( (A0_DUR <= N0_RS27_REL2) ? true:false);
formula a0_n0_rs27_sat_rel3 = ( (A0_DUR <= N0_RS27_REL3) ? true:false);
formula a0_n0_rs27_sat_rel4 = ( (A0_DUR <= N0_RS27_REL4) ? true:false);
formula a0_n0_rs27_sat_cost = ( (A0_COST <= N0_RS27_COST) ? true:false);
formula a0_n0_rs27_sat_avail = N0_RS27_AVAIL;
formula a0_n0_rs27_sat_all = a0_n0_rs27_sat_avail;

//=====Application 0, Node0 and RS28
formula a0_n0_rs28_sat_dur0 = ( (A0_DUR <= N0_RS28_DUR0) ? true:false);
formula a0_n0_rs28_sat_dur1 = ( (A0_DUR <= N0_RS28_DUR1) ? true:false);
formula a0_n0_rs28_sat_dur2 = ( (A0_DUR <= N0_RS28_DUR2) ? true:false);
formula a0_n0_rs28_sat_dur3 = ( (A0_DUR <= N0_RS28_DUR3) ? true:false);
formula a0_n0_rs28_sat_dur4 = ( (A0_DUR <= N0_RS28_DUR4) ? true:false);
formula a0_n0_rs28_sat_rel0 = ( (A0_DUR <= N0_RS28_REL0) ? true:false);
formula a0_n0_rs28_sat_rel1 = ( (A0_DUR <= N0_RS28_REL1) ? true:false);
formula a0_n0_rs28_sat_rel2 = ( (A0_DUR <= N0_RS28_REL2) ? true:false);
formula a0_n0_rs28_sat_rel3 = ( (A0_DUR <= N0_RS28_REL3) ? true:false);
formula a0_n0_rs28_sat_rel4 = ( (A0_DUR <= N0_RS28_REL4) ? true:false);
formula a0_n0_rs28_sat_cost = ( (A0_COST <= N0_RS28_COST) ? true:false);
formula a0_n0_rs28_sat_avail = N0_RS28_AVAIL;
formula a0_n0_rs28_sat_all = a0_n0_rs28_sat_avail;

//=====Application 0, Node0 and RS29
formula a0_n0_rs29_sat_dur0 = ( (A0_DUR <= N0_RS29_DUR0) ? true:false);
formula a0_n0_rs29_sat_dur1 = ( (A0_DUR <= N0_RS29_DUR1) ? true:false);
formula a0_n0_rs29_sat_dur2 = ( (A0_DUR <= N0_RS29_DUR2) ? true:false);
formula a0_n0_rs29_sat_dur3 = ( (A0_DUR <= N0_RS29_DUR3) ? true:false);
formula a0_n0_rs29_sat_dur4 = ( (A0_DUR <= N0_RS29_DUR4) ? true:false);
formula a0_n0_rs29_sat_rel0 = ( (A0_DUR <= N0_RS29_REL0) ? true:false);
formula a0_n0_rs29_sat_rel1 = ( (A0_DUR <= N0_RS29_REL1) ? true:false);
formula a0_n0_rs29_sat_rel2 = ( (A0_DUR <= N0_RS29_REL2) ? true:false);
formula a0_n0_rs29_sat_rel3 = ( (A0_DUR <= N0_RS29_REL3) ? true:false);
formula a0_n0_rs29_sat_rel4 = ( (A0_DUR <= N0_RS29_REL4) ? true:false);
formula a0_n0_rs29_sat_cost = ( (A0_COST <= N0_RS29_COST) ? true:false);
formula a0_n0_rs29_sat_avail = N0_RS29_AVAIL;
formula a0_n0_rs29_sat_all = a0_n0_rs29_sat_avail;

//=====Application 0, Node0 and RS30
formula a0_n0_rs30_sat_dur0 = ( (A0_DUR <= N0_RS30_DUR0) ? true:false);
formula a0_n0_rs30_sat_dur1 = ( (A0_DUR <= N0_RS30_DUR1) ? true:false);
formula a0_n0_rs30_sat_dur2 = ( (A0_DUR <= N0_RS30_DUR2) ? true:false);
formula a0_n0_rs30_sat_dur3 = ( (A0_DUR <= N0_RS30_DUR3) ? true:false);
formula a0_n0_rs30_sat_dur4 = ( (A0_DUR <= N0_RS30_DUR4) ? true:false);
formula a0_n0_rs30_sat_rel0 = ( (A0_DUR <= N0_RS30_REL0) ? true:false);
formula a0_n0_rs30_sat_rel1 = ( (A0_DUR <= N0_RS30_REL1) ? true:false);
formula a0_n0_rs30_sat_rel2 = ( (A0_DUR <= N0_RS30_REL2) ? true:false);
formula a0_n0_rs30_sat_rel3 = ( (A0_DUR <= N0_RS30_REL3) ? true:false);
formula a0_n0_rs30_sat_rel4 = ( (A0_DUR <= N0_RS30_REL4) ? true:false);
formula a0_n0_rs30_sat_cost = ( (A0_COST <= N0_RS30_COST) ? true:false);
formula a0_n0_rs30_sat_avail = N0_RS30_AVAIL;
formula a0_n0_rs30_sat_all = a0_n0_rs30_sat_avail;

//=====Application 0, Node0 and RS31
formula a0_n0_rs31_sat_dur0 = ( (A0_DUR <= N0_RS31_DUR0) ? true:false);
formula a0_n0_rs31_sat_dur1 = ( (A0_DUR <= N0_RS31_DUR1) ? true:false);
formula a0_n0_rs31_sat_dur2 = ( (A0_DUR <= N0_RS31_DUR2) ? true:false);
formula a0_n0_rs31_sat_dur3 = ( (A0_DUR <= N0_RS31_DUR3) ? true:false);
formula a0_n0_rs31_sat_dur4 = ( (A0_DUR <= N0_RS31_DUR4) ? true:false);
formula a0_n0_rs31_sat_rel0 = ( (A0_DUR <= N0_RS31_REL0) ? true:false);
formula a0_n0_rs31_sat_rel1 = ( (A0_DUR <= N0_RS31_REL1) ? true:false);
formula a0_n0_rs31_sat_rel2 = ( (A0_DUR <= N0_RS31_REL2) ? true:false);
formula a0_n0_rs31_sat_rel3 = ( (A0_DUR <= N0_RS31_REL3) ? true:false);
formula a0_n0_rs31_sat_rel4 = ( (A0_DUR <= N0_RS31_REL4) ? true:false);
formula a0_n0_rs31_sat_cost = ( (A0_COST <= N0_RS31_COST) ? true:false);
formula a0_n0_rs31_sat_avail = N0_RS31_AVAIL;
formula a0_n0_rs31_sat_all = a0_n0_rs31_sat_avail;

//=====Application 0, Node0 and RS32
formula a0_n0_rs32_sat_dur0 = ( (A0_DUR <= N0_RS32_DUR0) ? true:false);
formula a0_n0_rs32_sat_dur1 = ( (A0_DUR <= N0_RS32_DUR1) ? true:false);
formula a0_n0_rs32_sat_dur2 = ( (A0_DUR <= N0_RS32_DUR2) ? true:false);
formula a0_n0_rs32_sat_dur3 = ( (A0_DUR <= N0_RS32_DUR3) ? true:false);
formula a0_n0_rs32_sat_dur4 = ( (A0_DUR <= N0_RS32_DUR4) ? true:false);
formula a0_n0_rs32_sat_rel0 = ( (A0_DUR <= N0_RS32_REL0) ? true:false);
formula a0_n0_rs32_sat_rel1 = ( (A0_DUR <= N0_RS32_REL1) ? true:false);
formula a0_n0_rs32_sat_rel2 = ( (A0_DUR <= N0_RS32_REL2) ? true:false);
formula a0_n0_rs32_sat_rel3 = ( (A0_DUR <= N0_RS32_REL3) ? true:false);
formula a0_n0_rs32_sat_rel4 = ( (A0_DUR <= N0_RS32_REL4) ? true:false);
formula a0_n0_rs32_sat_cost = ( (A0_COST <= N0_RS32_COST) ? true:false);
formula a0_n0_rs32_sat_avail = N0_RS32_AVAIL;
formula a0_n0_rs32_sat_all = a0_n0_rs32_sat_avail;

//=====Application 0, Node0 and RS33
formula a0_n0_rs33_sat_dur0 = ( (A0_DUR <= N0_RS33_DUR0) ? true:false);
formula a0_n0_rs33_sat_dur1 = ( (A0_DUR <= N0_RS33_DUR1) ? true:false);
formula a0_n0_rs33_sat_dur2 = ( (A0_DUR <= N0_RS33_DUR2) ? true:false);
formula a0_n0_rs33_sat_dur3 = ( (A0_DUR <= N0_RS33_DUR3) ? true:false);
formula a0_n0_rs33_sat_dur4 = ( (A0_DUR <= N0_RS33_DUR4) ? true:false);
formula a0_n0_rs33_sat_rel0 = ( (A0_DUR <= N0_RS33_REL0) ? true:false);
formula a0_n0_rs33_sat_rel1 = ( (A0_DUR <= N0_RS33_REL1) ? true:false);
formula a0_n0_rs33_sat_rel2 = ( (A0_DUR <= N0_RS33_REL2) ? true:false);
formula a0_n0_rs33_sat_rel3 = ( (A0_DUR <= N0_RS33_REL3) ? true:false);
formula a0_n0_rs33_sat_rel4 = ( (A0_DUR <= N0_RS33_REL4) ? true:false);
formula a0_n0_rs33_sat_cost = ( (A0_COST <= N0_RS33_COST) ? true:false);
formula a0_n0_rs33_sat_avail = N0_RS33_AVAIL;
formula a0_n0_rs33_sat_all = a0_n0_rs33_sat_avail;

//=====Application 0, Node0 and RS34
formula a0_n0_rs34_sat_dur0 = ( (A0_DUR <= N0_RS34_DUR0) ? true:false);
formula a0_n0_rs34_sat_dur1 = ( (A0_DUR <= N0_RS34_DUR1) ? true:false);
formula a0_n0_rs34_sat_dur2 = ( (A0_DUR <= N0_RS34_DUR2) ? true:false);
formula a0_n0_rs34_sat_dur3 = ( (A0_DUR <= N0_RS34_DUR3) ? true:false);
formula a0_n0_rs34_sat_dur4 = ( (A0_DUR <= N0_RS34_DUR4) ? true:false);
formula a0_n0_rs34_sat_rel0 = ( (A0_DUR <= N0_RS34_REL0) ? true:false);
formula a0_n0_rs34_sat_rel1 = ( (A0_DUR <= N0_RS34_REL1) ? true:false);
formula a0_n0_rs34_sat_rel2 = ( (A0_DUR <= N0_RS34_REL2) ? true:false);
formula a0_n0_rs34_sat_rel3 = ( (A0_DUR <= N0_RS34_REL3) ? true:false);
formula a0_n0_rs34_sat_rel4 = ( (A0_DUR <= N0_RS34_REL4) ? true:false);
formula a0_n0_rs34_sat_cost = ( (A0_COST <= N0_RS34_COST) ? true:false);
formula a0_n0_rs34_sat_avail = N0_RS34_AVAIL;
formula a0_n0_rs34_sat_all = a0_n0_rs34_sat_avail;

//=====Application 0, Node0 and RS35
formula a0_n0_rs35_sat_dur0 = ( (A0_DUR <= N0_RS35_DUR0) ? true:false);
formula a0_n0_rs35_sat_dur1 = ( (A0_DUR <= N0_RS35_DUR1) ? true:false);
formula a0_n0_rs35_sat_dur2 = ( (A0_DUR <= N0_RS35_DUR2) ? true:false);
formula a0_n0_rs35_sat_dur3 = ( (A0_DUR <= N0_RS35_DUR3) ? true:false);
formula a0_n0_rs35_sat_dur4 = ( (A0_DUR <= N0_RS35_DUR4) ? true:false);
formula a0_n0_rs35_sat_rel0 = ( (A0_DUR <= N0_RS35_REL0) ? true:false);
formula a0_n0_rs35_sat_rel1 = ( (A0_DUR <= N0_RS35_REL1) ? true:false);
formula a0_n0_rs35_sat_rel2 = ( (A0_DUR <= N0_RS35_REL2) ? true:false);
formula a0_n0_rs35_sat_rel3 = ( (A0_DUR <= N0_RS35_REL3) ? true:false);
formula a0_n0_rs35_sat_rel4 = ( (A0_DUR <= N0_RS35_REL4) ? true:false);
formula a0_n0_rs35_sat_cost = ( (A0_COST <= N0_RS35_COST) ? true:false);
formula a0_n0_rs35_sat_avail = N0_RS35_AVAIL;
formula a0_n0_rs35_sat_all = a0_n0_rs35_sat_avail;

//=====Application 0, Node0 and RS36
formula a0_n0_rs36_sat_dur0 = ( (A0_DUR <= N0_RS36_DUR0) ? true:false);
formula a0_n0_rs36_sat_dur1 = ( (A0_DUR <= N0_RS36_DUR1) ? true:false);
formula a0_n0_rs36_sat_dur2 = ( (A0_DUR <= N0_RS36_DUR2) ? true:false);
formula a0_n0_rs36_sat_dur3 = ( (A0_DUR <= N0_RS36_DUR3) ? true:false);
formula a0_n0_rs36_sat_dur4 = ( (A0_DUR <= N0_RS36_DUR4) ? true:false);
formula a0_n0_rs36_sat_rel0 = ( (A0_DUR <= N0_RS36_REL0) ? true:false);
formula a0_n0_rs36_sat_rel1 = ( (A0_DUR <= N0_RS36_REL1) ? true:false);
formula a0_n0_rs36_sat_rel2 = ( (A0_DUR <= N0_RS36_REL2) ? true:false);
formula a0_n0_rs36_sat_rel3 = ( (A0_DUR <= N0_RS36_REL3) ? true:false);
formula a0_n0_rs36_sat_rel4 = ( (A0_DUR <= N0_RS36_REL4) ? true:false);
formula a0_n0_rs36_sat_cost = ( (A0_COST <= N0_RS36_COST) ? true:false);
formula a0_n0_rs36_sat_avail = N0_RS36_AVAIL;
formula a0_n0_rs36_sat_all = a0_n0_rs36_sat_avail;

//=====Application 0, Node0 and RS37
formula a0_n0_rs37_sat_dur0 = ( (A0_DUR <= N0_RS37_DUR0) ? true:false);
formula a0_n0_rs37_sat_dur1 = ( (A0_DUR <= N0_RS37_DUR1) ? true:false);
formula a0_n0_rs37_sat_dur2 = ( (A0_DUR <= N0_RS37_DUR2) ? true:false);
formula a0_n0_rs37_sat_dur3 = ( (A0_DUR <= N0_RS37_DUR3) ? true:false);
formula a0_n0_rs37_sat_dur4 = ( (A0_DUR <= N0_RS37_DUR4) ? true:false);
formula a0_n0_rs37_sat_rel0 = ( (A0_DUR <= N0_RS37_REL0) ? true:false);
formula a0_n0_rs37_sat_rel1 = ( (A0_DUR <= N0_RS37_REL1) ? true:false);
formula a0_n0_rs37_sat_rel2 = ( (A0_DUR <= N0_RS37_REL2) ? true:false);
formula a0_n0_rs37_sat_rel3 = ( (A0_DUR <= N0_RS37_REL3) ? true:false);
formula a0_n0_rs37_sat_rel4 = ( (A0_DUR <= N0_RS37_REL4) ? true:false);
formula a0_n0_rs37_sat_cost = ( (A0_COST <= N0_RS37_COST) ? true:false);
formula a0_n0_rs37_sat_avail = N0_RS37_AVAIL;
formula a0_n0_rs37_sat_all = a0_n0_rs37_sat_avail;

//=====Application 0, Node0 and RS38
formula a0_n0_rs38_sat_dur0 = ( (A0_DUR <= N0_RS38_DUR0) ? true:false);
formula a0_n0_rs38_sat_dur1 = ( (A0_DUR <= N0_RS38_DUR1) ? true:false);
formula a0_n0_rs38_sat_dur2 = ( (A0_DUR <= N0_RS38_DUR2) ? true:false);
formula a0_n0_rs38_sat_dur3 = ( (A0_DUR <= N0_RS38_DUR3) ? true:false);
formula a0_n0_rs38_sat_dur4 = ( (A0_DUR <= N0_RS38_DUR4) ? true:false);
formula a0_n0_rs38_sat_rel0 = ( (A0_DUR <= N0_RS38_REL0) ? true:false);
formula a0_n0_rs38_sat_rel1 = ( (A0_DUR <= N0_RS38_REL1) ? true:false);
formula a0_n0_rs38_sat_rel2 = ( (A0_DUR <= N0_RS38_REL2) ? true:false);
formula a0_n0_rs38_sat_rel3 = ( (A0_DUR <= N0_RS38_REL3) ? true:false);
formula a0_n0_rs38_sat_rel4 = ( (A0_DUR <= N0_RS38_REL4) ? true:false);
formula a0_n0_rs38_sat_cost = ( (A0_COST <= N0_RS38_COST) ? true:false);
formula a0_n0_rs38_sat_avail = N0_RS38_AVAIL;
formula a0_n0_rs38_sat_all = a0_n0_rs38_sat_avail;

//=====Application 0, Node0 and RS39
formula a0_n0_rs39_sat_dur0 = ( (A0_DUR <= N0_RS39_DUR0) ? true:false);
formula a0_n0_rs39_sat_dur1 = ( (A0_DUR <= N0_RS39_DUR1) ? true:false);
formula a0_n0_rs39_sat_dur2 = ( (A0_DUR <= N0_RS39_DUR2) ? true:false);
formula a0_n0_rs39_sat_dur3 = ( (A0_DUR <= N0_RS39_DUR3) ? true:false);
formula a0_n0_rs39_sat_dur4 = ( (A0_DUR <= N0_RS39_DUR4) ? true:false);
formula a0_n0_rs39_sat_rel0 = ( (A0_DUR <= N0_RS39_REL0) ? true:false);
formula a0_n0_rs39_sat_rel1 = ( (A0_DUR <= N0_RS39_REL1) ? true:false);
formula a0_n0_rs39_sat_rel2 = ( (A0_DUR <= N0_RS39_REL2) ? true:false);
formula a0_n0_rs39_sat_rel3 = ( (A0_DUR <= N0_RS39_REL3) ? true:false);
formula a0_n0_rs39_sat_rel4 = ( (A0_DUR <= N0_RS39_REL4) ? true:false);
formula a0_n0_rs39_sat_cost = ( (A0_COST <= N0_RS39_COST) ? true:false);
formula a0_n0_rs39_sat_avail = N0_RS39_AVAIL;
formula a0_n0_rs39_sat_all = a0_n0_rs39_sat_avail;

//=====Application 0, Node0 and RS40
formula a0_n0_rs40_sat_dur0 = ( (A0_DUR <= N0_RS40_DUR0) ? true:false);
formula a0_n0_rs40_sat_dur1 = ( (A0_DUR <= N0_RS40_DUR1) ? true:false);
formula a0_n0_rs40_sat_dur2 = ( (A0_DUR <= N0_RS40_DUR2) ? true:false);
formula a0_n0_rs40_sat_dur3 = ( (A0_DUR <= N0_RS40_DUR3) ? true:false);
formula a0_n0_rs40_sat_dur4 = ( (A0_DUR <= N0_RS40_DUR4) ? true:false);
formula a0_n0_rs40_sat_rel0 = ( (A0_DUR <= N0_RS40_REL0) ? true:false);
formula a0_n0_rs40_sat_rel1 = ( (A0_DUR <= N0_RS40_REL1) ? true:false);
formula a0_n0_rs40_sat_rel2 = ( (A0_DUR <= N0_RS40_REL2) ? true:false);
formula a0_n0_rs40_sat_rel3 = ( (A0_DUR <= N0_RS40_REL3) ? true:false);
formula a0_n0_rs40_sat_rel4 = ( (A0_DUR <= N0_RS40_REL4) ? true:false);
formula a0_n0_rs40_sat_cost = ( (A0_COST <= N0_RS40_COST) ? true:false);
formula a0_n0_rs40_sat_avail = N0_RS40_AVAIL;
formula a0_n0_rs40_sat_all = a0_n0_rs40_sat_avail;

//=====Application 0, Node0 and RS41
formula a0_n0_rs41_sat_dur0 = ( (A0_DUR <= N0_RS41_DUR0) ? true:false);
formula a0_n0_rs41_sat_dur1 = ( (A0_DUR <= N0_RS41_DUR1) ? true:false);
formula a0_n0_rs41_sat_dur2 = ( (A0_DUR <= N0_RS41_DUR2) ? true:false);
formula a0_n0_rs41_sat_dur3 = ( (A0_DUR <= N0_RS41_DUR3) ? true:false);
formula a0_n0_rs41_sat_dur4 = ( (A0_DUR <= N0_RS41_DUR4) ? true:false);
formula a0_n0_rs41_sat_rel0 = ( (A0_DUR <= N0_RS41_REL0) ? true:false);
formula a0_n0_rs41_sat_rel1 = ( (A0_DUR <= N0_RS41_REL1) ? true:false);
formula a0_n0_rs41_sat_rel2 = ( (A0_DUR <= N0_RS41_REL2) ? true:false);
formula a0_n0_rs41_sat_rel3 = ( (A0_DUR <= N0_RS41_REL3) ? true:false);
formula a0_n0_rs41_sat_rel4 = ( (A0_DUR <= N0_RS41_REL4) ? true:false);
formula a0_n0_rs41_sat_cost = ( (A0_COST <= N0_RS41_COST) ? true:false);
formula a0_n0_rs41_sat_avail = N0_RS41_AVAIL;
formula a0_n0_rs41_sat_all = a0_n0_rs41_sat_avail;

//=====Application 0, Node0 and RS42
formula a0_n0_rs42_sat_dur0 = ( (A0_DUR <= N0_RS42_DUR0) ? true:false);
formula a0_n0_rs42_sat_dur1 = ( (A0_DUR <= N0_RS42_DUR1) ? true:false);
formula a0_n0_rs42_sat_dur2 = ( (A0_DUR <= N0_RS42_DUR2) ? true:false);
formula a0_n0_rs42_sat_dur3 = ( (A0_DUR <= N0_RS42_DUR3) ? true:false);
formula a0_n0_rs42_sat_dur4 = ( (A0_DUR <= N0_RS42_DUR4) ? true:false);
formula a0_n0_rs42_sat_rel0 = ( (A0_DUR <= N0_RS42_REL0) ? true:false);
formula a0_n0_rs42_sat_rel1 = ( (A0_DUR <= N0_RS42_REL1) ? true:false);
formula a0_n0_rs42_sat_rel2 = ( (A0_DUR <= N0_RS42_REL2) ? true:false);
formula a0_n0_rs42_sat_rel3 = ( (A0_DUR <= N0_RS42_REL3) ? true:false);
formula a0_n0_rs42_sat_rel4 = ( (A0_DUR <= N0_RS42_REL4) ? true:false);
formula a0_n0_rs42_sat_cost = ( (A0_COST <= N0_RS42_COST) ? true:false);
formula a0_n0_rs42_sat_avail = N0_RS42_AVAIL;
formula a0_n0_rs42_sat_all = a0_n0_rs42_sat_avail;

//=====Application 0, Node0 and RS43
formula a0_n0_rs43_sat_dur0 = ( (A0_DUR <= N0_RS43_DUR0) ? true:false);
formula a0_n0_rs43_sat_dur1 = ( (A0_DUR <= N0_RS43_DUR1) ? true:false);
formula a0_n0_rs43_sat_dur2 = ( (A0_DUR <= N0_RS43_DUR2) ? true:false);
formula a0_n0_rs43_sat_dur3 = ( (A0_DUR <= N0_RS43_DUR3) ? true:false);
formula a0_n0_rs43_sat_dur4 = ( (A0_DUR <= N0_RS43_DUR4) ? true:false);
formula a0_n0_rs43_sat_rel0 = ( (A0_DUR <= N0_RS43_REL0) ? true:false);
formula a0_n0_rs43_sat_rel1 = ( (A0_DUR <= N0_RS43_REL1) ? true:false);
formula a0_n0_rs43_sat_rel2 = ( (A0_DUR <= N0_RS43_REL2) ? true:false);
formula a0_n0_rs43_sat_rel3 = ( (A0_DUR <= N0_RS43_REL3) ? true:false);
formula a0_n0_rs43_sat_rel4 = ( (A0_DUR <= N0_RS43_REL4) ? true:false);
formula a0_n0_rs43_sat_cost = ( (A0_COST <= N0_RS43_COST) ? true:false);
formula a0_n0_rs43_sat_avail = N0_RS43_AVAIL;
formula a0_n0_rs43_sat_all = a0_n0_rs43_sat_avail;

//=====Application 0, Node0 and RS44
formula a0_n0_rs44_sat_dur0 = ( (A0_DUR <= N0_RS44_DUR0) ? true:false);
formula a0_n0_rs44_sat_dur1 = ( (A0_DUR <= N0_RS44_DUR1) ? true:false);
formula a0_n0_rs44_sat_dur2 = ( (A0_DUR <= N0_RS44_DUR2) ? true:false);
formula a0_n0_rs44_sat_dur3 = ( (A0_DUR <= N0_RS44_DUR3) ? true:false);
formula a0_n0_rs44_sat_dur4 = ( (A0_DUR <= N0_RS44_DUR4) ? true:false);
formula a0_n0_rs44_sat_rel0 = ( (A0_DUR <= N0_RS44_REL0) ? true:false);
formula a0_n0_rs44_sat_rel1 = ( (A0_DUR <= N0_RS44_REL1) ? true:false);
formula a0_n0_rs44_sat_rel2 = ( (A0_DUR <= N0_RS44_REL2) ? true:false);
formula a0_n0_rs44_sat_rel3 = ( (A0_DUR <= N0_RS44_REL3) ? true:false);
formula a0_n0_rs44_sat_rel4 = ( (A0_DUR <= N0_RS44_REL4) ? true:false);
formula a0_n0_rs44_sat_cost = ( (A0_COST <= N0_RS44_COST) ? true:false);
formula a0_n0_rs44_sat_avail = N0_RS44_AVAIL;
formula a0_n0_rs44_sat_all = a0_n0_rs44_sat_avail;

//=====Application 0, Node0 and RS45
formula a0_n0_rs45_sat_dur0 = ( (A0_DUR <= N0_RS45_DUR0) ? true:false);
formula a0_n0_rs45_sat_dur1 = ( (A0_DUR <= N0_RS45_DUR1) ? true:false);
formula a0_n0_rs45_sat_dur2 = ( (A0_DUR <= N0_RS45_DUR2) ? true:false);
formula a0_n0_rs45_sat_dur3 = ( (A0_DUR <= N0_RS45_DUR3) ? true:false);
formula a0_n0_rs45_sat_dur4 = ( (A0_DUR <= N0_RS45_DUR4) ? true:false);
formula a0_n0_rs45_sat_rel0 = ( (A0_DUR <= N0_RS45_REL0) ? true:false);
formula a0_n0_rs45_sat_rel1 = ( (A0_DUR <= N0_RS45_REL1) ? true:false);
formula a0_n0_rs45_sat_rel2 = ( (A0_DUR <= N0_RS45_REL2) ? true:false);
formula a0_n0_rs45_sat_rel3 = ( (A0_DUR <= N0_RS45_REL3) ? true:false);
formula a0_n0_rs45_sat_rel4 = ( (A0_DUR <= N0_RS45_REL4) ? true:false);
formula a0_n0_rs45_sat_cost = ( (A0_COST <= N0_RS45_COST) ? true:false);
formula a0_n0_rs45_sat_avail = N0_RS45_AVAIL;
formula a0_n0_rs45_sat_all = a0_n0_rs45_sat_avail;

//=====Application 0, Node0 and RS46
formula a0_n0_rs46_sat_dur0 = ( (A0_DUR <= N0_RS46_DUR0) ? true:false);
formula a0_n0_rs46_sat_dur1 = ( (A0_DUR <= N0_RS46_DUR1) ? true:false);
formula a0_n0_rs46_sat_dur2 = ( (A0_DUR <= N0_RS46_DUR2) ? true:false);
formula a0_n0_rs46_sat_dur3 = ( (A0_DUR <= N0_RS46_DUR3) ? true:false);
formula a0_n0_rs46_sat_dur4 = ( (A0_DUR <= N0_RS46_DUR4) ? true:false);
formula a0_n0_rs46_sat_rel0 = ( (A0_DUR <= N0_RS46_REL0) ? true:false);
formula a0_n0_rs46_sat_rel1 = ( (A0_DUR <= N0_RS46_REL1) ? true:false);
formula a0_n0_rs46_sat_rel2 = ( (A0_DUR <= N0_RS46_REL2) ? true:false);
formula a0_n0_rs46_sat_rel3 = ( (A0_DUR <= N0_RS46_REL3) ? true:false);
formula a0_n0_rs46_sat_rel4 = ( (A0_DUR <= N0_RS46_REL4) ? true:false);
formula a0_n0_rs46_sat_cost = ( (A0_COST <= N0_RS46_COST) ? true:false);
formula a0_n0_rs46_sat_avail = N0_RS46_AVAIL;
formula a0_n0_rs46_sat_all = a0_n0_rs46_sat_avail;

//=====Application 0, Node0 and RS47
formula a0_n0_rs47_sat_dur0 = ( (A0_DUR <= N0_RS47_DUR0) ? true:false);
formula a0_n0_rs47_sat_dur1 = ( (A0_DUR <= N0_RS47_DUR1) ? true:false);
formula a0_n0_rs47_sat_dur2 = ( (A0_DUR <= N0_RS47_DUR2) ? true:false);
formula a0_n0_rs47_sat_dur3 = ( (A0_DUR <= N0_RS47_DUR3) ? true:false);
formula a0_n0_rs47_sat_dur4 = ( (A0_DUR <= N0_RS47_DUR4) ? true:false);
formula a0_n0_rs47_sat_rel0 = ( (A0_DUR <= N0_RS47_REL0) ? true:false);
formula a0_n0_rs47_sat_rel1 = ( (A0_DUR <= N0_RS47_REL1) ? true:false);
formula a0_n0_rs47_sat_rel2 = ( (A0_DUR <= N0_RS47_REL2) ? true:false);
formula a0_n0_rs47_sat_rel3 = ( (A0_DUR <= N0_RS47_REL3) ? true:false);
formula a0_n0_rs47_sat_rel4 = ( (A0_DUR <= N0_RS47_REL4) ? true:false);
formula a0_n0_rs47_sat_cost = ( (A0_COST <= N0_RS47_COST) ? true:false);
formula a0_n0_rs47_sat_avail = N0_RS47_AVAIL;
formula a0_n0_rs47_sat_all = a0_n0_rs47_sat_avail;

//=====Application 0, Node0 and RS48
formula a0_n0_rs48_sat_dur0 = ( (A0_DUR <= N0_RS48_DUR0) ? true:false);
formula a0_n0_rs48_sat_dur1 = ( (A0_DUR <= N0_RS48_DUR1) ? true:false);
formula a0_n0_rs48_sat_dur2 = ( (A0_DUR <= N0_RS48_DUR2) ? true:false);
formula a0_n0_rs48_sat_dur3 = ( (A0_DUR <= N0_RS48_DUR3) ? true:false);
formula a0_n0_rs48_sat_dur4 = ( (A0_DUR <= N0_RS48_DUR4) ? true:false);
formula a0_n0_rs48_sat_rel0 = ( (A0_DUR <= N0_RS48_REL0) ? true:false);
formula a0_n0_rs48_sat_rel1 = ( (A0_DUR <= N0_RS48_REL1) ? true:false);
formula a0_n0_rs48_sat_rel2 = ( (A0_DUR <= N0_RS48_REL2) ? true:false);
formula a0_n0_rs48_sat_rel3 = ( (A0_DUR <= N0_RS48_REL3) ? true:false);
formula a0_n0_rs48_sat_rel4 = ( (A0_DUR <= N0_RS48_REL4) ? true:false);
formula a0_n0_rs48_sat_cost = ( (A0_COST <= N0_RS48_COST) ? true:false);
formula a0_n0_rs48_sat_avail = N0_RS48_AVAIL;
formula a0_n0_rs48_sat_all = a0_n0_rs48_sat_avail;

//=====Application 0, Node0 and RS49
formula a0_n0_rs49_sat_dur0 = ( (A0_DUR <= N0_RS49_DUR0) ? true:false);
formula a0_n0_rs49_sat_dur1 = ( (A0_DUR <= N0_RS49_DUR1) ? true:false);
formula a0_n0_rs49_sat_dur2 = ( (A0_DUR <= N0_RS49_DUR2) ? true:false);
formula a0_n0_rs49_sat_dur3 = ( (A0_DUR <= N0_RS49_DUR3) ? true:false);
formula a0_n0_rs49_sat_dur4 = ( (A0_DUR <= N0_RS49_DUR4) ? true:false);
formula a0_n0_rs49_sat_rel0 = ( (A0_DUR <= N0_RS49_REL0) ? true:false);
formula a0_n0_rs49_sat_rel1 = ( (A0_DUR <= N0_RS49_REL1) ? true:false);
formula a0_n0_rs49_sat_rel2 = ( (A0_DUR <= N0_RS49_REL2) ? true:false);
formula a0_n0_rs49_sat_rel3 = ( (A0_DUR <= N0_RS49_REL3) ? true:false);
formula a0_n0_rs49_sat_rel4 = ( (A0_DUR <= N0_RS49_REL4) ? true:false);
formula a0_n0_rs49_sat_cost = ( (A0_COST <= N0_RS49_COST) ? true:false);
formula a0_n0_rs49_sat_avail = N0_RS49_AVAIL;
formula a0_n0_rs49_sat_all = a0_n0_rs49_sat_avail;

//=====Application 0, Node1 and RS0
formula a0_n1_rs0_sat_dur0 = ( (A0_DUR <= N1_RS0_DUR0) ? true:false);
formula a0_n1_rs0_sat_dur1 = ( (A0_DUR <= N1_RS0_DUR1) ? true:false);
formula a0_n1_rs0_sat_dur2 = ( (A0_DUR <= N1_RS0_DUR2) ? true:false);
formula a0_n1_rs0_sat_dur3 = ( (A0_DUR <= N1_RS0_DUR3) ? true:false);
formula a0_n1_rs0_sat_dur4 = ( (A0_DUR <= N1_RS0_DUR4) ? true:false);
formula a0_n1_rs0_sat_rel0 = ( (A0_DUR <= N1_RS0_REL0) ? true:false);
formula a0_n1_rs0_sat_rel1 = ( (A0_DUR <= N1_RS0_REL1) ? true:false);
formula a0_n1_rs0_sat_rel2 = ( (A0_DUR <= N1_RS0_REL2) ? true:false);
formula a0_n1_rs0_sat_rel3 = ( (A0_DUR <= N1_RS0_REL3) ? true:false);
formula a0_n1_rs0_sat_rel4 = ( (A0_DUR <= N1_RS0_REL4) ? true:false);
formula a0_n1_rs0_sat_cost = ( (A0_COST <= N1_RS0_COST) ? true:false);
formula a0_n1_rs0_sat_avail = N1_RS0_AVAIL;
formula a0_n1_rs0_sat_all = a0_n1_rs0_sat_avail;

//=====Application 0, Node1 and RS1
formula a0_n1_rs1_sat_dur0 = ( (A0_DUR <= N1_RS1_DUR0) ? true:false);
formula a0_n1_rs1_sat_dur1 = ( (A0_DUR <= N1_RS1_DUR1) ? true:false);
formula a0_n1_rs1_sat_dur2 = ( (A0_DUR <= N1_RS1_DUR2) ? true:false);
formula a0_n1_rs1_sat_dur3 = ( (A0_DUR <= N1_RS1_DUR3) ? true:false);
formula a0_n1_rs1_sat_dur4 = ( (A0_DUR <= N1_RS1_DUR4) ? true:false);
formula a0_n1_rs1_sat_rel0 = ( (A0_DUR <= N1_RS1_REL0) ? true:false);
formula a0_n1_rs1_sat_rel1 = ( (A0_DUR <= N1_RS1_REL1) ? true:false);
formula a0_n1_rs1_sat_rel2 = ( (A0_DUR <= N1_RS1_REL2) ? true:false);
formula a0_n1_rs1_sat_rel3 = ( (A0_DUR <= N1_RS1_REL3) ? true:false);
formula a0_n1_rs1_sat_rel4 = ( (A0_DUR <= N1_RS1_REL4) ? true:false);
formula a0_n1_rs1_sat_cost = ( (A0_COST <= N1_RS1_COST) ? true:false);
formula a0_n1_rs1_sat_avail = N1_RS1_AVAIL;
formula a0_n1_rs1_sat_all = a0_n1_rs1_sat_avail;

//=====Application 0, Node1 and RS2
formula a0_n1_rs2_sat_dur0 = ( (A0_DUR <= N1_RS2_DUR0) ? true:false);
formula a0_n1_rs2_sat_dur1 = ( (A0_DUR <= N1_RS2_DUR1) ? true:false);
formula a0_n1_rs2_sat_dur2 = ( (A0_DUR <= N1_RS2_DUR2) ? true:false);
formula a0_n1_rs2_sat_dur3 = ( (A0_DUR <= N1_RS2_DUR3) ? true:false);
formula a0_n1_rs2_sat_dur4 = ( (A0_DUR <= N1_RS2_DUR4) ? true:false);
formula a0_n1_rs2_sat_rel0 = ( (A0_DUR <= N1_RS2_REL0) ? true:false);
formula a0_n1_rs2_sat_rel1 = ( (A0_DUR <= N1_RS2_REL1) ? true:false);
formula a0_n1_rs2_sat_rel2 = ( (A0_DUR <= N1_RS2_REL2) ? true:false);
formula a0_n1_rs2_sat_rel3 = ( (A0_DUR <= N1_RS2_REL3) ? true:false);
formula a0_n1_rs2_sat_rel4 = ( (A0_DUR <= N1_RS2_REL4) ? true:false);
formula a0_n1_rs2_sat_cost = ( (A0_COST <= N1_RS2_COST) ? true:false);
formula a0_n1_rs2_sat_avail = N1_RS2_AVAIL;
formula a0_n1_rs2_sat_all = a0_n1_rs2_sat_avail;

//=====Application 0, Node1 and RS3
formula a0_n1_rs3_sat_dur0 = ( (A0_DUR <= N1_RS3_DUR0) ? true:false);
formula a0_n1_rs3_sat_dur1 = ( (A0_DUR <= N1_RS3_DUR1) ? true:false);
formula a0_n1_rs3_sat_dur2 = ( (A0_DUR <= N1_RS3_DUR2) ? true:false);
formula a0_n1_rs3_sat_dur3 = ( (A0_DUR <= N1_RS3_DUR3) ? true:false);
formula a0_n1_rs3_sat_dur4 = ( (A0_DUR <= N1_RS3_DUR4) ? true:false);
formula a0_n1_rs3_sat_rel0 = ( (A0_DUR <= N1_RS3_REL0) ? true:false);
formula a0_n1_rs3_sat_rel1 = ( (A0_DUR <= N1_RS3_REL1) ? true:false);
formula a0_n1_rs3_sat_rel2 = ( (A0_DUR <= N1_RS3_REL2) ? true:false);
formula a0_n1_rs3_sat_rel3 = ( (A0_DUR <= N1_RS3_REL3) ? true:false);
formula a0_n1_rs3_sat_rel4 = ( (A0_DUR <= N1_RS3_REL4) ? true:false);
formula a0_n1_rs3_sat_cost = ( (A0_COST <= N1_RS3_COST) ? true:false);
formula a0_n1_rs3_sat_avail = N1_RS3_AVAIL;
formula a0_n1_rs3_sat_all = a0_n1_rs3_sat_avail;

//=====Application 0, Node1 and RS4
formula a0_n1_rs4_sat_dur0 = ( (A0_DUR <= N1_RS4_DUR0) ? true:false);
formula a0_n1_rs4_sat_dur1 = ( (A0_DUR <= N1_RS4_DUR1) ? true:false);
formula a0_n1_rs4_sat_dur2 = ( (A0_DUR <= N1_RS4_DUR2) ? true:false);
formula a0_n1_rs4_sat_dur3 = ( (A0_DUR <= N1_RS4_DUR3) ? true:false);
formula a0_n1_rs4_sat_dur4 = ( (A0_DUR <= N1_RS4_DUR4) ? true:false);
formula a0_n1_rs4_sat_rel0 = ( (A0_DUR <= N1_RS4_REL0) ? true:false);
formula a0_n1_rs4_sat_rel1 = ( (A0_DUR <= N1_RS4_REL1) ? true:false);
formula a0_n1_rs4_sat_rel2 = ( (A0_DUR <= N1_RS4_REL2) ? true:false);
formula a0_n1_rs4_sat_rel3 = ( (A0_DUR <= N1_RS4_REL3) ? true:false);
formula a0_n1_rs4_sat_rel4 = ( (A0_DUR <= N1_RS4_REL4) ? true:false);
formula a0_n1_rs4_sat_cost = ( (A0_COST <= N1_RS4_COST) ? true:false);
formula a0_n1_rs4_sat_avail = N1_RS4_AVAIL;
formula a0_n1_rs4_sat_all = a0_n1_rs4_sat_avail;

//=====Application 0, Node1 and RS5
formula a0_n1_rs5_sat_dur0 = ( (A0_DUR <= N1_RS5_DUR0) ? true:false);
formula a0_n1_rs5_sat_dur1 = ( (A0_DUR <= N1_RS5_DUR1) ? true:false);
formula a0_n1_rs5_sat_dur2 = ( (A0_DUR <= N1_RS5_DUR2) ? true:false);
formula a0_n1_rs5_sat_dur3 = ( (A0_DUR <= N1_RS5_DUR3) ? true:false);
formula a0_n1_rs5_sat_dur4 = ( (A0_DUR <= N1_RS5_DUR4) ? true:false);
formula a0_n1_rs5_sat_rel0 = ( (A0_DUR <= N1_RS5_REL0) ? true:false);
formula a0_n1_rs5_sat_rel1 = ( (A0_DUR <= N1_RS5_REL1) ? true:false);
formula a0_n1_rs5_sat_rel2 = ( (A0_DUR <= N1_RS5_REL2) ? true:false);
formula a0_n1_rs5_sat_rel3 = ( (A0_DUR <= N1_RS5_REL3) ? true:false);
formula a0_n1_rs5_sat_rel4 = ( (A0_DUR <= N1_RS5_REL4) ? true:false);
formula a0_n1_rs5_sat_cost = ( (A0_COST <= N1_RS5_COST) ? true:false);
formula a0_n1_rs5_sat_avail = N1_RS5_AVAIL;
formula a0_n1_rs5_sat_all = a0_n1_rs5_sat_avail;

//=====Application 0, Node1 and RS6
formula a0_n1_rs6_sat_dur0 = ( (A0_DUR <= N1_RS6_DUR0) ? true:false);
formula a0_n1_rs6_sat_dur1 = ( (A0_DUR <= N1_RS6_DUR1) ? true:false);
formula a0_n1_rs6_sat_dur2 = ( (A0_DUR <= N1_RS6_DUR2) ? true:false);
formula a0_n1_rs6_sat_dur3 = ( (A0_DUR <= N1_RS6_DUR3) ? true:false);
formula a0_n1_rs6_sat_dur4 = ( (A0_DUR <= N1_RS6_DUR4) ? true:false);
formula a0_n1_rs6_sat_rel0 = ( (A0_DUR <= N1_RS6_REL0) ? true:false);
formula a0_n1_rs6_sat_rel1 = ( (A0_DUR <= N1_RS6_REL1) ? true:false);
formula a0_n1_rs6_sat_rel2 = ( (A0_DUR <= N1_RS6_REL2) ? true:false);
formula a0_n1_rs6_sat_rel3 = ( (A0_DUR <= N1_RS6_REL3) ? true:false);
formula a0_n1_rs6_sat_rel4 = ( (A0_DUR <= N1_RS6_REL4) ? true:false);
formula a0_n1_rs6_sat_cost = ( (A0_COST <= N1_RS6_COST) ? true:false);
formula a0_n1_rs6_sat_avail = N1_RS6_AVAIL;
formula a0_n1_rs6_sat_all = a0_n1_rs6_sat_avail;

//=====Application 0, Node1 and RS7
formula a0_n1_rs7_sat_dur0 = ( (A0_DUR <= N1_RS7_DUR0) ? true:false);
formula a0_n1_rs7_sat_dur1 = ( (A0_DUR <= N1_RS7_DUR1) ? true:false);
formula a0_n1_rs7_sat_dur2 = ( (A0_DUR <= N1_RS7_DUR2) ? true:false);
formula a0_n1_rs7_sat_dur3 = ( (A0_DUR <= N1_RS7_DUR3) ? true:false);
formula a0_n1_rs7_sat_dur4 = ( (A0_DUR <= N1_RS7_DUR4) ? true:false);
formula a0_n1_rs7_sat_rel0 = ( (A0_DUR <= N1_RS7_REL0) ? true:false);
formula a0_n1_rs7_sat_rel1 = ( (A0_DUR <= N1_RS7_REL1) ? true:false);
formula a0_n1_rs7_sat_rel2 = ( (A0_DUR <= N1_RS7_REL2) ? true:false);
formula a0_n1_rs7_sat_rel3 = ( (A0_DUR <= N1_RS7_REL3) ? true:false);
formula a0_n1_rs7_sat_rel4 = ( (A0_DUR <= N1_RS7_REL4) ? true:false);
formula a0_n1_rs7_sat_cost = ( (A0_COST <= N1_RS7_COST) ? true:false);
formula a0_n1_rs7_sat_avail = N1_RS7_AVAIL;
formula a0_n1_rs7_sat_all = a0_n1_rs7_sat_avail;

//=====Application 0, Node1 and RS8
formula a0_n1_rs8_sat_dur0 = ( (A0_DUR <= N1_RS8_DUR0) ? true:false);
formula a0_n1_rs8_sat_dur1 = ( (A0_DUR <= N1_RS8_DUR1) ? true:false);
formula a0_n1_rs8_sat_dur2 = ( (A0_DUR <= N1_RS8_DUR2) ? true:false);
formula a0_n1_rs8_sat_dur3 = ( (A0_DUR <= N1_RS8_DUR3) ? true:false);
formula a0_n1_rs8_sat_dur4 = ( (A0_DUR <= N1_RS8_DUR4) ? true:false);
formula a0_n1_rs8_sat_rel0 = ( (A0_DUR <= N1_RS8_REL0) ? true:false);
formula a0_n1_rs8_sat_rel1 = ( (A0_DUR <= N1_RS8_REL1) ? true:false);
formula a0_n1_rs8_sat_rel2 = ( (A0_DUR <= N1_RS8_REL2) ? true:false);
formula a0_n1_rs8_sat_rel3 = ( (A0_DUR <= N1_RS8_REL3) ? true:false);
formula a0_n1_rs8_sat_rel4 = ( (A0_DUR <= N1_RS8_REL4) ? true:false);
formula a0_n1_rs8_sat_cost = ( (A0_COST <= N1_RS8_COST) ? true:false);
formula a0_n1_rs8_sat_avail = N1_RS8_AVAIL;
formula a0_n1_rs8_sat_all = a0_n1_rs8_sat_avail;

//=====Application 0, Node1 and RS9
formula a0_n1_rs9_sat_dur0 = ( (A0_DUR <= N1_RS9_DUR0) ? true:false);
formula a0_n1_rs9_sat_dur1 = ( (A0_DUR <= N1_RS9_DUR1) ? true:false);
formula a0_n1_rs9_sat_dur2 = ( (A0_DUR <= N1_RS9_DUR2) ? true:false);
formula a0_n1_rs9_sat_dur3 = ( (A0_DUR <= N1_RS9_DUR3) ? true:false);
formula a0_n1_rs9_sat_dur4 = ( (A0_DUR <= N1_RS9_DUR4) ? true:false);
formula a0_n1_rs9_sat_rel0 = ( (A0_DUR <= N1_RS9_REL0) ? true:false);
formula a0_n1_rs9_sat_rel1 = ( (A0_DUR <= N1_RS9_REL1) ? true:false);
formula a0_n1_rs9_sat_rel2 = ( (A0_DUR <= N1_RS9_REL2) ? true:false);
formula a0_n1_rs9_sat_rel3 = ( (A0_DUR <= N1_RS9_REL3) ? true:false);
formula a0_n1_rs9_sat_rel4 = ( (A0_DUR <= N1_RS9_REL4) ? true:false);
formula a0_n1_rs9_sat_cost = ( (A0_COST <= N1_RS9_COST) ? true:false);
formula a0_n1_rs9_sat_avail = N1_RS9_AVAIL;
formula a0_n1_rs9_sat_all = a0_n1_rs9_sat_avail;

//=====Application 0, Node1 and RS10
formula a0_n1_rs10_sat_dur0 = ( (A0_DUR <= N1_RS10_DUR0) ? true:false);
formula a0_n1_rs10_sat_dur1 = ( (A0_DUR <= N1_RS10_DUR1) ? true:false);
formula a0_n1_rs10_sat_dur2 = ( (A0_DUR <= N1_RS10_DUR2) ? true:false);
formula a0_n1_rs10_sat_dur3 = ( (A0_DUR <= N1_RS10_DUR3) ? true:false);
formula a0_n1_rs10_sat_dur4 = ( (A0_DUR <= N1_RS10_DUR4) ? true:false);
formula a0_n1_rs10_sat_rel0 = ( (A0_DUR <= N1_RS10_REL0) ? true:false);
formula a0_n1_rs10_sat_rel1 = ( (A0_DUR <= N1_RS10_REL1) ? true:false);
formula a0_n1_rs10_sat_rel2 = ( (A0_DUR <= N1_RS10_REL2) ? true:false);
formula a0_n1_rs10_sat_rel3 = ( (A0_DUR <= N1_RS10_REL3) ? true:false);
formula a0_n1_rs10_sat_rel4 = ( (A0_DUR <= N1_RS10_REL4) ? true:false);
formula a0_n1_rs10_sat_cost = ( (A0_COST <= N1_RS10_COST) ? true:false);
formula a0_n1_rs10_sat_avail = N1_RS10_AVAIL;
formula a0_n1_rs10_sat_all = a0_n1_rs10_sat_avail;

//=====Application 0, Node1 and RS11
formula a0_n1_rs11_sat_dur0 = ( (A0_DUR <= N1_RS11_DUR0) ? true:false);
formula a0_n1_rs11_sat_dur1 = ( (A0_DUR <= N1_RS11_DUR1) ? true:false);
formula a0_n1_rs11_sat_dur2 = ( (A0_DUR <= N1_RS11_DUR2) ? true:false);
formula a0_n1_rs11_sat_dur3 = ( (A0_DUR <= N1_RS11_DUR3) ? true:false);
formula a0_n1_rs11_sat_dur4 = ( (A0_DUR <= N1_RS11_DUR4) ? true:false);
formula a0_n1_rs11_sat_rel0 = ( (A0_DUR <= N1_RS11_REL0) ? true:false);
formula a0_n1_rs11_sat_rel1 = ( (A0_DUR <= N1_RS11_REL1) ? true:false);
formula a0_n1_rs11_sat_rel2 = ( (A0_DUR <= N1_RS11_REL2) ? true:false);
formula a0_n1_rs11_sat_rel3 = ( (A0_DUR <= N1_RS11_REL3) ? true:false);
formula a0_n1_rs11_sat_rel4 = ( (A0_DUR <= N1_RS11_REL4) ? true:false);
formula a0_n1_rs11_sat_cost = ( (A0_COST <= N1_RS11_COST) ? true:false);
formula a0_n1_rs11_sat_avail = N1_RS11_AVAIL;
formula a0_n1_rs11_sat_all = a0_n1_rs11_sat_avail;

//=====Application 0, Node1 and RS12
formula a0_n1_rs12_sat_dur0 = ( (A0_DUR <= N1_RS12_DUR0) ? true:false);
formula a0_n1_rs12_sat_dur1 = ( (A0_DUR <= N1_RS12_DUR1) ? true:false);
formula a0_n1_rs12_sat_dur2 = ( (A0_DUR <= N1_RS12_DUR2) ? true:false);
formula a0_n1_rs12_sat_dur3 = ( (A0_DUR <= N1_RS12_DUR3) ? true:false);
formula a0_n1_rs12_sat_dur4 = ( (A0_DUR <= N1_RS12_DUR4) ? true:false);
formula a0_n1_rs12_sat_rel0 = ( (A0_DUR <= N1_RS12_REL0) ? true:false);
formula a0_n1_rs12_sat_rel1 = ( (A0_DUR <= N1_RS12_REL1) ? true:false);
formula a0_n1_rs12_sat_rel2 = ( (A0_DUR <= N1_RS12_REL2) ? true:false);
formula a0_n1_rs12_sat_rel3 = ( (A0_DUR <= N1_RS12_REL3) ? true:false);
formula a0_n1_rs12_sat_rel4 = ( (A0_DUR <= N1_RS12_REL4) ? true:false);
formula a0_n1_rs12_sat_cost = ( (A0_COST <= N1_RS12_COST) ? true:false);
formula a0_n1_rs12_sat_avail = N1_RS12_AVAIL;
formula a0_n1_rs12_sat_all = a0_n1_rs12_sat_avail;

//=====Application 0, Node1 and RS13
formula a0_n1_rs13_sat_dur0 = ( (A0_DUR <= N1_RS13_DUR0) ? true:false);
formula a0_n1_rs13_sat_dur1 = ( (A0_DUR <= N1_RS13_DUR1) ? true:false);
formula a0_n1_rs13_sat_dur2 = ( (A0_DUR <= N1_RS13_DUR2) ? true:false);
formula a0_n1_rs13_sat_dur3 = ( (A0_DUR <= N1_RS13_DUR3) ? true:false);
formula a0_n1_rs13_sat_dur4 = ( (A0_DUR <= N1_RS13_DUR4) ? true:false);
formula a0_n1_rs13_sat_rel0 = ( (A0_DUR <= N1_RS13_REL0) ? true:false);
formula a0_n1_rs13_sat_rel1 = ( (A0_DUR <= N1_RS13_REL1) ? true:false);
formula a0_n1_rs13_sat_rel2 = ( (A0_DUR <= N1_RS13_REL2) ? true:false);
formula a0_n1_rs13_sat_rel3 = ( (A0_DUR <= N1_RS13_REL3) ? true:false);
formula a0_n1_rs13_sat_rel4 = ( (A0_DUR <= N1_RS13_REL4) ? true:false);
formula a0_n1_rs13_sat_cost = ( (A0_COST <= N1_RS13_COST) ? true:false);
formula a0_n1_rs13_sat_avail = N1_RS13_AVAIL;
formula a0_n1_rs13_sat_all = a0_n1_rs13_sat_avail;

//=====Application 0, Node1 and RS14
formula a0_n1_rs14_sat_dur0 = ( (A0_DUR <= N1_RS14_DUR0) ? true:false);
formula a0_n1_rs14_sat_dur1 = ( (A0_DUR <= N1_RS14_DUR1) ? true:false);
formula a0_n1_rs14_sat_dur2 = ( (A0_DUR <= N1_RS14_DUR2) ? true:false);
formula a0_n1_rs14_sat_dur3 = ( (A0_DUR <= N1_RS14_DUR3) ? true:false);
formula a0_n1_rs14_sat_dur4 = ( (A0_DUR <= N1_RS14_DUR4) ? true:false);
formula a0_n1_rs14_sat_rel0 = ( (A0_DUR <= N1_RS14_REL0) ? true:false);
formula a0_n1_rs14_sat_rel1 = ( (A0_DUR <= N1_RS14_REL1) ? true:false);
formula a0_n1_rs14_sat_rel2 = ( (A0_DUR <= N1_RS14_REL2) ? true:false);
formula a0_n1_rs14_sat_rel3 = ( (A0_DUR <= N1_RS14_REL3) ? true:false);
formula a0_n1_rs14_sat_rel4 = ( (A0_DUR <= N1_RS14_REL4) ? true:false);
formula a0_n1_rs14_sat_cost = ( (A0_COST <= N1_RS14_COST) ? true:false);
formula a0_n1_rs14_sat_avail = N1_RS14_AVAIL;
formula a0_n1_rs14_sat_all = a0_n1_rs14_sat_avail;

//=====Application 0, Node1 and RS15
formula a0_n1_rs15_sat_dur0 = ( (A0_DUR <= N1_RS15_DUR0) ? true:false);
formula a0_n1_rs15_sat_dur1 = ( (A0_DUR <= N1_RS15_DUR1) ? true:false);
formula a0_n1_rs15_sat_dur2 = ( (A0_DUR <= N1_RS15_DUR2) ? true:false);
formula a0_n1_rs15_sat_dur3 = ( (A0_DUR <= N1_RS15_DUR3) ? true:false);
formula a0_n1_rs15_sat_dur4 = ( (A0_DUR <= N1_RS15_DUR4) ? true:false);
formula a0_n1_rs15_sat_rel0 = ( (A0_DUR <= N1_RS15_REL0) ? true:false);
formula a0_n1_rs15_sat_rel1 = ( (A0_DUR <= N1_RS15_REL1) ? true:false);
formula a0_n1_rs15_sat_rel2 = ( (A0_DUR <= N1_RS15_REL2) ? true:false);
formula a0_n1_rs15_sat_rel3 = ( (A0_DUR <= N1_RS15_REL3) ? true:false);
formula a0_n1_rs15_sat_rel4 = ( (A0_DUR <= N1_RS15_REL4) ? true:false);
formula a0_n1_rs15_sat_cost = ( (A0_COST <= N1_RS15_COST) ? true:false);
formula a0_n1_rs15_sat_avail = N1_RS15_AVAIL;
formula a0_n1_rs15_sat_all = a0_n1_rs15_sat_avail;

//=====Application 0, Node1 and RS16
formula a0_n1_rs16_sat_dur0 = ( (A0_DUR <= N1_RS16_DUR0) ? true:false);
formula a0_n1_rs16_sat_dur1 = ( (A0_DUR <= N1_RS16_DUR1) ? true:false);
formula a0_n1_rs16_sat_dur2 = ( (A0_DUR <= N1_RS16_DUR2) ? true:false);
formula a0_n1_rs16_sat_dur3 = ( (A0_DUR <= N1_RS16_DUR3) ? true:false);
formula a0_n1_rs16_sat_dur4 = ( (A0_DUR <= N1_RS16_DUR4) ? true:false);
formula a0_n1_rs16_sat_rel0 = ( (A0_DUR <= N1_RS16_REL0) ? true:false);
formula a0_n1_rs16_sat_rel1 = ( (A0_DUR <= N1_RS16_REL1) ? true:false);
formula a0_n1_rs16_sat_rel2 = ( (A0_DUR <= N1_RS16_REL2) ? true:false);
formula a0_n1_rs16_sat_rel3 = ( (A0_DUR <= N1_RS16_REL3) ? true:false);
formula a0_n1_rs16_sat_rel4 = ( (A0_DUR <= N1_RS16_REL4) ? true:false);
formula a0_n1_rs16_sat_cost = ( (A0_COST <= N1_RS16_COST) ? true:false);
formula a0_n1_rs16_sat_avail = N1_RS16_AVAIL;
formula a0_n1_rs16_sat_all = a0_n1_rs16_sat_avail;

//=====Application 0, Node1 and RS17
formula a0_n1_rs17_sat_dur0 = ( (A0_DUR <= N1_RS17_DUR0) ? true:false);
formula a0_n1_rs17_sat_dur1 = ( (A0_DUR <= N1_RS17_DUR1) ? true:false);
formula a0_n1_rs17_sat_dur2 = ( (A0_DUR <= N1_RS17_DUR2) ? true:false);
formula a0_n1_rs17_sat_dur3 = ( (A0_DUR <= N1_RS17_DUR3) ? true:false);
formula a0_n1_rs17_sat_dur4 = ( (A0_DUR <= N1_RS17_DUR4) ? true:false);
formula a0_n1_rs17_sat_rel0 = ( (A0_DUR <= N1_RS17_REL0) ? true:false);
formula a0_n1_rs17_sat_rel1 = ( (A0_DUR <= N1_RS17_REL1) ? true:false);
formula a0_n1_rs17_sat_rel2 = ( (A0_DUR <= N1_RS17_REL2) ? true:false);
formula a0_n1_rs17_sat_rel3 = ( (A0_DUR <= N1_RS17_REL3) ? true:false);
formula a0_n1_rs17_sat_rel4 = ( (A0_DUR <= N1_RS17_REL4) ? true:false);
formula a0_n1_rs17_sat_cost = ( (A0_COST <= N1_RS17_COST) ? true:false);
formula a0_n1_rs17_sat_avail = N1_RS17_AVAIL;
formula a0_n1_rs17_sat_all = a0_n1_rs17_sat_avail;

//=====Application 0, Node1 and RS18
formula a0_n1_rs18_sat_dur0 = ( (A0_DUR <= N1_RS18_DUR0) ? true:false);
formula a0_n1_rs18_sat_dur1 = ( (A0_DUR <= N1_RS18_DUR1) ? true:false);
formula a0_n1_rs18_sat_dur2 = ( (A0_DUR <= N1_RS18_DUR2) ? true:false);
formula a0_n1_rs18_sat_dur3 = ( (A0_DUR <= N1_RS18_DUR3) ? true:false);
formula a0_n1_rs18_sat_dur4 = ( (A0_DUR <= N1_RS18_DUR4) ? true:false);
formula a0_n1_rs18_sat_rel0 = ( (A0_DUR <= N1_RS18_REL0) ? true:false);
formula a0_n1_rs18_sat_rel1 = ( (A0_DUR <= N1_RS18_REL1) ? true:false);
formula a0_n1_rs18_sat_rel2 = ( (A0_DUR <= N1_RS18_REL2) ? true:false);
formula a0_n1_rs18_sat_rel3 = ( (A0_DUR <= N1_RS18_REL3) ? true:false);
formula a0_n1_rs18_sat_rel4 = ( (A0_DUR <= N1_RS18_REL4) ? true:false);
formula a0_n1_rs18_sat_cost = ( (A0_COST <= N1_RS18_COST) ? true:false);
formula a0_n1_rs18_sat_avail = N1_RS18_AVAIL;
formula a0_n1_rs18_sat_all = a0_n1_rs18_sat_avail;

//=====Application 0, Node1 and RS19
formula a0_n1_rs19_sat_dur0 = ( (A0_DUR <= N1_RS19_DUR0) ? true:false);
formula a0_n1_rs19_sat_dur1 = ( (A0_DUR <= N1_RS19_DUR1) ? true:false);
formula a0_n1_rs19_sat_dur2 = ( (A0_DUR <= N1_RS19_DUR2) ? true:false);
formula a0_n1_rs19_sat_dur3 = ( (A0_DUR <= N1_RS19_DUR3) ? true:false);
formula a0_n1_rs19_sat_dur4 = ( (A0_DUR <= N1_RS19_DUR4) ? true:false);
formula a0_n1_rs19_sat_rel0 = ( (A0_DUR <= N1_RS19_REL0) ? true:false);
formula a0_n1_rs19_sat_rel1 = ( (A0_DUR <= N1_RS19_REL1) ? true:false);
formula a0_n1_rs19_sat_rel2 = ( (A0_DUR <= N1_RS19_REL2) ? true:false);
formula a0_n1_rs19_sat_rel3 = ( (A0_DUR <= N1_RS19_REL3) ? true:false);
formula a0_n1_rs19_sat_rel4 = ( (A0_DUR <= N1_RS19_REL4) ? true:false);
formula a0_n1_rs19_sat_cost = ( (A0_COST <= N1_RS19_COST) ? true:false);
formula a0_n1_rs19_sat_avail = N1_RS19_AVAIL;
formula a0_n1_rs19_sat_all = a0_n1_rs19_sat_avail;

//=====Application 0, Node1 and RS20
formula a0_n1_rs20_sat_dur0 = ( (A0_DUR <= N1_RS20_DUR0) ? true:false);
formula a0_n1_rs20_sat_dur1 = ( (A0_DUR <= N1_RS20_DUR1) ? true:false);
formula a0_n1_rs20_sat_dur2 = ( (A0_DUR <= N1_RS20_DUR2) ? true:false);
formula a0_n1_rs20_sat_dur3 = ( (A0_DUR <= N1_RS20_DUR3) ? true:false);
formula a0_n1_rs20_sat_dur4 = ( (A0_DUR <= N1_RS20_DUR4) ? true:false);
formula a0_n1_rs20_sat_rel0 = ( (A0_DUR <= N1_RS20_REL0) ? true:false);
formula a0_n1_rs20_sat_rel1 = ( (A0_DUR <= N1_RS20_REL1) ? true:false);
formula a0_n1_rs20_sat_rel2 = ( (A0_DUR <= N1_RS20_REL2) ? true:false);
formula a0_n1_rs20_sat_rel3 = ( (A0_DUR <= N1_RS20_REL3) ? true:false);
formula a0_n1_rs20_sat_rel4 = ( (A0_DUR <= N1_RS20_REL4) ? true:false);
formula a0_n1_rs20_sat_cost = ( (A0_COST <= N1_RS20_COST) ? true:false);
formula a0_n1_rs20_sat_avail = N1_RS20_AVAIL;
formula a0_n1_rs20_sat_all = a0_n1_rs20_sat_avail;

//=====Application 0, Node1 and RS21
formula a0_n1_rs21_sat_dur0 = ( (A0_DUR <= N1_RS21_DUR0) ? true:false);
formula a0_n1_rs21_sat_dur1 = ( (A0_DUR <= N1_RS21_DUR1) ? true:false);
formula a0_n1_rs21_sat_dur2 = ( (A0_DUR <= N1_RS21_DUR2) ? true:false);
formula a0_n1_rs21_sat_dur3 = ( (A0_DUR <= N1_RS21_DUR3) ? true:false);
formula a0_n1_rs21_sat_dur4 = ( (A0_DUR <= N1_RS21_DUR4) ? true:false);
formula a0_n1_rs21_sat_rel0 = ( (A0_DUR <= N1_RS21_REL0) ? true:false);
formula a0_n1_rs21_sat_rel1 = ( (A0_DUR <= N1_RS21_REL1) ? true:false);
formula a0_n1_rs21_sat_rel2 = ( (A0_DUR <= N1_RS21_REL2) ? true:false);
formula a0_n1_rs21_sat_rel3 = ( (A0_DUR <= N1_RS21_REL3) ? true:false);
formula a0_n1_rs21_sat_rel4 = ( (A0_DUR <= N1_RS21_REL4) ? true:false);
formula a0_n1_rs21_sat_cost = ( (A0_COST <= N1_RS21_COST) ? true:false);
formula a0_n1_rs21_sat_avail = N1_RS21_AVAIL;
formula a0_n1_rs21_sat_all = a0_n1_rs21_sat_avail;

//=====Application 0, Node1 and RS22
formula a0_n1_rs22_sat_dur0 = ( (A0_DUR <= N1_RS22_DUR0) ? true:false);
formula a0_n1_rs22_sat_dur1 = ( (A0_DUR <= N1_RS22_DUR1) ? true:false);
formula a0_n1_rs22_sat_dur2 = ( (A0_DUR <= N1_RS22_DUR2) ? true:false);
formula a0_n1_rs22_sat_dur3 = ( (A0_DUR <= N1_RS22_DUR3) ? true:false);
formula a0_n1_rs22_sat_dur4 = ( (A0_DUR <= N1_RS22_DUR4) ? true:false);
formula a0_n1_rs22_sat_rel0 = ( (A0_DUR <= N1_RS22_REL0) ? true:false);
formula a0_n1_rs22_sat_rel1 = ( (A0_DUR <= N1_RS22_REL1) ? true:false);
formula a0_n1_rs22_sat_rel2 = ( (A0_DUR <= N1_RS22_REL2) ? true:false);
formula a0_n1_rs22_sat_rel3 = ( (A0_DUR <= N1_RS22_REL3) ? true:false);
formula a0_n1_rs22_sat_rel4 = ( (A0_DUR <= N1_RS22_REL4) ? true:false);
formula a0_n1_rs22_sat_cost = ( (A0_COST <= N1_RS22_COST) ? true:false);
formula a0_n1_rs22_sat_avail = N1_RS22_AVAIL;
formula a0_n1_rs22_sat_all = a0_n1_rs22_sat_avail;

//=====Application 0, Node1 and RS23
formula a0_n1_rs23_sat_dur0 = ( (A0_DUR <= N1_RS23_DUR0) ? true:false);
formula a0_n1_rs23_sat_dur1 = ( (A0_DUR <= N1_RS23_DUR1) ? true:false);
formula a0_n1_rs23_sat_dur2 = ( (A0_DUR <= N1_RS23_DUR2) ? true:false);
formula a0_n1_rs23_sat_dur3 = ( (A0_DUR <= N1_RS23_DUR3) ? true:false);
formula a0_n1_rs23_sat_dur4 = ( (A0_DUR <= N1_RS23_DUR4) ? true:false);
formula a0_n1_rs23_sat_rel0 = ( (A0_DUR <= N1_RS23_REL0) ? true:false);
formula a0_n1_rs23_sat_rel1 = ( (A0_DUR <= N1_RS23_REL1) ? true:false);
formula a0_n1_rs23_sat_rel2 = ( (A0_DUR <= N1_RS23_REL2) ? true:false);
formula a0_n1_rs23_sat_rel3 = ( (A0_DUR <= N1_RS23_REL3) ? true:false);
formula a0_n1_rs23_sat_rel4 = ( (A0_DUR <= N1_RS23_REL4) ? true:false);
formula a0_n1_rs23_sat_cost = ( (A0_COST <= N1_RS23_COST) ? true:false);
formula a0_n1_rs23_sat_avail = N1_RS23_AVAIL;
formula a0_n1_rs23_sat_all = a0_n1_rs23_sat_avail;

//=====Application 0, Node1 and RS24
formula a0_n1_rs24_sat_dur0 = ( (A0_DUR <= N1_RS24_DUR0) ? true:false);
formula a0_n1_rs24_sat_dur1 = ( (A0_DUR <= N1_RS24_DUR1) ? true:false);
formula a0_n1_rs24_sat_dur2 = ( (A0_DUR <= N1_RS24_DUR2) ? true:false);
formula a0_n1_rs24_sat_dur3 = ( (A0_DUR <= N1_RS24_DUR3) ? true:false);
formula a0_n1_rs24_sat_dur4 = ( (A0_DUR <= N1_RS24_DUR4) ? true:false);
formula a0_n1_rs24_sat_rel0 = ( (A0_DUR <= N1_RS24_REL0) ? true:false);
formula a0_n1_rs24_sat_rel1 = ( (A0_DUR <= N1_RS24_REL1) ? true:false);
formula a0_n1_rs24_sat_rel2 = ( (A0_DUR <= N1_RS24_REL2) ? true:false);
formula a0_n1_rs24_sat_rel3 = ( (A0_DUR <= N1_RS24_REL3) ? true:false);
formula a0_n1_rs24_sat_rel4 = ( (A0_DUR <= N1_RS24_REL4) ? true:false);
formula a0_n1_rs24_sat_cost = ( (A0_COST <= N1_RS24_COST) ? true:false);
formula a0_n1_rs24_sat_avail = N1_RS24_AVAIL;
formula a0_n1_rs24_sat_all = a0_n1_rs24_sat_avail;

//=====Application 0, Node1 and RS25
formula a0_n1_rs25_sat_dur0 = ( (A0_DUR <= N1_RS25_DUR0) ? true:false);
formula a0_n1_rs25_sat_dur1 = ( (A0_DUR <= N1_RS25_DUR1) ? true:false);
formula a0_n1_rs25_sat_dur2 = ( (A0_DUR <= N1_RS25_DUR2) ? true:false);
formula a0_n1_rs25_sat_dur3 = ( (A0_DUR <= N1_RS25_DUR3) ? true:false);
formula a0_n1_rs25_sat_dur4 = ( (A0_DUR <= N1_RS25_DUR4) ? true:false);
formula a0_n1_rs25_sat_rel0 = ( (A0_DUR <= N1_RS25_REL0) ? true:false);
formula a0_n1_rs25_sat_rel1 = ( (A0_DUR <= N1_RS25_REL1) ? true:false);
formula a0_n1_rs25_sat_rel2 = ( (A0_DUR <= N1_RS25_REL2) ? true:false);
formula a0_n1_rs25_sat_rel3 = ( (A0_DUR <= N1_RS25_REL3) ? true:false);
formula a0_n1_rs25_sat_rel4 = ( (A0_DUR <= N1_RS25_REL4) ? true:false);
formula a0_n1_rs25_sat_cost = ( (A0_COST <= N1_RS25_COST) ? true:false);
formula a0_n1_rs25_sat_avail = N1_RS25_AVAIL;
formula a0_n1_rs25_sat_all = a0_n1_rs25_sat_avail;

//=====Application 0, Node1 and RS26
formula a0_n1_rs26_sat_dur0 = ( (A0_DUR <= N1_RS26_DUR0) ? true:false);
formula a0_n1_rs26_sat_dur1 = ( (A0_DUR <= N1_RS26_DUR1) ? true:false);
formula a0_n1_rs26_sat_dur2 = ( (A0_DUR <= N1_RS26_DUR2) ? true:false);
formula a0_n1_rs26_sat_dur3 = ( (A0_DUR <= N1_RS26_DUR3) ? true:false);
formula a0_n1_rs26_sat_dur4 = ( (A0_DUR <= N1_RS26_DUR4) ? true:false);
formula a0_n1_rs26_sat_rel0 = ( (A0_DUR <= N1_RS26_REL0) ? true:false);
formula a0_n1_rs26_sat_rel1 = ( (A0_DUR <= N1_RS26_REL1) ? true:false);
formula a0_n1_rs26_sat_rel2 = ( (A0_DUR <= N1_RS26_REL2) ? true:false);
formula a0_n1_rs26_sat_rel3 = ( (A0_DUR <= N1_RS26_REL3) ? true:false);
formula a0_n1_rs26_sat_rel4 = ( (A0_DUR <= N1_RS26_REL4) ? true:false);
formula a0_n1_rs26_sat_cost = ( (A0_COST <= N1_RS26_COST) ? true:false);
formula a0_n1_rs26_sat_avail = N1_RS26_AVAIL;
formula a0_n1_rs26_sat_all = a0_n1_rs26_sat_avail;

//=====Application 0, Node1 and RS27
formula a0_n1_rs27_sat_dur0 = ( (A0_DUR <= N1_RS27_DUR0) ? true:false);
formula a0_n1_rs27_sat_dur1 = ( (A0_DUR <= N1_RS27_DUR1) ? true:false);
formula a0_n1_rs27_sat_dur2 = ( (A0_DUR <= N1_RS27_DUR2) ? true:false);
formula a0_n1_rs27_sat_dur3 = ( (A0_DUR <= N1_RS27_DUR3) ? true:false);
formula a0_n1_rs27_sat_dur4 = ( (A0_DUR <= N1_RS27_DUR4) ? true:false);
formula a0_n1_rs27_sat_rel0 = ( (A0_DUR <= N1_RS27_REL0) ? true:false);
formula a0_n1_rs27_sat_rel1 = ( (A0_DUR <= N1_RS27_REL1) ? true:false);
formula a0_n1_rs27_sat_rel2 = ( (A0_DUR <= N1_RS27_REL2) ? true:false);
formula a0_n1_rs27_sat_rel3 = ( (A0_DUR <= N1_RS27_REL3) ? true:false);
formula a0_n1_rs27_sat_rel4 = ( (A0_DUR <= N1_RS27_REL4) ? true:false);
formula a0_n1_rs27_sat_cost = ( (A0_COST <= N1_RS27_COST) ? true:false);
formula a0_n1_rs27_sat_avail = N1_RS27_AVAIL;
formula a0_n1_rs27_sat_all = a0_n1_rs27_sat_avail;

//=====Application 0, Node1 and RS28
formula a0_n1_rs28_sat_dur0 = ( (A0_DUR <= N1_RS28_DUR0) ? true:false);
formula a0_n1_rs28_sat_dur1 = ( (A0_DUR <= N1_RS28_DUR1) ? true:false);
formula a0_n1_rs28_sat_dur2 = ( (A0_DUR <= N1_RS28_DUR2) ? true:false);
formula a0_n1_rs28_sat_dur3 = ( (A0_DUR <= N1_RS28_DUR3) ? true:false);
formula a0_n1_rs28_sat_dur4 = ( (A0_DUR <= N1_RS28_DUR4) ? true:false);
formula a0_n1_rs28_sat_rel0 = ( (A0_DUR <= N1_RS28_REL0) ? true:false);
formula a0_n1_rs28_sat_rel1 = ( (A0_DUR <= N1_RS28_REL1) ? true:false);
formula a0_n1_rs28_sat_rel2 = ( (A0_DUR <= N1_RS28_REL2) ? true:false);
formula a0_n1_rs28_sat_rel3 = ( (A0_DUR <= N1_RS28_REL3) ? true:false);
formula a0_n1_rs28_sat_rel4 = ( (A0_DUR <= N1_RS28_REL4) ? true:false);
formula a0_n1_rs28_sat_cost = ( (A0_COST <= N1_RS28_COST) ? true:false);
formula a0_n1_rs28_sat_avail = N1_RS28_AVAIL;
formula a0_n1_rs28_sat_all = a0_n1_rs28_sat_avail;

//=====Application 0, Node1 and RS29
formula a0_n1_rs29_sat_dur0 = ( (A0_DUR <= N1_RS29_DUR0) ? true:false);
formula a0_n1_rs29_sat_dur1 = ( (A0_DUR <= N1_RS29_DUR1) ? true:false);
formula a0_n1_rs29_sat_dur2 = ( (A0_DUR <= N1_RS29_DUR2) ? true:false);
formula a0_n1_rs29_sat_dur3 = ( (A0_DUR <= N1_RS29_DUR3) ? true:false);
formula a0_n1_rs29_sat_dur4 = ( (A0_DUR <= N1_RS29_DUR4) ? true:false);
formula a0_n1_rs29_sat_rel0 = ( (A0_DUR <= N1_RS29_REL0) ? true:false);
formula a0_n1_rs29_sat_rel1 = ( (A0_DUR <= N1_RS29_REL1) ? true:false);
formula a0_n1_rs29_sat_rel2 = ( (A0_DUR <= N1_RS29_REL2) ? true:false);
formula a0_n1_rs29_sat_rel3 = ( (A0_DUR <= N1_RS29_REL3) ? true:false);
formula a0_n1_rs29_sat_rel4 = ( (A0_DUR <= N1_RS29_REL4) ? true:false);
formula a0_n1_rs29_sat_cost = ( (A0_COST <= N1_RS29_COST) ? true:false);
formula a0_n1_rs29_sat_avail = N1_RS29_AVAIL;
formula a0_n1_rs29_sat_all = a0_n1_rs29_sat_avail;

//=====Application 0, Node1 and RS30
formula a0_n1_rs30_sat_dur0 = ( (A0_DUR <= N1_RS30_DUR0) ? true:false);
formula a0_n1_rs30_sat_dur1 = ( (A0_DUR <= N1_RS30_DUR1) ? true:false);
formula a0_n1_rs30_sat_dur2 = ( (A0_DUR <= N1_RS30_DUR2) ? true:false);
formula a0_n1_rs30_sat_dur3 = ( (A0_DUR <= N1_RS30_DUR3) ? true:false);
formula a0_n1_rs30_sat_dur4 = ( (A0_DUR <= N1_RS30_DUR4) ? true:false);
formula a0_n1_rs30_sat_rel0 = ( (A0_DUR <= N1_RS30_REL0) ? true:false);
formula a0_n1_rs30_sat_rel1 = ( (A0_DUR <= N1_RS30_REL1) ? true:false);
formula a0_n1_rs30_sat_rel2 = ( (A0_DUR <= N1_RS30_REL2) ? true:false);
formula a0_n1_rs30_sat_rel3 = ( (A0_DUR <= N1_RS30_REL3) ? true:false);
formula a0_n1_rs30_sat_rel4 = ( (A0_DUR <= N1_RS30_REL4) ? true:false);
formula a0_n1_rs30_sat_cost = ( (A0_COST <= N1_RS30_COST) ? true:false);
formula a0_n1_rs30_sat_avail = N1_RS30_AVAIL;
formula a0_n1_rs30_sat_all = a0_n1_rs30_sat_avail;

//=====Application 0, Node1 and RS31
formula a0_n1_rs31_sat_dur0 = ( (A0_DUR <= N1_RS31_DUR0) ? true:false);
formula a0_n1_rs31_sat_dur1 = ( (A0_DUR <= N1_RS31_DUR1) ? true:false);
formula a0_n1_rs31_sat_dur2 = ( (A0_DUR <= N1_RS31_DUR2) ? true:false);
formula a0_n1_rs31_sat_dur3 = ( (A0_DUR <= N1_RS31_DUR3) ? true:false);
formula a0_n1_rs31_sat_dur4 = ( (A0_DUR <= N1_RS31_DUR4) ? true:false);
formula a0_n1_rs31_sat_rel0 = ( (A0_DUR <= N1_RS31_REL0) ? true:false);
formula a0_n1_rs31_sat_rel1 = ( (A0_DUR <= N1_RS31_REL1) ? true:false);
formula a0_n1_rs31_sat_rel2 = ( (A0_DUR <= N1_RS31_REL2) ? true:false);
formula a0_n1_rs31_sat_rel3 = ( (A0_DUR <= N1_RS31_REL3) ? true:false);
formula a0_n1_rs31_sat_rel4 = ( (A0_DUR <= N1_RS31_REL4) ? true:false);
formula a0_n1_rs31_sat_cost = ( (A0_COST <= N1_RS31_COST) ? true:false);
formula a0_n1_rs31_sat_avail = N1_RS31_AVAIL;
formula a0_n1_rs31_sat_all = a0_n1_rs31_sat_avail;

//=====Application 0, Node1 and RS32
formula a0_n1_rs32_sat_dur0 = ( (A0_DUR <= N1_RS32_DUR0) ? true:false);
formula a0_n1_rs32_sat_dur1 = ( (A0_DUR <= N1_RS32_DUR1) ? true:false);
formula a0_n1_rs32_sat_dur2 = ( (A0_DUR <= N1_RS32_DUR2) ? true:false);
formula a0_n1_rs32_sat_dur3 = ( (A0_DUR <= N1_RS32_DUR3) ? true:false);
formula a0_n1_rs32_sat_dur4 = ( (A0_DUR <= N1_RS32_DUR4) ? true:false);
formula a0_n1_rs32_sat_rel0 = ( (A0_DUR <= N1_RS32_REL0) ? true:false);
formula a0_n1_rs32_sat_rel1 = ( (A0_DUR <= N1_RS32_REL1) ? true:false);
formula a0_n1_rs32_sat_rel2 = ( (A0_DUR <= N1_RS32_REL2) ? true:false);
formula a0_n1_rs32_sat_rel3 = ( (A0_DUR <= N1_RS32_REL3) ? true:false);
formula a0_n1_rs32_sat_rel4 = ( (A0_DUR <= N1_RS32_REL4) ? true:false);
formula a0_n1_rs32_sat_cost = ( (A0_COST <= N1_RS32_COST) ? true:false);
formula a0_n1_rs32_sat_avail = N1_RS32_AVAIL;
formula a0_n1_rs32_sat_all = a0_n1_rs32_sat_avail;

//=====Application 0, Node1 and RS33
formula a0_n1_rs33_sat_dur0 = ( (A0_DUR <= N1_RS33_DUR0) ? true:false);
formula a0_n1_rs33_sat_dur1 = ( (A0_DUR <= N1_RS33_DUR1) ? true:false);
formula a0_n1_rs33_sat_dur2 = ( (A0_DUR <= N1_RS33_DUR2) ? true:false);
formula a0_n1_rs33_sat_dur3 = ( (A0_DUR <= N1_RS33_DUR3) ? true:false);
formula a0_n1_rs33_sat_dur4 = ( (A0_DUR <= N1_RS33_DUR4) ? true:false);
formula a0_n1_rs33_sat_rel0 = ( (A0_DUR <= N1_RS33_REL0) ? true:false);
formula a0_n1_rs33_sat_rel1 = ( (A0_DUR <= N1_RS33_REL1) ? true:false);
formula a0_n1_rs33_sat_rel2 = ( (A0_DUR <= N1_RS33_REL2) ? true:false);
formula a0_n1_rs33_sat_rel3 = ( (A0_DUR <= N1_RS33_REL3) ? true:false);
formula a0_n1_rs33_sat_rel4 = ( (A0_DUR <= N1_RS33_REL4) ? true:false);
formula a0_n1_rs33_sat_cost = ( (A0_COST <= N1_RS33_COST) ? true:false);
formula a0_n1_rs33_sat_avail = N1_RS33_AVAIL;
formula a0_n1_rs33_sat_all = a0_n1_rs33_sat_avail;

//=====Application 0, Node1 and RS34
formula a0_n1_rs34_sat_dur0 = ( (A0_DUR <= N1_RS34_DUR0) ? true:false);
formula a0_n1_rs34_sat_dur1 = ( (A0_DUR <= N1_RS34_DUR1) ? true:false);
formula a0_n1_rs34_sat_dur2 = ( (A0_DUR <= N1_RS34_DUR2) ? true:false);
formula a0_n1_rs34_sat_dur3 = ( (A0_DUR <= N1_RS34_DUR3) ? true:false);
formula a0_n1_rs34_sat_dur4 = ( (A0_DUR <= N1_RS34_DUR4) ? true:false);
formula a0_n1_rs34_sat_rel0 = ( (A0_DUR <= N1_RS34_REL0) ? true:false);
formula a0_n1_rs34_sat_rel1 = ( (A0_DUR <= N1_RS34_REL1) ? true:false);
formula a0_n1_rs34_sat_rel2 = ( (A0_DUR <= N1_RS34_REL2) ? true:false);
formula a0_n1_rs34_sat_rel3 = ( (A0_DUR <= N1_RS34_REL3) ? true:false);
formula a0_n1_rs34_sat_rel4 = ( (A0_DUR <= N1_RS34_REL4) ? true:false);
formula a0_n1_rs34_sat_cost = ( (A0_COST <= N1_RS34_COST) ? true:false);
formula a0_n1_rs34_sat_avail = N1_RS34_AVAIL;
formula a0_n1_rs34_sat_all = a0_n1_rs34_sat_avail;

//=====Application 0, Node1 and RS35
formula a0_n1_rs35_sat_dur0 = ( (A0_DUR <= N1_RS35_DUR0) ? true:false);
formula a0_n1_rs35_sat_dur1 = ( (A0_DUR <= N1_RS35_DUR1) ? true:false);
formula a0_n1_rs35_sat_dur2 = ( (A0_DUR <= N1_RS35_DUR2) ? true:false);
formula a0_n1_rs35_sat_dur3 = ( (A0_DUR <= N1_RS35_DUR3) ? true:false);
formula a0_n1_rs35_sat_dur4 = ( (A0_DUR <= N1_RS35_DUR4) ? true:false);
formula a0_n1_rs35_sat_rel0 = ( (A0_DUR <= N1_RS35_REL0) ? true:false);
formula a0_n1_rs35_sat_rel1 = ( (A0_DUR <= N1_RS35_REL1) ? true:false);
formula a0_n1_rs35_sat_rel2 = ( (A0_DUR <= N1_RS35_REL2) ? true:false);
formula a0_n1_rs35_sat_rel3 = ( (A0_DUR <= N1_RS35_REL3) ? true:false);
formula a0_n1_rs35_sat_rel4 = ( (A0_DUR <= N1_RS35_REL4) ? true:false);
formula a0_n1_rs35_sat_cost = ( (A0_COST <= N1_RS35_COST) ? true:false);
formula a0_n1_rs35_sat_avail = N1_RS35_AVAIL;
formula a0_n1_rs35_sat_all = a0_n1_rs35_sat_avail;

//=====Application 0, Node1 and RS36
formula a0_n1_rs36_sat_dur0 = ( (A0_DUR <= N1_RS36_DUR0) ? true:false);
formula a0_n1_rs36_sat_dur1 = ( (A0_DUR <= N1_RS36_DUR1) ? true:false);
formula a0_n1_rs36_sat_dur2 = ( (A0_DUR <= N1_RS36_DUR2) ? true:false);
formula a0_n1_rs36_sat_dur3 = ( (A0_DUR <= N1_RS36_DUR3) ? true:false);
formula a0_n1_rs36_sat_dur4 = ( (A0_DUR <= N1_RS36_DUR4) ? true:false);
formula a0_n1_rs36_sat_rel0 = ( (A0_DUR <= N1_RS36_REL0) ? true:false);
formula a0_n1_rs36_sat_rel1 = ( (A0_DUR <= N1_RS36_REL1) ? true:false);
formula a0_n1_rs36_sat_rel2 = ( (A0_DUR <= N1_RS36_REL2) ? true:false);
formula a0_n1_rs36_sat_rel3 = ( (A0_DUR <= N1_RS36_REL3) ? true:false);
formula a0_n1_rs36_sat_rel4 = ( (A0_DUR <= N1_RS36_REL4) ? true:false);
formula a0_n1_rs36_sat_cost = ( (A0_COST <= N1_RS36_COST) ? true:false);
formula a0_n1_rs36_sat_avail = N1_RS36_AVAIL;
formula a0_n1_rs36_sat_all = a0_n1_rs36_sat_avail;

//=====Application 0, Node1 and RS37
formula a0_n1_rs37_sat_dur0 = ( (A0_DUR <= N1_RS37_DUR0) ? true:false);
formula a0_n1_rs37_sat_dur1 = ( (A0_DUR <= N1_RS37_DUR1) ? true:false);
formula a0_n1_rs37_sat_dur2 = ( (A0_DUR <= N1_RS37_DUR2) ? true:false);
formula a0_n1_rs37_sat_dur3 = ( (A0_DUR <= N1_RS37_DUR3) ? true:false);
formula a0_n1_rs37_sat_dur4 = ( (A0_DUR <= N1_RS37_DUR4) ? true:false);
formula a0_n1_rs37_sat_rel0 = ( (A0_DUR <= N1_RS37_REL0) ? true:false);
formula a0_n1_rs37_sat_rel1 = ( (A0_DUR <= N1_RS37_REL1) ? true:false);
formula a0_n1_rs37_sat_rel2 = ( (A0_DUR <= N1_RS37_REL2) ? true:false);
formula a0_n1_rs37_sat_rel3 = ( (A0_DUR <= N1_RS37_REL3) ? true:false);
formula a0_n1_rs37_sat_rel4 = ( (A0_DUR <= N1_RS37_REL4) ? true:false);
formula a0_n1_rs37_sat_cost = ( (A0_COST <= N1_RS37_COST) ? true:false);
formula a0_n1_rs37_sat_avail = N1_RS37_AVAIL;
formula a0_n1_rs37_sat_all = a0_n1_rs37_sat_avail;

//=====Application 0, Node1 and RS38
formula a0_n1_rs38_sat_dur0 = ( (A0_DUR <= N1_RS38_DUR0) ? true:false);
formula a0_n1_rs38_sat_dur1 = ( (A0_DUR <= N1_RS38_DUR1) ? true:false);
formula a0_n1_rs38_sat_dur2 = ( (A0_DUR <= N1_RS38_DUR2) ? true:false);
formula a0_n1_rs38_sat_dur3 = ( (A0_DUR <= N1_RS38_DUR3) ? true:false);
formula a0_n1_rs38_sat_dur4 = ( (A0_DUR <= N1_RS38_DUR4) ? true:false);
formula a0_n1_rs38_sat_rel0 = ( (A0_DUR <= N1_RS38_REL0) ? true:false);
formula a0_n1_rs38_sat_rel1 = ( (A0_DUR <= N1_RS38_REL1) ? true:false);
formula a0_n1_rs38_sat_rel2 = ( (A0_DUR <= N1_RS38_REL2) ? true:false);
formula a0_n1_rs38_sat_rel3 = ( (A0_DUR <= N1_RS38_REL3) ? true:false);
formula a0_n1_rs38_sat_rel4 = ( (A0_DUR <= N1_RS38_REL4) ? true:false);
formula a0_n1_rs38_sat_cost = ( (A0_COST <= N1_RS38_COST) ? true:false);
formula a0_n1_rs38_sat_avail = N1_RS38_AVAIL;
formula a0_n1_rs38_sat_all = a0_n1_rs38_sat_avail;

//=====Application 0, Node1 and RS39
formula a0_n1_rs39_sat_dur0 = ( (A0_DUR <= N1_RS39_DUR0) ? true:false);
formula a0_n1_rs39_sat_dur1 = ( (A0_DUR <= N1_RS39_DUR1) ? true:false);
formula a0_n1_rs39_sat_dur2 = ( (A0_DUR <= N1_RS39_DUR2) ? true:false);
formula a0_n1_rs39_sat_dur3 = ( (A0_DUR <= N1_RS39_DUR3) ? true:false);
formula a0_n1_rs39_sat_dur4 = ( (A0_DUR <= N1_RS39_DUR4) ? true:false);
formula a0_n1_rs39_sat_rel0 = ( (A0_DUR <= N1_RS39_REL0) ? true:false);
formula a0_n1_rs39_sat_rel1 = ( (A0_DUR <= N1_RS39_REL1) ? true:false);
formula a0_n1_rs39_sat_rel2 = ( (A0_DUR <= N1_RS39_REL2) ? true:false);
formula a0_n1_rs39_sat_rel3 = ( (A0_DUR <= N1_RS39_REL3) ? true:false);
formula a0_n1_rs39_sat_rel4 = ( (A0_DUR <= N1_RS39_REL4) ? true:false);
formula a0_n1_rs39_sat_cost = ( (A0_COST <= N1_RS39_COST) ? true:false);
formula a0_n1_rs39_sat_avail = N1_RS39_AVAIL;
formula a0_n1_rs39_sat_all = a0_n1_rs39_sat_avail;

//=====Application 0, Node1 and RS40
formula a0_n1_rs40_sat_dur0 = ( (A0_DUR <= N1_RS40_DUR0) ? true:false);
formula a0_n1_rs40_sat_dur1 = ( (A0_DUR <= N1_RS40_DUR1) ? true:false);
formula a0_n1_rs40_sat_dur2 = ( (A0_DUR <= N1_RS40_DUR2) ? true:false);
formula a0_n1_rs40_sat_dur3 = ( (A0_DUR <= N1_RS40_DUR3) ? true:false);
formula a0_n1_rs40_sat_dur4 = ( (A0_DUR <= N1_RS40_DUR4) ? true:false);
formula a0_n1_rs40_sat_rel0 = ( (A0_DUR <= N1_RS40_REL0) ? true:false);
formula a0_n1_rs40_sat_rel1 = ( (A0_DUR <= N1_RS40_REL1) ? true:false);
formula a0_n1_rs40_sat_rel2 = ( (A0_DUR <= N1_RS40_REL2) ? true:false);
formula a0_n1_rs40_sat_rel3 = ( (A0_DUR <= N1_RS40_REL3) ? true:false);
formula a0_n1_rs40_sat_rel4 = ( (A0_DUR <= N1_RS40_REL4) ? true:false);
formula a0_n1_rs40_sat_cost = ( (A0_COST <= N1_RS40_COST) ? true:false);
formula a0_n1_rs40_sat_avail = N1_RS40_AVAIL;
formula a0_n1_rs40_sat_all = a0_n1_rs40_sat_avail;

//=====Application 0, Node1 and RS41
formula a0_n1_rs41_sat_dur0 = ( (A0_DUR <= N1_RS41_DUR0) ? true:false);
formula a0_n1_rs41_sat_dur1 = ( (A0_DUR <= N1_RS41_DUR1) ? true:false);
formula a0_n1_rs41_sat_dur2 = ( (A0_DUR <= N1_RS41_DUR2) ? true:false);
formula a0_n1_rs41_sat_dur3 = ( (A0_DUR <= N1_RS41_DUR3) ? true:false);
formula a0_n1_rs41_sat_dur4 = ( (A0_DUR <= N1_RS41_DUR4) ? true:false);
formula a0_n1_rs41_sat_rel0 = ( (A0_DUR <= N1_RS41_REL0) ? true:false);
formula a0_n1_rs41_sat_rel1 = ( (A0_DUR <= N1_RS41_REL1) ? true:false);
formula a0_n1_rs41_sat_rel2 = ( (A0_DUR <= N1_RS41_REL2) ? true:false);
formula a0_n1_rs41_sat_rel3 = ( (A0_DUR <= N1_RS41_REL3) ? true:false);
formula a0_n1_rs41_sat_rel4 = ( (A0_DUR <= N1_RS41_REL4) ? true:false);
formula a0_n1_rs41_sat_cost = ( (A0_COST <= N1_RS41_COST) ? true:false);
formula a0_n1_rs41_sat_avail = N1_RS41_AVAIL;
formula a0_n1_rs41_sat_all = a0_n1_rs41_sat_avail;

//=====Application 0, Node1 and RS42
formula a0_n1_rs42_sat_dur0 = ( (A0_DUR <= N1_RS42_DUR0) ? true:false);
formula a0_n1_rs42_sat_dur1 = ( (A0_DUR <= N1_RS42_DUR1) ? true:false);
formula a0_n1_rs42_sat_dur2 = ( (A0_DUR <= N1_RS42_DUR2) ? true:false);
formula a0_n1_rs42_sat_dur3 = ( (A0_DUR <= N1_RS42_DUR3) ? true:false);
formula a0_n1_rs42_sat_dur4 = ( (A0_DUR <= N1_RS42_DUR4) ? true:false);
formula a0_n1_rs42_sat_rel0 = ( (A0_DUR <= N1_RS42_REL0) ? true:false);
formula a0_n1_rs42_sat_rel1 = ( (A0_DUR <= N1_RS42_REL1) ? true:false);
formula a0_n1_rs42_sat_rel2 = ( (A0_DUR <= N1_RS42_REL2) ? true:false);
formula a0_n1_rs42_sat_rel3 = ( (A0_DUR <= N1_RS42_REL3) ? true:false);
formula a0_n1_rs42_sat_rel4 = ( (A0_DUR <= N1_RS42_REL4) ? true:false);
formula a0_n1_rs42_sat_cost = ( (A0_COST <= N1_RS42_COST) ? true:false);
formula a0_n1_rs42_sat_avail = N1_RS42_AVAIL;
formula a0_n1_rs42_sat_all = a0_n1_rs42_sat_avail;

//=====Application 0, Node1 and RS43
formula a0_n1_rs43_sat_dur0 = ( (A0_DUR <= N1_RS43_DUR0) ? true:false);
formula a0_n1_rs43_sat_dur1 = ( (A0_DUR <= N1_RS43_DUR1) ? true:false);
formula a0_n1_rs43_sat_dur2 = ( (A0_DUR <= N1_RS43_DUR2) ? true:false);
formula a0_n1_rs43_sat_dur3 = ( (A0_DUR <= N1_RS43_DUR3) ? true:false);
formula a0_n1_rs43_sat_dur4 = ( (A0_DUR <= N1_RS43_DUR4) ? true:false);
formula a0_n1_rs43_sat_rel0 = ( (A0_DUR <= N1_RS43_REL0) ? true:false);
formula a0_n1_rs43_sat_rel1 = ( (A0_DUR <= N1_RS43_REL1) ? true:false);
formula a0_n1_rs43_sat_rel2 = ( (A0_DUR <= N1_RS43_REL2) ? true:false);
formula a0_n1_rs43_sat_rel3 = ( (A0_DUR <= N1_RS43_REL3) ? true:false);
formula a0_n1_rs43_sat_rel4 = ( (A0_DUR <= N1_RS43_REL4) ? true:false);
formula a0_n1_rs43_sat_cost = ( (A0_COST <= N1_RS43_COST) ? true:false);
formula a0_n1_rs43_sat_avail = N1_RS43_AVAIL;
formula a0_n1_rs43_sat_all = a0_n1_rs43_sat_avail;

//=====Application 0, Node1 and RS44
formula a0_n1_rs44_sat_dur0 = ( (A0_DUR <= N1_RS44_DUR0) ? true:false);
formula a0_n1_rs44_sat_dur1 = ( (A0_DUR <= N1_RS44_DUR1) ? true:false);
formula a0_n1_rs44_sat_dur2 = ( (A0_DUR <= N1_RS44_DUR2) ? true:false);
formula a0_n1_rs44_sat_dur3 = ( (A0_DUR <= N1_RS44_DUR3) ? true:false);
formula a0_n1_rs44_sat_dur4 = ( (A0_DUR <= N1_RS44_DUR4) ? true:false);
formula a0_n1_rs44_sat_rel0 = ( (A0_DUR <= N1_RS44_REL0) ? true:false);
formula a0_n1_rs44_sat_rel1 = ( (A0_DUR <= N1_RS44_REL1) ? true:false);
formula a0_n1_rs44_sat_rel2 = ( (A0_DUR <= N1_RS44_REL2) ? true:false);
formula a0_n1_rs44_sat_rel3 = ( (A0_DUR <= N1_RS44_REL3) ? true:false);
formula a0_n1_rs44_sat_rel4 = ( (A0_DUR <= N1_RS44_REL4) ? true:false);
formula a0_n1_rs44_sat_cost = ( (A0_COST <= N1_RS44_COST) ? true:false);
formula a0_n1_rs44_sat_avail = N1_RS44_AVAIL;
formula a0_n1_rs44_sat_all = a0_n1_rs44_sat_avail;

//=====Application 0, Node1 and RS45
formula a0_n1_rs45_sat_dur0 = ( (A0_DUR <= N1_RS45_DUR0) ? true:false);
formula a0_n1_rs45_sat_dur1 = ( (A0_DUR <= N1_RS45_DUR1) ? true:false);
formula a0_n1_rs45_sat_dur2 = ( (A0_DUR <= N1_RS45_DUR2) ? true:false);
formula a0_n1_rs45_sat_dur3 = ( (A0_DUR <= N1_RS45_DUR3) ? true:false);
formula a0_n1_rs45_sat_dur4 = ( (A0_DUR <= N1_RS45_DUR4) ? true:false);
formula a0_n1_rs45_sat_rel0 = ( (A0_DUR <= N1_RS45_REL0) ? true:false);
formula a0_n1_rs45_sat_rel1 = ( (A0_DUR <= N1_RS45_REL1) ? true:false);
formula a0_n1_rs45_sat_rel2 = ( (A0_DUR <= N1_RS45_REL2) ? true:false);
formula a0_n1_rs45_sat_rel3 = ( (A0_DUR <= N1_RS45_REL3) ? true:false);
formula a0_n1_rs45_sat_rel4 = ( (A0_DUR <= N1_RS45_REL4) ? true:false);
formula a0_n1_rs45_sat_cost = ( (A0_COST <= N1_RS45_COST) ? true:false);
formula a0_n1_rs45_sat_avail = N1_RS45_AVAIL;
formula a0_n1_rs45_sat_all = a0_n1_rs45_sat_avail;

//=====Application 0, Node1 and RS46
formula a0_n1_rs46_sat_dur0 = ( (A0_DUR <= N1_RS46_DUR0) ? true:false);
formula a0_n1_rs46_sat_dur1 = ( (A0_DUR <= N1_RS46_DUR1) ? true:false);
formula a0_n1_rs46_sat_dur2 = ( (A0_DUR <= N1_RS46_DUR2) ? true:false);
formula a0_n1_rs46_sat_dur3 = ( (A0_DUR <= N1_RS46_DUR3) ? true:false);
formula a0_n1_rs46_sat_dur4 = ( (A0_DUR <= N1_RS46_DUR4) ? true:false);
formula a0_n1_rs46_sat_rel0 = ( (A0_DUR <= N1_RS46_REL0) ? true:false);
formula a0_n1_rs46_sat_rel1 = ( (A0_DUR <= N1_RS46_REL1) ? true:false);
formula a0_n1_rs46_sat_rel2 = ( (A0_DUR <= N1_RS46_REL2) ? true:false);
formula a0_n1_rs46_sat_rel3 = ( (A0_DUR <= N1_RS46_REL3) ? true:false);
formula a0_n1_rs46_sat_rel4 = ( (A0_DUR <= N1_RS46_REL4) ? true:false);
formula a0_n1_rs46_sat_cost = ( (A0_COST <= N1_RS46_COST) ? true:false);
formula a0_n1_rs46_sat_avail = N1_RS46_AVAIL;
formula a0_n1_rs46_sat_all = a0_n1_rs46_sat_avail;

//=====Application 0, Node1 and RS47
formula a0_n1_rs47_sat_dur0 = ( (A0_DUR <= N1_RS47_DUR0) ? true:false);
formula a0_n1_rs47_sat_dur1 = ( (A0_DUR <= N1_RS47_DUR1) ? true:false);
formula a0_n1_rs47_sat_dur2 = ( (A0_DUR <= N1_RS47_DUR2) ? true:false);
formula a0_n1_rs47_sat_dur3 = ( (A0_DUR <= N1_RS47_DUR3) ? true:false);
formula a0_n1_rs47_sat_dur4 = ( (A0_DUR <= N1_RS47_DUR4) ? true:false);
formula a0_n1_rs47_sat_rel0 = ( (A0_DUR <= N1_RS47_REL0) ? true:false);
formula a0_n1_rs47_sat_rel1 = ( (A0_DUR <= N1_RS47_REL1) ? true:false);
formula a0_n1_rs47_sat_rel2 = ( (A0_DUR <= N1_RS47_REL2) ? true:false);
formula a0_n1_rs47_sat_rel3 = ( (A0_DUR <= N1_RS47_REL3) ? true:false);
formula a0_n1_rs47_sat_rel4 = ( (A0_DUR <= N1_RS47_REL4) ? true:false);
formula a0_n1_rs47_sat_cost = ( (A0_COST <= N1_RS47_COST) ? true:false);
formula a0_n1_rs47_sat_avail = N1_RS47_AVAIL;
formula a0_n1_rs47_sat_all = a0_n1_rs47_sat_avail;

//=====Application 0, Node1 and RS48
formula a0_n1_rs48_sat_dur0 = ( (A0_DUR <= N1_RS48_DUR0) ? true:false);
formula a0_n1_rs48_sat_dur1 = ( (A0_DUR <= N1_RS48_DUR1) ? true:false);
formula a0_n1_rs48_sat_dur2 = ( (A0_DUR <= N1_RS48_DUR2) ? true:false);
formula a0_n1_rs48_sat_dur3 = ( (A0_DUR <= N1_RS48_DUR3) ? true:false);
formula a0_n1_rs48_sat_dur4 = ( (A0_DUR <= N1_RS48_DUR4) ? true:false);
formula a0_n1_rs48_sat_rel0 = ( (A0_DUR <= N1_RS48_REL0) ? true:false);
formula a0_n1_rs48_sat_rel1 = ( (A0_DUR <= N1_RS48_REL1) ? true:false);
formula a0_n1_rs48_sat_rel2 = ( (A0_DUR <= N1_RS48_REL2) ? true:false);
formula a0_n1_rs48_sat_rel3 = ( (A0_DUR <= N1_RS48_REL3) ? true:false);
formula a0_n1_rs48_sat_rel4 = ( (A0_DUR <= N1_RS48_REL4) ? true:false);
formula a0_n1_rs48_sat_cost = ( (A0_COST <= N1_RS48_COST) ? true:false);
formula a0_n1_rs48_sat_avail = N1_RS48_AVAIL;
formula a0_n1_rs48_sat_all = a0_n1_rs48_sat_avail;

//=====Application 0, Node1 and RS49
formula a0_n1_rs49_sat_dur0 = ( (A0_DUR <= N1_RS49_DUR0) ? true:false);
formula a0_n1_rs49_sat_dur1 = ( (A0_DUR <= N1_RS49_DUR1) ? true:false);
formula a0_n1_rs49_sat_dur2 = ( (A0_DUR <= N1_RS49_DUR2) ? true:false);
formula a0_n1_rs49_sat_dur3 = ( (A0_DUR <= N1_RS49_DUR3) ? true:false);
formula a0_n1_rs49_sat_dur4 = ( (A0_DUR <= N1_RS49_DUR4) ? true:false);
formula a0_n1_rs49_sat_rel0 = ( (A0_DUR <= N1_RS49_REL0) ? true:false);
formula a0_n1_rs49_sat_rel1 = ( (A0_DUR <= N1_RS49_REL1) ? true:false);
formula a0_n1_rs49_sat_rel2 = ( (A0_DUR <= N1_RS49_REL2) ? true:false);
formula a0_n1_rs49_sat_rel3 = ( (A0_DUR <= N1_RS49_REL3) ? true:false);
formula a0_n1_rs49_sat_rel4 = ( (A0_DUR <= N1_RS49_REL4) ? true:false);
formula a0_n1_rs49_sat_cost = ( (A0_COST <= N1_RS49_COST) ? true:false);
formula a0_n1_rs49_sat_avail = N1_RS49_AVAIL;
formula a0_n1_rs49_sat_all = a0_n1_rs49_sat_avail;


//=========Utility-based Decision Making=======
//get the cost of selected node..
formula n0_rs_cost =( n0 = 0 ? N0_RS0_COST :( n0 = 1 ? N0_RS1_COST :( n0 = 2 ? N0_RS2_COST :( n0 = 3 ? N0_RS3_COST :( n0 = 4 ? N0_RS4_COST :( n0 = 5 ? N0_RS5_COST :( n0 = 6 ? N0_RS6_COST :( n0 = 7 ? N0_RS7_COST :( n0 = 8 ? N0_RS8_COST :( n0 = 9 ? N0_RS9_COST :( n0 = 10 ? N0_RS10_COST :( n0 = 11 ? N0_RS11_COST :( n0 = 12 ? N0_RS12_COST :( n0 = 13 ? N0_RS13_COST :( n0 = 14 ? N0_RS14_COST :( n0 = 15 ? N0_RS15_COST :( n0 = 16 ? N0_RS16_COST :( n0 = 17 ? N0_RS17_COST :( n0 = 18 ? N0_RS18_COST :( n0 = 19 ? N0_RS19_COST :( n0 = 20 ? N0_RS20_COST :( n0 = 21 ? N0_RS21_COST :( n0 = 22 ? N0_RS22_COST :( n0 = 23 ? N0_RS23_COST :( n0 = 24 ? N0_RS24_COST :( n0 = 25 ? N0_RS25_COST :( n0 = 26 ? N0_RS26_COST :( n0 = 27 ? N0_RS27_COST :( n0 = 28 ? N0_RS28_COST :( n0 = 29 ? N0_RS29_COST :( n0 = 30 ? N0_RS30_COST :( n0 = 31 ? N0_RS31_COST :( n0 = 32 ? N0_RS32_COST :( n0 = 33 ? N0_RS33_COST :( n0 = 34 ? N0_RS34_COST :( n0 = 35 ? N0_RS35_COST :( n0 = 36 ? N0_RS36_COST :( n0 = 37 ? N0_RS37_COST :( n0 = 38 ? N0_RS38_COST :( n0 = 39 ? N0_RS39_COST :( n0 = 40 ? N0_RS40_COST :( n0 = 41 ? N0_RS41_COST :( n0 = 42 ? N0_RS42_COST :( n0 = 43 ? N0_RS43_COST :( n0 = 44 ? N0_RS44_COST :( n0 = 45 ? N0_RS45_COST :( n0 = 46 ? N0_RS46_COST :( n0 = 47 ? N0_RS47_COST :( n0 = 48 ? N0_RS48_COST :( n0 = 49 ? N0_RS49_COST :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_cost = max(N0_RS0_COST,N0_RS1_COST,N0_RS2_COST,N0_RS3_COST,N0_RS4_COST,N0_RS5_COST,N0_RS6_COST,N0_RS7_COST,N0_RS8_COST,N0_RS9_COST,N0_RS10_COST,N0_RS11_COST,N0_RS12_COST,N0_RS13_COST,N0_RS14_COST,N0_RS15_COST,N0_RS16_COST,N0_RS17_COST,N0_RS18_COST,N0_RS19_COST,N0_RS20_COST,N0_RS21_COST,N0_RS22_COST,N0_RS23_COST,N0_RS24_COST,N0_RS25_COST,N0_RS26_COST,N0_RS27_COST,N0_RS28_COST,N0_RS29_COST,N0_RS30_COST,N0_RS31_COST,N0_RS32_COST,N0_RS33_COST,N0_RS34_COST,N0_RS35_COST,N0_RS36_COST,N0_RS37_COST,N0_RS38_COST,N0_RS39_COST,N0_RS40_COST,N0_RS41_COST,N0_RS42_COST,N0_RS43_COST,N0_RS44_COST,N0_RS45_COST,N0_RS46_COST,N0_RS47_COST,N0_RS48_COST,N0_RS49_COST);
formula n0_mn_cost = min(N0_RS0_COST,N0_RS1_COST,N0_RS2_COST,N0_RS3_COST,N0_RS4_COST,N0_RS5_COST,N0_RS6_COST,N0_RS7_COST,N0_RS8_COST,N0_RS9_COST,N0_RS10_COST,N0_RS11_COST,N0_RS12_COST,N0_RS13_COST,N0_RS14_COST,N0_RS15_COST,N0_RS16_COST,N0_RS17_COST,N0_RS18_COST,N0_RS19_COST,N0_RS20_COST,N0_RS21_COST,N0_RS22_COST,N0_RS23_COST,N0_RS24_COST,N0_RS25_COST,N0_RS26_COST,N0_RS27_COST,N0_RS28_COST,N0_RS29_COST,N0_RS30_COST,N0_RS31_COST,N0_RS32_COST,N0_RS33_COST,N0_RS34_COST,N0_RS35_COST,N0_RS36_COST,N0_RS37_COST,N0_RS38_COST,N0_RS39_COST,N0_RS40_COST,N0_RS41_COST,N0_RS42_COST,N0_RS43_COST,N0_RS44_COST,N0_RS45_COST,N0_RS46_COST,N0_RS47_COST,N0_RS48_COST,N0_RS49_COST);
formula n0_uv_cost = (n0_mx_cost - n0_rs_cost) / (n0_mx_cost - n0_mn_cost);

//get the duration of selected node..
formula n0_rs_dur0=( (n0 = 0 & n0ev = 0) ? N0_RS0_DUR0 :( (n0 = 1 & n0ev = 0) ? N0_RS1_DUR0 :( (n0 = 2 & n0ev = 0) ? N0_RS2_DUR0 :( (n0 = 3 & n0ev = 0) ? N0_RS3_DUR0 :( (n0 = 4 & n0ev = 0) ? N0_RS4_DUR0 :( (n0 = 5 & n0ev = 0) ? N0_RS5_DUR0 :( (n0 = 6 & n0ev = 0) ? N0_RS6_DUR0 :( (n0 = 7 & n0ev = 0) ? N0_RS7_DUR0 :( (n0 = 8 & n0ev = 0) ? N0_RS8_DUR0 :( (n0 = 9 & n0ev = 0) ? N0_RS9_DUR0 :( (n0 = 10 & n0ev = 0) ? N0_RS10_DUR0 :( (n0 = 11 & n0ev = 0) ? N0_RS11_DUR0 :( (n0 = 12 & n0ev = 0) ? N0_RS12_DUR0 :( (n0 = 13 & n0ev = 0) ? N0_RS13_DUR0 :( (n0 = 14 & n0ev = 0) ? N0_RS14_DUR0 :( (n0 = 15 & n0ev = 0) ? N0_RS15_DUR0 :( (n0 = 16 & n0ev = 0) ? N0_RS16_DUR0 :( (n0 = 17 & n0ev = 0) ? N0_RS17_DUR0 :( (n0 = 18 & n0ev = 0) ? N0_RS18_DUR0 :( (n0 = 19 & n0ev = 0) ? N0_RS19_DUR0 :( (n0 = 20 & n0ev = 0) ? N0_RS20_DUR0 :( (n0 = 21 & n0ev = 0) ? N0_RS21_DUR0 :( (n0 = 22 & n0ev = 0) ? N0_RS22_DUR0 :( (n0 = 23 & n0ev = 0) ? N0_RS23_DUR0 :( (n0 = 24 & n0ev = 0) ? N0_RS24_DUR0 :( (n0 = 25 & n0ev = 0) ? N0_RS25_DUR0 :( (n0 = 26 & n0ev = 0) ? N0_RS26_DUR0 :( (n0 = 27 & n0ev = 0) ? N0_RS27_DUR0 :( (n0 = 28 & n0ev = 0) ? N0_RS28_DUR0 :( (n0 = 29 & n0ev = 0) ? N0_RS29_DUR0 :( (n0 = 30 & n0ev = 0) ? N0_RS30_DUR0 :( (n0 = 31 & n0ev = 0) ? N0_RS31_DUR0 :( (n0 = 32 & n0ev = 0) ? N0_RS32_DUR0 :( (n0 = 33 & n0ev = 0) ? N0_RS33_DUR0 :( (n0 = 34 & n0ev = 0) ? N0_RS34_DUR0 :( (n0 = 35 & n0ev = 0) ? N0_RS35_DUR0 :( (n0 = 36 & n0ev = 0) ? N0_RS36_DUR0 :( (n0 = 37 & n0ev = 0) ? N0_RS37_DUR0 :( (n0 = 38 & n0ev = 0) ? N0_RS38_DUR0 :( (n0 = 39 & n0ev = 0) ? N0_RS39_DUR0 :( (n0 = 40 & n0ev = 0) ? N0_RS40_DUR0 :( (n0 = 41 & n0ev = 0) ? N0_RS41_DUR0 :( (n0 = 42 & n0ev = 0) ? N0_RS42_DUR0 :( (n0 = 43 & n0ev = 0) ? N0_RS43_DUR0 :( (n0 = 44 & n0ev = 0) ? N0_RS44_DUR0 :( (n0 = 45 & n0ev = 0) ? N0_RS45_DUR0 :( (n0 = 46 & n0ev = 0) ? N0_RS46_DUR0 :( (n0 = 47 & n0ev = 0) ? N0_RS47_DUR0 :( (n0 = 48 & n0ev = 0) ? N0_RS48_DUR0 :( (n0 = 49 & n0ev = 0) ? N0_RS49_DUR0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_dur0 = max(N0_RS0_DUR0,N0_RS1_DUR0,N0_RS2_DUR0,N0_RS3_DUR0,N0_RS4_DUR0,N0_RS5_DUR0,N0_RS6_DUR0,N0_RS7_DUR0,N0_RS8_DUR0,N0_RS9_DUR0,N0_RS10_DUR0,N0_RS11_DUR0,N0_RS12_DUR0,N0_RS13_DUR0,N0_RS14_DUR0,N0_RS15_DUR0,N0_RS16_DUR0,N0_RS17_DUR0,N0_RS18_DUR0,N0_RS19_DUR0,N0_RS20_DUR0,N0_RS21_DUR0,N0_RS22_DUR0,N0_RS23_DUR0,N0_RS24_DUR0,N0_RS25_DUR0,N0_RS26_DUR0,N0_RS27_DUR0,N0_RS28_DUR0,N0_RS29_DUR0,N0_RS30_DUR0,N0_RS31_DUR0,N0_RS32_DUR0,N0_RS33_DUR0,N0_RS34_DUR0,N0_RS35_DUR0,N0_RS36_DUR0,N0_RS37_DUR0,N0_RS38_DUR0,N0_RS39_DUR0,N0_RS40_DUR0,N0_RS41_DUR0,N0_RS42_DUR0,N0_RS43_DUR0,N0_RS44_DUR0,N0_RS45_DUR0,N0_RS46_DUR0,N0_RS47_DUR0,N0_RS48_DUR0,N0_RS49_DUR0);
formula n0_mn_dur0 = min(N0_RS0_DUR0,N0_RS1_DUR0,N0_RS2_DUR0,N0_RS3_DUR0,N0_RS4_DUR0,N0_RS5_DUR0,N0_RS6_DUR0,N0_RS7_DUR0,N0_RS8_DUR0,N0_RS9_DUR0,N0_RS10_DUR0,N0_RS11_DUR0,N0_RS12_DUR0,N0_RS13_DUR0,N0_RS14_DUR0,N0_RS15_DUR0,N0_RS16_DUR0,N0_RS17_DUR0,N0_RS18_DUR0,N0_RS19_DUR0,N0_RS20_DUR0,N0_RS21_DUR0,N0_RS22_DUR0,N0_RS23_DUR0,N0_RS24_DUR0,N0_RS25_DUR0,N0_RS26_DUR0,N0_RS27_DUR0,N0_RS28_DUR0,N0_RS29_DUR0,N0_RS30_DUR0,N0_RS31_DUR0,N0_RS32_DUR0,N0_RS33_DUR0,N0_RS34_DUR0,N0_RS35_DUR0,N0_RS36_DUR0,N0_RS37_DUR0,N0_RS38_DUR0,N0_RS39_DUR0,N0_RS40_DUR0,N0_RS41_DUR0,N0_RS42_DUR0,N0_RS43_DUR0,N0_RS44_DUR0,N0_RS45_DUR0,N0_RS46_DUR0,N0_RS47_DUR0,N0_RS48_DUR0,N0_RS49_DUR0);
formula n0_uv_dur0 = (n0_mx_dur0 - n0_rs_dur0) / (n0_mx_dur0 - n0_mn_dur0);

formula n0_rs_dur1=( (n0 = 0 & n0ev = 1) ? N0_RS0_DUR1 :( (n0 = 1 & n0ev = 1) ? N0_RS1_DUR1 :( (n0 = 2 & n0ev = 1) ? N0_RS2_DUR1 :( (n0 = 3 & n0ev = 1) ? N0_RS3_DUR1 :( (n0 = 4 & n0ev = 1) ? N0_RS4_DUR1 :( (n0 = 5 & n0ev = 1) ? N0_RS5_DUR1 :( (n0 = 6 & n0ev = 1) ? N0_RS6_DUR1 :( (n0 = 7 & n0ev = 1) ? N0_RS7_DUR1 :( (n0 = 8 & n0ev = 1) ? N0_RS8_DUR1 :( (n0 = 9 & n0ev = 1) ? N0_RS9_DUR1 :( (n0 = 10 & n0ev = 1) ? N0_RS10_DUR1 :( (n0 = 11 & n0ev = 1) ? N0_RS11_DUR1 :( (n0 = 12 & n0ev = 1) ? N0_RS12_DUR1 :( (n0 = 13 & n0ev = 1) ? N0_RS13_DUR1 :( (n0 = 14 & n0ev = 1) ? N0_RS14_DUR1 :( (n0 = 15 & n0ev = 1) ? N0_RS15_DUR1 :( (n0 = 16 & n0ev = 1) ? N0_RS16_DUR1 :( (n0 = 17 & n0ev = 1) ? N0_RS17_DUR1 :( (n0 = 18 & n0ev = 1) ? N0_RS18_DUR1 :( (n0 = 19 & n0ev = 1) ? N0_RS19_DUR1 :( (n0 = 20 & n0ev = 1) ? N0_RS20_DUR1 :( (n0 = 21 & n0ev = 1) ? N0_RS21_DUR1 :( (n0 = 22 & n0ev = 1) ? N0_RS22_DUR1 :( (n0 = 23 & n0ev = 1) ? N0_RS23_DUR1 :( (n0 = 24 & n0ev = 1) ? N0_RS24_DUR1 :( (n0 = 25 & n0ev = 1) ? N0_RS25_DUR1 :( (n0 = 26 & n0ev = 1) ? N0_RS26_DUR1 :( (n0 = 27 & n0ev = 1) ? N0_RS27_DUR1 :( (n0 = 28 & n0ev = 1) ? N0_RS28_DUR1 :( (n0 = 29 & n0ev = 1) ? N0_RS29_DUR1 :( (n0 = 30 & n0ev = 1) ? N0_RS30_DUR1 :( (n0 = 31 & n0ev = 1) ? N0_RS31_DUR1 :( (n0 = 32 & n0ev = 1) ? N0_RS32_DUR1 :( (n0 = 33 & n0ev = 1) ? N0_RS33_DUR1 :( (n0 = 34 & n0ev = 1) ? N0_RS34_DUR1 :( (n0 = 35 & n0ev = 1) ? N0_RS35_DUR1 :( (n0 = 36 & n0ev = 1) ? N0_RS36_DUR1 :( (n0 = 37 & n0ev = 1) ? N0_RS37_DUR1 :( (n0 = 38 & n0ev = 1) ? N0_RS38_DUR1 :( (n0 = 39 & n0ev = 1) ? N0_RS39_DUR1 :( (n0 = 40 & n0ev = 1) ? N0_RS40_DUR1 :( (n0 = 41 & n0ev = 1) ? N0_RS41_DUR1 :( (n0 = 42 & n0ev = 1) ? N0_RS42_DUR1 :( (n0 = 43 & n0ev = 1) ? N0_RS43_DUR1 :( (n0 = 44 & n0ev = 1) ? N0_RS44_DUR1 :( (n0 = 45 & n0ev = 1) ? N0_RS45_DUR1 :( (n0 = 46 & n0ev = 1) ? N0_RS46_DUR1 :( (n0 = 47 & n0ev = 1) ? N0_RS47_DUR1 :( (n0 = 48 & n0ev = 1) ? N0_RS48_DUR1 :( (n0 = 49 & n0ev = 1) ? N0_RS49_DUR1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_dur1 = max(N0_RS0_DUR1,N0_RS1_DUR1,N0_RS2_DUR1,N0_RS3_DUR1,N0_RS4_DUR1,N0_RS5_DUR1,N0_RS6_DUR1,N0_RS7_DUR1,N0_RS8_DUR1,N0_RS9_DUR1,N0_RS10_DUR1,N0_RS11_DUR1,N0_RS12_DUR1,N0_RS13_DUR1,N0_RS14_DUR1,N0_RS15_DUR1,N0_RS16_DUR1,N0_RS17_DUR1,N0_RS18_DUR1,N0_RS19_DUR1,N0_RS20_DUR1,N0_RS21_DUR1,N0_RS22_DUR1,N0_RS23_DUR1,N0_RS24_DUR1,N0_RS25_DUR1,N0_RS26_DUR1,N0_RS27_DUR1,N0_RS28_DUR1,N0_RS29_DUR1,N0_RS30_DUR1,N0_RS31_DUR1,N0_RS32_DUR1,N0_RS33_DUR1,N0_RS34_DUR1,N0_RS35_DUR1,N0_RS36_DUR1,N0_RS37_DUR1,N0_RS38_DUR1,N0_RS39_DUR1,N0_RS40_DUR1,N0_RS41_DUR1,N0_RS42_DUR1,N0_RS43_DUR1,N0_RS44_DUR1,N0_RS45_DUR1,N0_RS46_DUR1,N0_RS47_DUR1,N0_RS48_DUR1,N0_RS49_DUR1);
formula n0_mn_dur1 = min(N0_RS0_DUR1,N0_RS1_DUR1,N0_RS2_DUR1,N0_RS3_DUR1,N0_RS4_DUR1,N0_RS5_DUR1,N0_RS6_DUR1,N0_RS7_DUR1,N0_RS8_DUR1,N0_RS9_DUR1,N0_RS10_DUR1,N0_RS11_DUR1,N0_RS12_DUR1,N0_RS13_DUR1,N0_RS14_DUR1,N0_RS15_DUR1,N0_RS16_DUR1,N0_RS17_DUR1,N0_RS18_DUR1,N0_RS19_DUR1,N0_RS20_DUR1,N0_RS21_DUR1,N0_RS22_DUR1,N0_RS23_DUR1,N0_RS24_DUR1,N0_RS25_DUR1,N0_RS26_DUR1,N0_RS27_DUR1,N0_RS28_DUR1,N0_RS29_DUR1,N0_RS30_DUR1,N0_RS31_DUR1,N0_RS32_DUR1,N0_RS33_DUR1,N0_RS34_DUR1,N0_RS35_DUR1,N0_RS36_DUR1,N0_RS37_DUR1,N0_RS38_DUR1,N0_RS39_DUR1,N0_RS40_DUR1,N0_RS41_DUR1,N0_RS42_DUR1,N0_RS43_DUR1,N0_RS44_DUR1,N0_RS45_DUR1,N0_RS46_DUR1,N0_RS47_DUR1,N0_RS48_DUR1,N0_RS49_DUR1);
formula n0_uv_dur1 = (n0_mx_dur1 - n0_rs_dur1) / (n0_mx_dur1 - n0_mn_dur1);

formula n0_rs_dur2=( (n0 = 0 & n0ev = 2) ? N0_RS0_DUR2 :( (n0 = 1 & n0ev = 2) ? N0_RS1_DUR2 :( (n0 = 2 & n0ev = 2) ? N0_RS2_DUR2 :( (n0 = 3 & n0ev = 2) ? N0_RS3_DUR2 :( (n0 = 4 & n0ev = 2) ? N0_RS4_DUR2 :( (n0 = 5 & n0ev = 2) ? N0_RS5_DUR2 :( (n0 = 6 & n0ev = 2) ? N0_RS6_DUR2 :( (n0 = 7 & n0ev = 2) ? N0_RS7_DUR2 :( (n0 = 8 & n0ev = 2) ? N0_RS8_DUR2 :( (n0 = 9 & n0ev = 2) ? N0_RS9_DUR2 :( (n0 = 10 & n0ev = 2) ? N0_RS10_DUR2 :( (n0 = 11 & n0ev = 2) ? N0_RS11_DUR2 :( (n0 = 12 & n0ev = 2) ? N0_RS12_DUR2 :( (n0 = 13 & n0ev = 2) ? N0_RS13_DUR2 :( (n0 = 14 & n0ev = 2) ? N0_RS14_DUR2 :( (n0 = 15 & n0ev = 2) ? N0_RS15_DUR2 :( (n0 = 16 & n0ev = 2) ? N0_RS16_DUR2 :( (n0 = 17 & n0ev = 2) ? N0_RS17_DUR2 :( (n0 = 18 & n0ev = 2) ? N0_RS18_DUR2 :( (n0 = 19 & n0ev = 2) ? N0_RS19_DUR2 :( (n0 = 20 & n0ev = 2) ? N0_RS20_DUR2 :( (n0 = 21 & n0ev = 2) ? N0_RS21_DUR2 :( (n0 = 22 & n0ev = 2) ? N0_RS22_DUR2 :( (n0 = 23 & n0ev = 2) ? N0_RS23_DUR2 :( (n0 = 24 & n0ev = 2) ? N0_RS24_DUR2 :( (n0 = 25 & n0ev = 2) ? N0_RS25_DUR2 :( (n0 = 26 & n0ev = 2) ? N0_RS26_DUR2 :( (n0 = 27 & n0ev = 2) ? N0_RS27_DUR2 :( (n0 = 28 & n0ev = 2) ? N0_RS28_DUR2 :( (n0 = 29 & n0ev = 2) ? N0_RS29_DUR2 :( (n0 = 30 & n0ev = 2) ? N0_RS30_DUR2 :( (n0 = 31 & n0ev = 2) ? N0_RS31_DUR2 :( (n0 = 32 & n0ev = 2) ? N0_RS32_DUR2 :( (n0 = 33 & n0ev = 2) ? N0_RS33_DUR2 :( (n0 = 34 & n0ev = 2) ? N0_RS34_DUR2 :( (n0 = 35 & n0ev = 2) ? N0_RS35_DUR2 :( (n0 = 36 & n0ev = 2) ? N0_RS36_DUR2 :( (n0 = 37 & n0ev = 2) ? N0_RS37_DUR2 :( (n0 = 38 & n0ev = 2) ? N0_RS38_DUR2 :( (n0 = 39 & n0ev = 2) ? N0_RS39_DUR2 :( (n0 = 40 & n0ev = 2) ? N0_RS40_DUR2 :( (n0 = 41 & n0ev = 2) ? N0_RS41_DUR2 :( (n0 = 42 & n0ev = 2) ? N0_RS42_DUR2 :( (n0 = 43 & n0ev = 2) ? N0_RS43_DUR2 :( (n0 = 44 & n0ev = 2) ? N0_RS44_DUR2 :( (n0 = 45 & n0ev = 2) ? N0_RS45_DUR2 :( (n0 = 46 & n0ev = 2) ? N0_RS46_DUR2 :( (n0 = 47 & n0ev = 2) ? N0_RS47_DUR2 :( (n0 = 48 & n0ev = 2) ? N0_RS48_DUR2 :( (n0 = 49 & n0ev = 2) ? N0_RS49_DUR2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_dur2 = max(N0_RS0_DUR2,N0_RS1_DUR2,N0_RS2_DUR2,N0_RS3_DUR2,N0_RS4_DUR2,N0_RS5_DUR2,N0_RS6_DUR2,N0_RS7_DUR2,N0_RS8_DUR2,N0_RS9_DUR2,N0_RS10_DUR2,N0_RS11_DUR2,N0_RS12_DUR2,N0_RS13_DUR2,N0_RS14_DUR2,N0_RS15_DUR2,N0_RS16_DUR2,N0_RS17_DUR2,N0_RS18_DUR2,N0_RS19_DUR2,N0_RS20_DUR2,N0_RS21_DUR2,N0_RS22_DUR2,N0_RS23_DUR2,N0_RS24_DUR2,N0_RS25_DUR2,N0_RS26_DUR2,N0_RS27_DUR2,N0_RS28_DUR2,N0_RS29_DUR2,N0_RS30_DUR2,N0_RS31_DUR2,N0_RS32_DUR2,N0_RS33_DUR2,N0_RS34_DUR2,N0_RS35_DUR2,N0_RS36_DUR2,N0_RS37_DUR2,N0_RS38_DUR2,N0_RS39_DUR2,N0_RS40_DUR2,N0_RS41_DUR2,N0_RS42_DUR2,N0_RS43_DUR2,N0_RS44_DUR2,N0_RS45_DUR2,N0_RS46_DUR2,N0_RS47_DUR2,N0_RS48_DUR2,N0_RS49_DUR2);
formula n0_mn_dur2 = min(N0_RS0_DUR2,N0_RS1_DUR2,N0_RS2_DUR2,N0_RS3_DUR2,N0_RS4_DUR2,N0_RS5_DUR2,N0_RS6_DUR2,N0_RS7_DUR2,N0_RS8_DUR2,N0_RS9_DUR2,N0_RS10_DUR2,N0_RS11_DUR2,N0_RS12_DUR2,N0_RS13_DUR2,N0_RS14_DUR2,N0_RS15_DUR2,N0_RS16_DUR2,N0_RS17_DUR2,N0_RS18_DUR2,N0_RS19_DUR2,N0_RS20_DUR2,N0_RS21_DUR2,N0_RS22_DUR2,N0_RS23_DUR2,N0_RS24_DUR2,N0_RS25_DUR2,N0_RS26_DUR2,N0_RS27_DUR2,N0_RS28_DUR2,N0_RS29_DUR2,N0_RS30_DUR2,N0_RS31_DUR2,N0_RS32_DUR2,N0_RS33_DUR2,N0_RS34_DUR2,N0_RS35_DUR2,N0_RS36_DUR2,N0_RS37_DUR2,N0_RS38_DUR2,N0_RS39_DUR2,N0_RS40_DUR2,N0_RS41_DUR2,N0_RS42_DUR2,N0_RS43_DUR2,N0_RS44_DUR2,N0_RS45_DUR2,N0_RS46_DUR2,N0_RS47_DUR2,N0_RS48_DUR2,N0_RS49_DUR2);
formula n0_uv_dur2 = (n0_mx_dur2 - n0_rs_dur2) / (n0_mx_dur2 - n0_mn_dur2);

formula n0_rs_dur3=( (n0 = 0 & n0ev = 3) ? N0_RS0_DUR3 :( (n0 = 1 & n0ev = 3) ? N0_RS1_DUR3 :( (n0 = 2 & n0ev = 3) ? N0_RS2_DUR3 :( (n0 = 3 & n0ev = 3) ? N0_RS3_DUR3 :( (n0 = 4 & n0ev = 3) ? N0_RS4_DUR3 :( (n0 = 5 & n0ev = 3) ? N0_RS5_DUR3 :( (n0 = 6 & n0ev = 3) ? N0_RS6_DUR3 :( (n0 = 7 & n0ev = 3) ? N0_RS7_DUR3 :( (n0 = 8 & n0ev = 3) ? N0_RS8_DUR3 :( (n0 = 9 & n0ev = 3) ? N0_RS9_DUR3 :( (n0 = 10 & n0ev = 3) ? N0_RS10_DUR3 :( (n0 = 11 & n0ev = 3) ? N0_RS11_DUR3 :( (n0 = 12 & n0ev = 3) ? N0_RS12_DUR3 :( (n0 = 13 & n0ev = 3) ? N0_RS13_DUR3 :( (n0 = 14 & n0ev = 3) ? N0_RS14_DUR3 :( (n0 = 15 & n0ev = 3) ? N0_RS15_DUR3 :( (n0 = 16 & n0ev = 3) ? N0_RS16_DUR3 :( (n0 = 17 & n0ev = 3) ? N0_RS17_DUR3 :( (n0 = 18 & n0ev = 3) ? N0_RS18_DUR3 :( (n0 = 19 & n0ev = 3) ? N0_RS19_DUR3 :( (n0 = 20 & n0ev = 3) ? N0_RS20_DUR3 :( (n0 = 21 & n0ev = 3) ? N0_RS21_DUR3 :( (n0 = 22 & n0ev = 3) ? N0_RS22_DUR3 :( (n0 = 23 & n0ev = 3) ? N0_RS23_DUR3 :( (n0 = 24 & n0ev = 3) ? N0_RS24_DUR3 :( (n0 = 25 & n0ev = 3) ? N0_RS25_DUR3 :( (n0 = 26 & n0ev = 3) ? N0_RS26_DUR3 :( (n0 = 27 & n0ev = 3) ? N0_RS27_DUR3 :( (n0 = 28 & n0ev = 3) ? N0_RS28_DUR3 :( (n0 = 29 & n0ev = 3) ? N0_RS29_DUR3 :( (n0 = 30 & n0ev = 3) ? N0_RS30_DUR3 :( (n0 = 31 & n0ev = 3) ? N0_RS31_DUR3 :( (n0 = 32 & n0ev = 3) ? N0_RS32_DUR3 :( (n0 = 33 & n0ev = 3) ? N0_RS33_DUR3 :( (n0 = 34 & n0ev = 3) ? N0_RS34_DUR3 :( (n0 = 35 & n0ev = 3) ? N0_RS35_DUR3 :( (n0 = 36 & n0ev = 3) ? N0_RS36_DUR3 :( (n0 = 37 & n0ev = 3) ? N0_RS37_DUR3 :( (n0 = 38 & n0ev = 3) ? N0_RS38_DUR3 :( (n0 = 39 & n0ev = 3) ? N0_RS39_DUR3 :( (n0 = 40 & n0ev = 3) ? N0_RS40_DUR3 :( (n0 = 41 & n0ev = 3) ? N0_RS41_DUR3 :( (n0 = 42 & n0ev = 3) ? N0_RS42_DUR3 :( (n0 = 43 & n0ev = 3) ? N0_RS43_DUR3 :( (n0 = 44 & n0ev = 3) ? N0_RS44_DUR3 :( (n0 = 45 & n0ev = 3) ? N0_RS45_DUR3 :( (n0 = 46 & n0ev = 3) ? N0_RS46_DUR3 :( (n0 = 47 & n0ev = 3) ? N0_RS47_DUR3 :( (n0 = 48 & n0ev = 3) ? N0_RS48_DUR3 :( (n0 = 49 & n0ev = 3) ? N0_RS49_DUR3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_dur3 = max(N0_RS0_DUR3,N0_RS1_DUR3,N0_RS2_DUR3,N0_RS3_DUR3,N0_RS4_DUR3,N0_RS5_DUR3,N0_RS6_DUR3,N0_RS7_DUR3,N0_RS8_DUR3,N0_RS9_DUR3,N0_RS10_DUR3,N0_RS11_DUR3,N0_RS12_DUR3,N0_RS13_DUR3,N0_RS14_DUR3,N0_RS15_DUR3,N0_RS16_DUR3,N0_RS17_DUR3,N0_RS18_DUR3,N0_RS19_DUR3,N0_RS20_DUR3,N0_RS21_DUR3,N0_RS22_DUR3,N0_RS23_DUR3,N0_RS24_DUR3,N0_RS25_DUR3,N0_RS26_DUR3,N0_RS27_DUR3,N0_RS28_DUR3,N0_RS29_DUR3,N0_RS30_DUR3,N0_RS31_DUR3,N0_RS32_DUR3,N0_RS33_DUR3,N0_RS34_DUR3,N0_RS35_DUR3,N0_RS36_DUR3,N0_RS37_DUR3,N0_RS38_DUR3,N0_RS39_DUR3,N0_RS40_DUR3,N0_RS41_DUR3,N0_RS42_DUR3,N0_RS43_DUR3,N0_RS44_DUR3,N0_RS45_DUR3,N0_RS46_DUR3,N0_RS47_DUR3,N0_RS48_DUR3,N0_RS49_DUR3);
formula n0_mn_dur3 = min(N0_RS0_DUR3,N0_RS1_DUR3,N0_RS2_DUR3,N0_RS3_DUR3,N0_RS4_DUR3,N0_RS5_DUR3,N0_RS6_DUR3,N0_RS7_DUR3,N0_RS8_DUR3,N0_RS9_DUR3,N0_RS10_DUR3,N0_RS11_DUR3,N0_RS12_DUR3,N0_RS13_DUR3,N0_RS14_DUR3,N0_RS15_DUR3,N0_RS16_DUR3,N0_RS17_DUR3,N0_RS18_DUR3,N0_RS19_DUR3,N0_RS20_DUR3,N0_RS21_DUR3,N0_RS22_DUR3,N0_RS23_DUR3,N0_RS24_DUR3,N0_RS25_DUR3,N0_RS26_DUR3,N0_RS27_DUR3,N0_RS28_DUR3,N0_RS29_DUR3,N0_RS30_DUR3,N0_RS31_DUR3,N0_RS32_DUR3,N0_RS33_DUR3,N0_RS34_DUR3,N0_RS35_DUR3,N0_RS36_DUR3,N0_RS37_DUR3,N0_RS38_DUR3,N0_RS39_DUR3,N0_RS40_DUR3,N0_RS41_DUR3,N0_RS42_DUR3,N0_RS43_DUR3,N0_RS44_DUR3,N0_RS45_DUR3,N0_RS46_DUR3,N0_RS47_DUR3,N0_RS48_DUR3,N0_RS49_DUR3);
formula n0_uv_dur3 = (n0_mx_dur3 - n0_rs_dur3) / (n0_mx_dur3 - n0_mn_dur3);

formula n0_rs_dur4=( (n0 = 0 & n0ev = 4) ? N0_RS0_DUR4 :( (n0 = 1 & n0ev = 4) ? N0_RS1_DUR4 :( (n0 = 2 & n0ev = 4) ? N0_RS2_DUR4 :( (n0 = 3 & n0ev = 4) ? N0_RS3_DUR4 :( (n0 = 4 & n0ev = 4) ? N0_RS4_DUR4 :( (n0 = 5 & n0ev = 4) ? N0_RS5_DUR4 :( (n0 = 6 & n0ev = 4) ? N0_RS6_DUR4 :( (n0 = 7 & n0ev = 4) ? N0_RS7_DUR4 :( (n0 = 8 & n0ev = 4) ? N0_RS8_DUR4 :( (n0 = 9 & n0ev = 4) ? N0_RS9_DUR4 :( (n0 = 10 & n0ev = 4) ? N0_RS10_DUR4 :( (n0 = 11 & n0ev = 4) ? N0_RS11_DUR4 :( (n0 = 12 & n0ev = 4) ? N0_RS12_DUR4 :( (n0 = 13 & n0ev = 4) ? N0_RS13_DUR4 :( (n0 = 14 & n0ev = 4) ? N0_RS14_DUR4 :( (n0 = 15 & n0ev = 4) ? N0_RS15_DUR4 :( (n0 = 16 & n0ev = 4) ? N0_RS16_DUR4 :( (n0 = 17 & n0ev = 4) ? N0_RS17_DUR4 :( (n0 = 18 & n0ev = 4) ? N0_RS18_DUR4 :( (n0 = 19 & n0ev = 4) ? N0_RS19_DUR4 :( (n0 = 20 & n0ev = 4) ? N0_RS20_DUR4 :( (n0 = 21 & n0ev = 4) ? N0_RS21_DUR4 :( (n0 = 22 & n0ev = 4) ? N0_RS22_DUR4 :( (n0 = 23 & n0ev = 4) ? N0_RS23_DUR4 :( (n0 = 24 & n0ev = 4) ? N0_RS24_DUR4 :( (n0 = 25 & n0ev = 4) ? N0_RS25_DUR4 :( (n0 = 26 & n0ev = 4) ? N0_RS26_DUR4 :( (n0 = 27 & n0ev = 4) ? N0_RS27_DUR4 :( (n0 = 28 & n0ev = 4) ? N0_RS28_DUR4 :( (n0 = 29 & n0ev = 4) ? N0_RS29_DUR4 :( (n0 = 30 & n0ev = 4) ? N0_RS30_DUR4 :( (n0 = 31 & n0ev = 4) ? N0_RS31_DUR4 :( (n0 = 32 & n0ev = 4) ? N0_RS32_DUR4 :( (n0 = 33 & n0ev = 4) ? N0_RS33_DUR4 :( (n0 = 34 & n0ev = 4) ? N0_RS34_DUR4 :( (n0 = 35 & n0ev = 4) ? N0_RS35_DUR4 :( (n0 = 36 & n0ev = 4) ? N0_RS36_DUR4 :( (n0 = 37 & n0ev = 4) ? N0_RS37_DUR4 :( (n0 = 38 & n0ev = 4) ? N0_RS38_DUR4 :( (n0 = 39 & n0ev = 4) ? N0_RS39_DUR4 :( (n0 = 40 & n0ev = 4) ? N0_RS40_DUR4 :( (n0 = 41 & n0ev = 4) ? N0_RS41_DUR4 :( (n0 = 42 & n0ev = 4) ? N0_RS42_DUR4 :( (n0 = 43 & n0ev = 4) ? N0_RS43_DUR4 :( (n0 = 44 & n0ev = 4) ? N0_RS44_DUR4 :( (n0 = 45 & n0ev = 4) ? N0_RS45_DUR4 :( (n0 = 46 & n0ev = 4) ? N0_RS46_DUR4 :( (n0 = 47 & n0ev = 4) ? N0_RS47_DUR4 :( (n0 = 48 & n0ev = 4) ? N0_RS48_DUR4 :( (n0 = 49 & n0ev = 4) ? N0_RS49_DUR4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_dur4 = max(N0_RS0_DUR4,N0_RS1_DUR4,N0_RS2_DUR4,N0_RS3_DUR4,N0_RS4_DUR4,N0_RS5_DUR4,N0_RS6_DUR4,N0_RS7_DUR4,N0_RS8_DUR4,N0_RS9_DUR4,N0_RS10_DUR4,N0_RS11_DUR4,N0_RS12_DUR4,N0_RS13_DUR4,N0_RS14_DUR4,N0_RS15_DUR4,N0_RS16_DUR4,N0_RS17_DUR4,N0_RS18_DUR4,N0_RS19_DUR4,N0_RS20_DUR4,N0_RS21_DUR4,N0_RS22_DUR4,N0_RS23_DUR4,N0_RS24_DUR4,N0_RS25_DUR4,N0_RS26_DUR4,N0_RS27_DUR4,N0_RS28_DUR4,N0_RS29_DUR4,N0_RS30_DUR4,N0_RS31_DUR4,N0_RS32_DUR4,N0_RS33_DUR4,N0_RS34_DUR4,N0_RS35_DUR4,N0_RS36_DUR4,N0_RS37_DUR4,N0_RS38_DUR4,N0_RS39_DUR4,N0_RS40_DUR4,N0_RS41_DUR4,N0_RS42_DUR4,N0_RS43_DUR4,N0_RS44_DUR4,N0_RS45_DUR4,N0_RS46_DUR4,N0_RS47_DUR4,N0_RS48_DUR4,N0_RS49_DUR4);
formula n0_mn_dur4 = min(N0_RS0_DUR4,N0_RS1_DUR4,N0_RS2_DUR4,N0_RS3_DUR4,N0_RS4_DUR4,N0_RS5_DUR4,N0_RS6_DUR4,N0_RS7_DUR4,N0_RS8_DUR4,N0_RS9_DUR4,N0_RS10_DUR4,N0_RS11_DUR4,N0_RS12_DUR4,N0_RS13_DUR4,N0_RS14_DUR4,N0_RS15_DUR4,N0_RS16_DUR4,N0_RS17_DUR4,N0_RS18_DUR4,N0_RS19_DUR4,N0_RS20_DUR4,N0_RS21_DUR4,N0_RS22_DUR4,N0_RS23_DUR4,N0_RS24_DUR4,N0_RS25_DUR4,N0_RS26_DUR4,N0_RS27_DUR4,N0_RS28_DUR4,N0_RS29_DUR4,N0_RS30_DUR4,N0_RS31_DUR4,N0_RS32_DUR4,N0_RS33_DUR4,N0_RS34_DUR4,N0_RS35_DUR4,N0_RS36_DUR4,N0_RS37_DUR4,N0_RS38_DUR4,N0_RS39_DUR4,N0_RS40_DUR4,N0_RS41_DUR4,N0_RS42_DUR4,N0_RS43_DUR4,N0_RS44_DUR4,N0_RS45_DUR4,N0_RS46_DUR4,N0_RS47_DUR4,N0_RS48_DUR4,N0_RS49_DUR4);
formula n0_uv_dur4 = (n0_mx_dur4 - n0_rs_dur4) / (n0_mx_dur4 - n0_mn_dur4);

//get the reliability of selected node..
formula n0_rs_rel0=( (n0 = 0 & n0ev = 0) ? N0_RS0_REL0 :( (n0 = 1 & n0ev = 0) ? N0_RS1_REL0 :( (n0 = 2 & n0ev = 0) ? N0_RS2_REL0 :( (n0 = 3 & n0ev = 0) ? N0_RS3_REL0 :( (n0 = 4 & n0ev = 0) ? N0_RS4_REL0 :( (n0 = 5 & n0ev = 0) ? N0_RS5_REL0 :( (n0 = 6 & n0ev = 0) ? N0_RS6_REL0 :( (n0 = 7 & n0ev = 0) ? N0_RS7_REL0 :( (n0 = 8 & n0ev = 0) ? N0_RS8_REL0 :( (n0 = 9 & n0ev = 0) ? N0_RS9_REL0 :( (n0 = 10 & n0ev = 0) ? N0_RS10_REL0 :( (n0 = 11 & n0ev = 0) ? N0_RS11_REL0 :( (n0 = 12 & n0ev = 0) ? N0_RS12_REL0 :( (n0 = 13 & n0ev = 0) ? N0_RS13_REL0 :( (n0 = 14 & n0ev = 0) ? N0_RS14_REL0 :( (n0 = 15 & n0ev = 0) ? N0_RS15_REL0 :( (n0 = 16 & n0ev = 0) ? N0_RS16_REL0 :( (n0 = 17 & n0ev = 0) ? N0_RS17_REL0 :( (n0 = 18 & n0ev = 0) ? N0_RS18_REL0 :( (n0 = 19 & n0ev = 0) ? N0_RS19_REL0 :( (n0 = 20 & n0ev = 0) ? N0_RS20_REL0 :( (n0 = 21 & n0ev = 0) ? N0_RS21_REL0 :( (n0 = 22 & n0ev = 0) ? N0_RS22_REL0 :( (n0 = 23 & n0ev = 0) ? N0_RS23_REL0 :( (n0 = 24 & n0ev = 0) ? N0_RS24_REL0 :( (n0 = 25 & n0ev = 0) ? N0_RS25_REL0 :( (n0 = 26 & n0ev = 0) ? N0_RS26_REL0 :( (n0 = 27 & n0ev = 0) ? N0_RS27_REL0 :( (n0 = 28 & n0ev = 0) ? N0_RS28_REL0 :( (n0 = 29 & n0ev = 0) ? N0_RS29_REL0 :( (n0 = 30 & n0ev = 0) ? N0_RS30_REL0 :( (n0 = 31 & n0ev = 0) ? N0_RS31_REL0 :( (n0 = 32 & n0ev = 0) ? N0_RS32_REL0 :( (n0 = 33 & n0ev = 0) ? N0_RS33_REL0 :( (n0 = 34 & n0ev = 0) ? N0_RS34_REL0 :( (n0 = 35 & n0ev = 0) ? N0_RS35_REL0 :( (n0 = 36 & n0ev = 0) ? N0_RS36_REL0 :( (n0 = 37 & n0ev = 0) ? N0_RS37_REL0 :( (n0 = 38 & n0ev = 0) ? N0_RS38_REL0 :( (n0 = 39 & n0ev = 0) ? N0_RS39_REL0 :( (n0 = 40 & n0ev = 0) ? N0_RS40_REL0 :( (n0 = 41 & n0ev = 0) ? N0_RS41_REL0 :( (n0 = 42 & n0ev = 0) ? N0_RS42_REL0 :( (n0 = 43 & n0ev = 0) ? N0_RS43_REL0 :( (n0 = 44 & n0ev = 0) ? N0_RS44_REL0 :( (n0 = 45 & n0ev = 0) ? N0_RS45_REL0 :( (n0 = 46 & n0ev = 0) ? N0_RS46_REL0 :( (n0 = 47 & n0ev = 0) ? N0_RS47_REL0 :( (n0 = 48 & n0ev = 0) ? N0_RS48_REL0 :( (n0 = 49 & n0ev = 0) ? N0_RS49_REL0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_rel0 = max(N0_RS0_REL0,N0_RS1_REL0,N0_RS2_REL0,N0_RS3_REL0,N0_RS4_REL0,N0_RS5_REL0,N0_RS6_REL0,N0_RS7_REL0,N0_RS8_REL0,N0_RS9_REL0,N0_RS10_REL0,N0_RS11_REL0,N0_RS12_REL0,N0_RS13_REL0,N0_RS14_REL0,N0_RS15_REL0,N0_RS16_REL0,N0_RS17_REL0,N0_RS18_REL0,N0_RS19_REL0,N0_RS20_REL0,N0_RS21_REL0,N0_RS22_REL0,N0_RS23_REL0,N0_RS24_REL0,N0_RS25_REL0,N0_RS26_REL0,N0_RS27_REL0,N0_RS28_REL0,N0_RS29_REL0,N0_RS30_REL0,N0_RS31_REL0,N0_RS32_REL0,N0_RS33_REL0,N0_RS34_REL0,N0_RS35_REL0,N0_RS36_REL0,N0_RS37_REL0,N0_RS38_REL0,N0_RS39_REL0,N0_RS40_REL0,N0_RS41_REL0,N0_RS42_REL0,N0_RS43_REL0,N0_RS44_REL0,N0_RS45_REL0,N0_RS46_REL0,N0_RS47_REL0,N0_RS48_REL0,N0_RS49_REL0);
formula n0_mn_rel0 = min(N0_RS0_REL0,N0_RS1_REL0,N0_RS2_REL0,N0_RS3_REL0,N0_RS4_REL0,N0_RS5_REL0,N0_RS6_REL0,N0_RS7_REL0,N0_RS8_REL0,N0_RS9_REL0,N0_RS10_REL0,N0_RS11_REL0,N0_RS12_REL0,N0_RS13_REL0,N0_RS14_REL0,N0_RS15_REL0,N0_RS16_REL0,N0_RS17_REL0,N0_RS18_REL0,N0_RS19_REL0,N0_RS20_REL0,N0_RS21_REL0,N0_RS22_REL0,N0_RS23_REL0,N0_RS24_REL0,N0_RS25_REL0,N0_RS26_REL0,N0_RS27_REL0,N0_RS28_REL0,N0_RS29_REL0,N0_RS30_REL0,N0_RS31_REL0,N0_RS32_REL0,N0_RS33_REL0,N0_RS34_REL0,N0_RS35_REL0,N0_RS36_REL0,N0_RS37_REL0,N0_RS38_REL0,N0_RS39_REL0,N0_RS40_REL0,N0_RS41_REL0,N0_RS42_REL0,N0_RS43_REL0,N0_RS44_REL0,N0_RS45_REL0,N0_RS46_REL0,N0_RS47_REL0,N0_RS48_REL0,N0_RS49_REL0);
formula n0_uv_rel0 = (n0_mx_rel0 - n0_rs_rel0) / (n0_mx_rel0 - n0_mn_rel0);

formula n0_rs_rel1=( (n0 = 0 & n0ev = 1) ? N0_RS0_REL1 :( (n0 = 1 & n0ev = 1) ? N0_RS1_REL1 :( (n0 = 2 & n0ev = 1) ? N0_RS2_REL1 :( (n0 = 3 & n0ev = 1) ? N0_RS3_REL1 :( (n0 = 4 & n0ev = 1) ? N0_RS4_REL1 :( (n0 = 5 & n0ev = 1) ? N0_RS5_REL1 :( (n0 = 6 & n0ev = 1) ? N0_RS6_REL1 :( (n0 = 7 & n0ev = 1) ? N0_RS7_REL1 :( (n0 = 8 & n0ev = 1) ? N0_RS8_REL1 :( (n0 = 9 & n0ev = 1) ? N0_RS9_REL1 :( (n0 = 10 & n0ev = 1) ? N0_RS10_REL1 :( (n0 = 11 & n0ev = 1) ? N0_RS11_REL1 :( (n0 = 12 & n0ev = 1) ? N0_RS12_REL1 :( (n0 = 13 & n0ev = 1) ? N0_RS13_REL1 :( (n0 = 14 & n0ev = 1) ? N0_RS14_REL1 :( (n0 = 15 & n0ev = 1) ? N0_RS15_REL1 :( (n0 = 16 & n0ev = 1) ? N0_RS16_REL1 :( (n0 = 17 & n0ev = 1) ? N0_RS17_REL1 :( (n0 = 18 & n0ev = 1) ? N0_RS18_REL1 :( (n0 = 19 & n0ev = 1) ? N0_RS19_REL1 :( (n0 = 20 & n0ev = 1) ? N0_RS20_REL1 :( (n0 = 21 & n0ev = 1) ? N0_RS21_REL1 :( (n0 = 22 & n0ev = 1) ? N0_RS22_REL1 :( (n0 = 23 & n0ev = 1) ? N0_RS23_REL1 :( (n0 = 24 & n0ev = 1) ? N0_RS24_REL1 :( (n0 = 25 & n0ev = 1) ? N0_RS25_REL1 :( (n0 = 26 & n0ev = 1) ? N0_RS26_REL1 :( (n0 = 27 & n0ev = 1) ? N0_RS27_REL1 :( (n0 = 28 & n0ev = 1) ? N0_RS28_REL1 :( (n0 = 29 & n0ev = 1) ? N0_RS29_REL1 :( (n0 = 30 & n0ev = 1) ? N0_RS30_REL1 :( (n0 = 31 & n0ev = 1) ? N0_RS31_REL1 :( (n0 = 32 & n0ev = 1) ? N0_RS32_REL1 :( (n0 = 33 & n0ev = 1) ? N0_RS33_REL1 :( (n0 = 34 & n0ev = 1) ? N0_RS34_REL1 :( (n0 = 35 & n0ev = 1) ? N0_RS35_REL1 :( (n0 = 36 & n0ev = 1) ? N0_RS36_REL1 :( (n0 = 37 & n0ev = 1) ? N0_RS37_REL1 :( (n0 = 38 & n0ev = 1) ? N0_RS38_REL1 :( (n0 = 39 & n0ev = 1) ? N0_RS39_REL1 :( (n0 = 40 & n0ev = 1) ? N0_RS40_REL1 :( (n0 = 41 & n0ev = 1) ? N0_RS41_REL1 :( (n0 = 42 & n0ev = 1) ? N0_RS42_REL1 :( (n0 = 43 & n0ev = 1) ? N0_RS43_REL1 :( (n0 = 44 & n0ev = 1) ? N0_RS44_REL1 :( (n0 = 45 & n0ev = 1) ? N0_RS45_REL1 :( (n0 = 46 & n0ev = 1) ? N0_RS46_REL1 :( (n0 = 47 & n0ev = 1) ? N0_RS47_REL1 :( (n0 = 48 & n0ev = 1) ? N0_RS48_REL1 :( (n0 = 49 & n0ev = 1) ? N0_RS49_REL1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_rel1 = max(N0_RS0_REL1,N0_RS1_REL1,N0_RS2_REL1,N0_RS3_REL1,N0_RS4_REL1,N0_RS5_REL1,N0_RS6_REL1,N0_RS7_REL1,N0_RS8_REL1,N0_RS9_REL1,N0_RS10_REL1,N0_RS11_REL1,N0_RS12_REL1,N0_RS13_REL1,N0_RS14_REL1,N0_RS15_REL1,N0_RS16_REL1,N0_RS17_REL1,N0_RS18_REL1,N0_RS19_REL1,N0_RS20_REL1,N0_RS21_REL1,N0_RS22_REL1,N0_RS23_REL1,N0_RS24_REL1,N0_RS25_REL1,N0_RS26_REL1,N0_RS27_REL1,N0_RS28_REL1,N0_RS29_REL1,N0_RS30_REL1,N0_RS31_REL1,N0_RS32_REL1,N0_RS33_REL1,N0_RS34_REL1,N0_RS35_REL1,N0_RS36_REL1,N0_RS37_REL1,N0_RS38_REL1,N0_RS39_REL1,N0_RS40_REL1,N0_RS41_REL1,N0_RS42_REL1,N0_RS43_REL1,N0_RS44_REL1,N0_RS45_REL1,N0_RS46_REL1,N0_RS47_REL1,N0_RS48_REL1,N0_RS49_REL1);
formula n0_mn_rel1 = min(N0_RS0_REL1,N0_RS1_REL1,N0_RS2_REL1,N0_RS3_REL1,N0_RS4_REL1,N0_RS5_REL1,N0_RS6_REL1,N0_RS7_REL1,N0_RS8_REL1,N0_RS9_REL1,N0_RS10_REL1,N0_RS11_REL1,N0_RS12_REL1,N0_RS13_REL1,N0_RS14_REL1,N0_RS15_REL1,N0_RS16_REL1,N0_RS17_REL1,N0_RS18_REL1,N0_RS19_REL1,N0_RS20_REL1,N0_RS21_REL1,N0_RS22_REL1,N0_RS23_REL1,N0_RS24_REL1,N0_RS25_REL1,N0_RS26_REL1,N0_RS27_REL1,N0_RS28_REL1,N0_RS29_REL1,N0_RS30_REL1,N0_RS31_REL1,N0_RS32_REL1,N0_RS33_REL1,N0_RS34_REL1,N0_RS35_REL1,N0_RS36_REL1,N0_RS37_REL1,N0_RS38_REL1,N0_RS39_REL1,N0_RS40_REL1,N0_RS41_REL1,N0_RS42_REL1,N0_RS43_REL1,N0_RS44_REL1,N0_RS45_REL1,N0_RS46_REL1,N0_RS47_REL1,N0_RS48_REL1,N0_RS49_REL1);
formula n0_uv_rel1 = (n0_mx_rel1 - n0_rs_rel1) / (n0_mx_rel1 - n0_mn_rel1);

formula n0_rs_rel2=( (n0 = 0 & n0ev = 2) ? N0_RS0_REL2 :( (n0 = 1 & n0ev = 2) ? N0_RS1_REL2 :( (n0 = 2 & n0ev = 2) ? N0_RS2_REL2 :( (n0 = 3 & n0ev = 2) ? N0_RS3_REL2 :( (n0 = 4 & n0ev = 2) ? N0_RS4_REL2 :( (n0 = 5 & n0ev = 2) ? N0_RS5_REL2 :( (n0 = 6 & n0ev = 2) ? N0_RS6_REL2 :( (n0 = 7 & n0ev = 2) ? N0_RS7_REL2 :( (n0 = 8 & n0ev = 2) ? N0_RS8_REL2 :( (n0 = 9 & n0ev = 2) ? N0_RS9_REL2 :( (n0 = 10 & n0ev = 2) ? N0_RS10_REL2 :( (n0 = 11 & n0ev = 2) ? N0_RS11_REL2 :( (n0 = 12 & n0ev = 2) ? N0_RS12_REL2 :( (n0 = 13 & n0ev = 2) ? N0_RS13_REL2 :( (n0 = 14 & n0ev = 2) ? N0_RS14_REL2 :( (n0 = 15 & n0ev = 2) ? N0_RS15_REL2 :( (n0 = 16 & n0ev = 2) ? N0_RS16_REL2 :( (n0 = 17 & n0ev = 2) ? N0_RS17_REL2 :( (n0 = 18 & n0ev = 2) ? N0_RS18_REL2 :( (n0 = 19 & n0ev = 2) ? N0_RS19_REL2 :( (n0 = 20 & n0ev = 2) ? N0_RS20_REL2 :( (n0 = 21 & n0ev = 2) ? N0_RS21_REL2 :( (n0 = 22 & n0ev = 2) ? N0_RS22_REL2 :( (n0 = 23 & n0ev = 2) ? N0_RS23_REL2 :( (n0 = 24 & n0ev = 2) ? N0_RS24_REL2 :( (n0 = 25 & n0ev = 2) ? N0_RS25_REL2 :( (n0 = 26 & n0ev = 2) ? N0_RS26_REL2 :( (n0 = 27 & n0ev = 2) ? N0_RS27_REL2 :( (n0 = 28 & n0ev = 2) ? N0_RS28_REL2 :( (n0 = 29 & n0ev = 2) ? N0_RS29_REL2 :( (n0 = 30 & n0ev = 2) ? N0_RS30_REL2 :( (n0 = 31 & n0ev = 2) ? N0_RS31_REL2 :( (n0 = 32 & n0ev = 2) ? N0_RS32_REL2 :( (n0 = 33 & n0ev = 2) ? N0_RS33_REL2 :( (n0 = 34 & n0ev = 2) ? N0_RS34_REL2 :( (n0 = 35 & n0ev = 2) ? N0_RS35_REL2 :( (n0 = 36 & n0ev = 2) ? N0_RS36_REL2 :( (n0 = 37 & n0ev = 2) ? N0_RS37_REL2 :( (n0 = 38 & n0ev = 2) ? N0_RS38_REL2 :( (n0 = 39 & n0ev = 2) ? N0_RS39_REL2 :( (n0 = 40 & n0ev = 2) ? N0_RS40_REL2 :( (n0 = 41 & n0ev = 2) ? N0_RS41_REL2 :( (n0 = 42 & n0ev = 2) ? N0_RS42_REL2 :( (n0 = 43 & n0ev = 2) ? N0_RS43_REL2 :( (n0 = 44 & n0ev = 2) ? N0_RS44_REL2 :( (n0 = 45 & n0ev = 2) ? N0_RS45_REL2 :( (n0 = 46 & n0ev = 2) ? N0_RS46_REL2 :( (n0 = 47 & n0ev = 2) ? N0_RS47_REL2 :( (n0 = 48 & n0ev = 2) ? N0_RS48_REL2 :( (n0 = 49 & n0ev = 2) ? N0_RS49_REL2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_rel2 = max(N0_RS0_REL2,N0_RS1_REL2,N0_RS2_REL2,N0_RS3_REL2,N0_RS4_REL2,N0_RS5_REL2,N0_RS6_REL2,N0_RS7_REL2,N0_RS8_REL2,N0_RS9_REL2,N0_RS10_REL2,N0_RS11_REL2,N0_RS12_REL2,N0_RS13_REL2,N0_RS14_REL2,N0_RS15_REL2,N0_RS16_REL2,N0_RS17_REL2,N0_RS18_REL2,N0_RS19_REL2,N0_RS20_REL2,N0_RS21_REL2,N0_RS22_REL2,N0_RS23_REL2,N0_RS24_REL2,N0_RS25_REL2,N0_RS26_REL2,N0_RS27_REL2,N0_RS28_REL2,N0_RS29_REL2,N0_RS30_REL2,N0_RS31_REL2,N0_RS32_REL2,N0_RS33_REL2,N0_RS34_REL2,N0_RS35_REL2,N0_RS36_REL2,N0_RS37_REL2,N0_RS38_REL2,N0_RS39_REL2,N0_RS40_REL2,N0_RS41_REL2,N0_RS42_REL2,N0_RS43_REL2,N0_RS44_REL2,N0_RS45_REL2,N0_RS46_REL2,N0_RS47_REL2,N0_RS48_REL2,N0_RS49_REL2);
formula n0_mn_rel2 = min(N0_RS0_REL2,N0_RS1_REL2,N0_RS2_REL2,N0_RS3_REL2,N0_RS4_REL2,N0_RS5_REL2,N0_RS6_REL2,N0_RS7_REL2,N0_RS8_REL2,N0_RS9_REL2,N0_RS10_REL2,N0_RS11_REL2,N0_RS12_REL2,N0_RS13_REL2,N0_RS14_REL2,N0_RS15_REL2,N0_RS16_REL2,N0_RS17_REL2,N0_RS18_REL2,N0_RS19_REL2,N0_RS20_REL2,N0_RS21_REL2,N0_RS22_REL2,N0_RS23_REL2,N0_RS24_REL2,N0_RS25_REL2,N0_RS26_REL2,N0_RS27_REL2,N0_RS28_REL2,N0_RS29_REL2,N0_RS30_REL2,N0_RS31_REL2,N0_RS32_REL2,N0_RS33_REL2,N0_RS34_REL2,N0_RS35_REL2,N0_RS36_REL2,N0_RS37_REL2,N0_RS38_REL2,N0_RS39_REL2,N0_RS40_REL2,N0_RS41_REL2,N0_RS42_REL2,N0_RS43_REL2,N0_RS44_REL2,N0_RS45_REL2,N0_RS46_REL2,N0_RS47_REL2,N0_RS48_REL2,N0_RS49_REL2);
formula n0_uv_rel2 = (n0_mx_rel2 - n0_rs_rel2) / (n0_mx_rel2 - n0_mn_rel2);

formula n0_rs_rel3=( (n0 = 0 & n0ev = 3) ? N0_RS0_REL3 :( (n0 = 1 & n0ev = 3) ? N0_RS1_REL3 :( (n0 = 2 & n0ev = 3) ? N0_RS2_REL3 :( (n0 = 3 & n0ev = 3) ? N0_RS3_REL3 :( (n0 = 4 & n0ev = 3) ? N0_RS4_REL3 :( (n0 = 5 & n0ev = 3) ? N0_RS5_REL3 :( (n0 = 6 & n0ev = 3) ? N0_RS6_REL3 :( (n0 = 7 & n0ev = 3) ? N0_RS7_REL3 :( (n0 = 8 & n0ev = 3) ? N0_RS8_REL3 :( (n0 = 9 & n0ev = 3) ? N0_RS9_REL3 :( (n0 = 10 & n0ev = 3) ? N0_RS10_REL3 :( (n0 = 11 & n0ev = 3) ? N0_RS11_REL3 :( (n0 = 12 & n0ev = 3) ? N0_RS12_REL3 :( (n0 = 13 & n0ev = 3) ? N0_RS13_REL3 :( (n0 = 14 & n0ev = 3) ? N0_RS14_REL3 :( (n0 = 15 & n0ev = 3) ? N0_RS15_REL3 :( (n0 = 16 & n0ev = 3) ? N0_RS16_REL3 :( (n0 = 17 & n0ev = 3) ? N0_RS17_REL3 :( (n0 = 18 & n0ev = 3) ? N0_RS18_REL3 :( (n0 = 19 & n0ev = 3) ? N0_RS19_REL3 :( (n0 = 20 & n0ev = 3) ? N0_RS20_REL3 :( (n0 = 21 & n0ev = 3) ? N0_RS21_REL3 :( (n0 = 22 & n0ev = 3) ? N0_RS22_REL3 :( (n0 = 23 & n0ev = 3) ? N0_RS23_REL3 :( (n0 = 24 & n0ev = 3) ? N0_RS24_REL3 :( (n0 = 25 & n0ev = 3) ? N0_RS25_REL3 :( (n0 = 26 & n0ev = 3) ? N0_RS26_REL3 :( (n0 = 27 & n0ev = 3) ? N0_RS27_REL3 :( (n0 = 28 & n0ev = 3) ? N0_RS28_REL3 :( (n0 = 29 & n0ev = 3) ? N0_RS29_REL3 :( (n0 = 30 & n0ev = 3) ? N0_RS30_REL3 :( (n0 = 31 & n0ev = 3) ? N0_RS31_REL3 :( (n0 = 32 & n0ev = 3) ? N0_RS32_REL3 :( (n0 = 33 & n0ev = 3) ? N0_RS33_REL3 :( (n0 = 34 & n0ev = 3) ? N0_RS34_REL3 :( (n0 = 35 & n0ev = 3) ? N0_RS35_REL3 :( (n0 = 36 & n0ev = 3) ? N0_RS36_REL3 :( (n0 = 37 & n0ev = 3) ? N0_RS37_REL3 :( (n0 = 38 & n0ev = 3) ? N0_RS38_REL3 :( (n0 = 39 & n0ev = 3) ? N0_RS39_REL3 :( (n0 = 40 & n0ev = 3) ? N0_RS40_REL3 :( (n0 = 41 & n0ev = 3) ? N0_RS41_REL3 :( (n0 = 42 & n0ev = 3) ? N0_RS42_REL3 :( (n0 = 43 & n0ev = 3) ? N0_RS43_REL3 :( (n0 = 44 & n0ev = 3) ? N0_RS44_REL3 :( (n0 = 45 & n0ev = 3) ? N0_RS45_REL3 :( (n0 = 46 & n0ev = 3) ? N0_RS46_REL3 :( (n0 = 47 & n0ev = 3) ? N0_RS47_REL3 :( (n0 = 48 & n0ev = 3) ? N0_RS48_REL3 :( (n0 = 49 & n0ev = 3) ? N0_RS49_REL3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_rel3 = max(N0_RS0_REL3,N0_RS1_REL3,N0_RS2_REL3,N0_RS3_REL3,N0_RS4_REL3,N0_RS5_REL3,N0_RS6_REL3,N0_RS7_REL3,N0_RS8_REL3,N0_RS9_REL3,N0_RS10_REL3,N0_RS11_REL3,N0_RS12_REL3,N0_RS13_REL3,N0_RS14_REL3,N0_RS15_REL3,N0_RS16_REL3,N0_RS17_REL3,N0_RS18_REL3,N0_RS19_REL3,N0_RS20_REL3,N0_RS21_REL3,N0_RS22_REL3,N0_RS23_REL3,N0_RS24_REL3,N0_RS25_REL3,N0_RS26_REL3,N0_RS27_REL3,N0_RS28_REL3,N0_RS29_REL3,N0_RS30_REL3,N0_RS31_REL3,N0_RS32_REL3,N0_RS33_REL3,N0_RS34_REL3,N0_RS35_REL3,N0_RS36_REL3,N0_RS37_REL3,N0_RS38_REL3,N0_RS39_REL3,N0_RS40_REL3,N0_RS41_REL3,N0_RS42_REL3,N0_RS43_REL3,N0_RS44_REL3,N0_RS45_REL3,N0_RS46_REL3,N0_RS47_REL3,N0_RS48_REL3,N0_RS49_REL3);
formula n0_mn_rel3 = min(N0_RS0_REL3,N0_RS1_REL3,N0_RS2_REL3,N0_RS3_REL3,N0_RS4_REL3,N0_RS5_REL3,N0_RS6_REL3,N0_RS7_REL3,N0_RS8_REL3,N0_RS9_REL3,N0_RS10_REL3,N0_RS11_REL3,N0_RS12_REL3,N0_RS13_REL3,N0_RS14_REL3,N0_RS15_REL3,N0_RS16_REL3,N0_RS17_REL3,N0_RS18_REL3,N0_RS19_REL3,N0_RS20_REL3,N0_RS21_REL3,N0_RS22_REL3,N0_RS23_REL3,N0_RS24_REL3,N0_RS25_REL3,N0_RS26_REL3,N0_RS27_REL3,N0_RS28_REL3,N0_RS29_REL3,N0_RS30_REL3,N0_RS31_REL3,N0_RS32_REL3,N0_RS33_REL3,N0_RS34_REL3,N0_RS35_REL3,N0_RS36_REL3,N0_RS37_REL3,N0_RS38_REL3,N0_RS39_REL3,N0_RS40_REL3,N0_RS41_REL3,N0_RS42_REL3,N0_RS43_REL3,N0_RS44_REL3,N0_RS45_REL3,N0_RS46_REL3,N0_RS47_REL3,N0_RS48_REL3,N0_RS49_REL3);
formula n0_uv_rel3 = (n0_mx_rel3 - n0_rs_rel3) / (n0_mx_rel3 - n0_mn_rel3);

formula n0_rs_rel4=( (n0 = 0 & n0ev = 4) ? N0_RS0_REL4 :( (n0 = 1 & n0ev = 4) ? N0_RS1_REL4 :( (n0 = 2 & n0ev = 4) ? N0_RS2_REL4 :( (n0 = 3 & n0ev = 4) ? N0_RS3_REL4 :( (n0 = 4 & n0ev = 4) ? N0_RS4_REL4 :( (n0 = 5 & n0ev = 4) ? N0_RS5_REL4 :( (n0 = 6 & n0ev = 4) ? N0_RS6_REL4 :( (n0 = 7 & n0ev = 4) ? N0_RS7_REL4 :( (n0 = 8 & n0ev = 4) ? N0_RS8_REL4 :( (n0 = 9 & n0ev = 4) ? N0_RS9_REL4 :( (n0 = 10 & n0ev = 4) ? N0_RS10_REL4 :( (n0 = 11 & n0ev = 4) ? N0_RS11_REL4 :( (n0 = 12 & n0ev = 4) ? N0_RS12_REL4 :( (n0 = 13 & n0ev = 4) ? N0_RS13_REL4 :( (n0 = 14 & n0ev = 4) ? N0_RS14_REL4 :( (n0 = 15 & n0ev = 4) ? N0_RS15_REL4 :( (n0 = 16 & n0ev = 4) ? N0_RS16_REL4 :( (n0 = 17 & n0ev = 4) ? N0_RS17_REL4 :( (n0 = 18 & n0ev = 4) ? N0_RS18_REL4 :( (n0 = 19 & n0ev = 4) ? N0_RS19_REL4 :( (n0 = 20 & n0ev = 4) ? N0_RS20_REL4 :( (n0 = 21 & n0ev = 4) ? N0_RS21_REL4 :( (n0 = 22 & n0ev = 4) ? N0_RS22_REL4 :( (n0 = 23 & n0ev = 4) ? N0_RS23_REL4 :( (n0 = 24 & n0ev = 4) ? N0_RS24_REL4 :( (n0 = 25 & n0ev = 4) ? N0_RS25_REL4 :( (n0 = 26 & n0ev = 4) ? N0_RS26_REL4 :( (n0 = 27 & n0ev = 4) ? N0_RS27_REL4 :( (n0 = 28 & n0ev = 4) ? N0_RS28_REL4 :( (n0 = 29 & n0ev = 4) ? N0_RS29_REL4 :( (n0 = 30 & n0ev = 4) ? N0_RS30_REL4 :( (n0 = 31 & n0ev = 4) ? N0_RS31_REL4 :( (n0 = 32 & n0ev = 4) ? N0_RS32_REL4 :( (n0 = 33 & n0ev = 4) ? N0_RS33_REL4 :( (n0 = 34 & n0ev = 4) ? N0_RS34_REL4 :( (n0 = 35 & n0ev = 4) ? N0_RS35_REL4 :( (n0 = 36 & n0ev = 4) ? N0_RS36_REL4 :( (n0 = 37 & n0ev = 4) ? N0_RS37_REL4 :( (n0 = 38 & n0ev = 4) ? N0_RS38_REL4 :( (n0 = 39 & n0ev = 4) ? N0_RS39_REL4 :( (n0 = 40 & n0ev = 4) ? N0_RS40_REL4 :( (n0 = 41 & n0ev = 4) ? N0_RS41_REL4 :( (n0 = 42 & n0ev = 4) ? N0_RS42_REL4 :( (n0 = 43 & n0ev = 4) ? N0_RS43_REL4 :( (n0 = 44 & n0ev = 4) ? N0_RS44_REL4 :( (n0 = 45 & n0ev = 4) ? N0_RS45_REL4 :( (n0 = 46 & n0ev = 4) ? N0_RS46_REL4 :( (n0 = 47 & n0ev = 4) ? N0_RS47_REL4 :( (n0 = 48 & n0ev = 4) ? N0_RS48_REL4 :( (n0 = 49 & n0ev = 4) ? N0_RS49_REL4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n0_mx_rel4 = max(N0_RS0_REL4,N0_RS1_REL4,N0_RS2_REL4,N0_RS3_REL4,N0_RS4_REL4,N0_RS5_REL4,N0_RS6_REL4,N0_RS7_REL4,N0_RS8_REL4,N0_RS9_REL4,N0_RS10_REL4,N0_RS11_REL4,N0_RS12_REL4,N0_RS13_REL4,N0_RS14_REL4,N0_RS15_REL4,N0_RS16_REL4,N0_RS17_REL4,N0_RS18_REL4,N0_RS19_REL4,N0_RS20_REL4,N0_RS21_REL4,N0_RS22_REL4,N0_RS23_REL4,N0_RS24_REL4,N0_RS25_REL4,N0_RS26_REL4,N0_RS27_REL4,N0_RS28_REL4,N0_RS29_REL4,N0_RS30_REL4,N0_RS31_REL4,N0_RS32_REL4,N0_RS33_REL4,N0_RS34_REL4,N0_RS35_REL4,N0_RS36_REL4,N0_RS37_REL4,N0_RS38_REL4,N0_RS39_REL4,N0_RS40_REL4,N0_RS41_REL4,N0_RS42_REL4,N0_RS43_REL4,N0_RS44_REL4,N0_RS45_REL4,N0_RS46_REL4,N0_RS47_REL4,N0_RS48_REL4,N0_RS49_REL4);
formula n0_mn_rel4 = min(N0_RS0_REL4,N0_RS1_REL4,N0_RS2_REL4,N0_RS3_REL4,N0_RS4_REL4,N0_RS5_REL4,N0_RS6_REL4,N0_RS7_REL4,N0_RS8_REL4,N0_RS9_REL4,N0_RS10_REL4,N0_RS11_REL4,N0_RS12_REL4,N0_RS13_REL4,N0_RS14_REL4,N0_RS15_REL4,N0_RS16_REL4,N0_RS17_REL4,N0_RS18_REL4,N0_RS19_REL4,N0_RS20_REL4,N0_RS21_REL4,N0_RS22_REL4,N0_RS23_REL4,N0_RS24_REL4,N0_RS25_REL4,N0_RS26_REL4,N0_RS27_REL4,N0_RS28_REL4,N0_RS29_REL4,N0_RS30_REL4,N0_RS31_REL4,N0_RS32_REL4,N0_RS33_REL4,N0_RS34_REL4,N0_RS35_REL4,N0_RS36_REL4,N0_RS37_REL4,N0_RS38_REL4,N0_RS39_REL4,N0_RS40_REL4,N0_RS41_REL4,N0_RS42_REL4,N0_RS43_REL4,N0_RS44_REL4,N0_RS45_REL4,N0_RS46_REL4,N0_RS47_REL4,N0_RS48_REL4,N0_RS49_REL4);
formula n0_uv_rel4 = (n0_mx_rel4 - n0_rs_rel4) / (n0_mx_rel4 - n0_mn_rel4);


//Preventing from non-evaluated problem..
formula n0_ut_cost = (n0_uv_cost > 0.0 ? n0_uv_cost: 0.0);
formula n0_ut_dur0 = (n0_uv_dur0 > 0.0 ? n0_uv_dur0: 0.0);
formula n0_ut_dur1 = (n0_uv_dur1 > 0.0 ? n0_uv_dur1: 0.0);
formula n0_ut_dur2 = (n0_uv_dur2 > 0.0 ? n0_uv_dur2: 0.0);
formula n0_ut_dur3 = (n0_uv_dur3 > 0.0 ? n0_uv_dur3: 0.0);
formula n0_ut_dur4 = (n0_uv_dur4 > 0.0 ? n0_uv_dur4: 0.0);
formula n0_ut_rel0 = (n0_uv_rel0 > 0.0 ? n0_uv_rel0: 0.0);
formula n0_ut_rel1 = (n0_uv_rel1 > 0.0 ? n0_uv_rel1: 0.0);
formula n0_ut_rel2 = (n0_uv_rel2 > 0.0 ? n0_uv_rel2: 0.0);
formula n0_ut_rel3 = (n0_uv_rel3 > 0.0 ? n0_uv_rel3: 0.0);
formula n0_ut_rel4 = (n0_uv_rel4 > 0.0 ? n0_uv_rel4: 0.0);

//Compute the overall utility value..
formula n0_ut_all = (n0ev=0 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur0 * A0_WG_DUR + n0_ut_rel0 * A0_WG_REL):(n0ev=1 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur1 * A0_WG_DUR + n0_ut_rel1 * A0_WG_REL):(n0ev=2 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur2 * A0_WG_DUR + n0_ut_rel2 * A0_WG_REL):(n0ev=3 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur3 * A0_WG_DUR + n0_ut_rel3 * A0_WG_REL):(n0ev=4 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur4 * A0_WG_DUR + n0_ut_rel4 * A0_WG_REL):0.0)))));

//get the cost of selected node..
formula n1_rs_cost =( n1 = 0 ? N1_RS0_COST :( n1 = 1 ? N1_RS1_COST :( n1 = 2 ? N1_RS2_COST :( n1 = 3 ? N1_RS3_COST :( n1 = 4 ? N1_RS4_COST :( n1 = 5 ? N1_RS5_COST :( n1 = 6 ? N1_RS6_COST :( n1 = 7 ? N1_RS7_COST :( n1 = 8 ? N1_RS8_COST :( n1 = 9 ? N1_RS9_COST :( n1 = 10 ? N1_RS10_COST :( n1 = 11 ? N1_RS11_COST :( n1 = 12 ? N1_RS12_COST :( n1 = 13 ? N1_RS13_COST :( n1 = 14 ? N1_RS14_COST :( n1 = 15 ? N1_RS15_COST :( n1 = 16 ? N1_RS16_COST :( n1 = 17 ? N1_RS17_COST :( n1 = 18 ? N1_RS18_COST :( n1 = 19 ? N1_RS19_COST :( n1 = 20 ? N1_RS20_COST :( n1 = 21 ? N1_RS21_COST :( n1 = 22 ? N1_RS22_COST :( n1 = 23 ? N1_RS23_COST :( n1 = 24 ? N1_RS24_COST :( n1 = 25 ? N1_RS25_COST :( n1 = 26 ? N1_RS26_COST :( n1 = 27 ? N1_RS27_COST :( n1 = 28 ? N1_RS28_COST :( n1 = 29 ? N1_RS29_COST :( n1 = 30 ? N1_RS30_COST :( n1 = 31 ? N1_RS31_COST :( n1 = 32 ? N1_RS32_COST :( n1 = 33 ? N1_RS33_COST :( n1 = 34 ? N1_RS34_COST :( n1 = 35 ? N1_RS35_COST :( n1 = 36 ? N1_RS36_COST :( n1 = 37 ? N1_RS37_COST :( n1 = 38 ? N1_RS38_COST :( n1 = 39 ? N1_RS39_COST :( n1 = 40 ? N1_RS40_COST :( n1 = 41 ? N1_RS41_COST :( n1 = 42 ? N1_RS42_COST :( n1 = 43 ? N1_RS43_COST :( n1 = 44 ? N1_RS44_COST :( n1 = 45 ? N1_RS45_COST :( n1 = 46 ? N1_RS46_COST :( n1 = 47 ? N1_RS47_COST :( n1 = 48 ? N1_RS48_COST :( n1 = 49 ? N1_RS49_COST :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_cost = max(N1_RS0_COST,N1_RS1_COST,N1_RS2_COST,N1_RS3_COST,N1_RS4_COST,N1_RS5_COST,N1_RS6_COST,N1_RS7_COST,N1_RS8_COST,N1_RS9_COST,N1_RS10_COST,N1_RS11_COST,N1_RS12_COST,N1_RS13_COST,N1_RS14_COST,N1_RS15_COST,N1_RS16_COST,N1_RS17_COST,N1_RS18_COST,N1_RS19_COST,N1_RS20_COST,N1_RS21_COST,N1_RS22_COST,N1_RS23_COST,N1_RS24_COST,N1_RS25_COST,N1_RS26_COST,N1_RS27_COST,N1_RS28_COST,N1_RS29_COST,N1_RS30_COST,N1_RS31_COST,N1_RS32_COST,N1_RS33_COST,N1_RS34_COST,N1_RS35_COST,N1_RS36_COST,N1_RS37_COST,N1_RS38_COST,N1_RS39_COST,N1_RS40_COST,N1_RS41_COST,N1_RS42_COST,N1_RS43_COST,N1_RS44_COST,N1_RS45_COST,N1_RS46_COST,N1_RS47_COST,N1_RS48_COST,N1_RS49_COST);
formula n1_mn_cost = min(N1_RS0_COST,N1_RS1_COST,N1_RS2_COST,N1_RS3_COST,N1_RS4_COST,N1_RS5_COST,N1_RS6_COST,N1_RS7_COST,N1_RS8_COST,N1_RS9_COST,N1_RS10_COST,N1_RS11_COST,N1_RS12_COST,N1_RS13_COST,N1_RS14_COST,N1_RS15_COST,N1_RS16_COST,N1_RS17_COST,N1_RS18_COST,N1_RS19_COST,N1_RS20_COST,N1_RS21_COST,N1_RS22_COST,N1_RS23_COST,N1_RS24_COST,N1_RS25_COST,N1_RS26_COST,N1_RS27_COST,N1_RS28_COST,N1_RS29_COST,N1_RS30_COST,N1_RS31_COST,N1_RS32_COST,N1_RS33_COST,N1_RS34_COST,N1_RS35_COST,N1_RS36_COST,N1_RS37_COST,N1_RS38_COST,N1_RS39_COST,N1_RS40_COST,N1_RS41_COST,N1_RS42_COST,N1_RS43_COST,N1_RS44_COST,N1_RS45_COST,N1_RS46_COST,N1_RS47_COST,N1_RS48_COST,N1_RS49_COST);
formula n1_uv_cost = (n1_mx_cost - n1_rs_cost) / (n1_mx_cost - n1_mn_cost);

//get the duration of selected node..
formula n1_rs_dur0=( (n1 = 0 & n1ev = 0) ? N1_RS0_DUR0 :( (n1 = 1 & n1ev = 0) ? N1_RS1_DUR0 :( (n1 = 2 & n1ev = 0) ? N1_RS2_DUR0 :( (n1 = 3 & n1ev = 0) ? N1_RS3_DUR0 :( (n1 = 4 & n1ev = 0) ? N1_RS4_DUR0 :( (n1 = 5 & n1ev = 0) ? N1_RS5_DUR0 :( (n1 = 6 & n1ev = 0) ? N1_RS6_DUR0 :( (n1 = 7 & n1ev = 0) ? N1_RS7_DUR0 :( (n1 = 8 & n1ev = 0) ? N1_RS8_DUR0 :( (n1 = 9 & n1ev = 0) ? N1_RS9_DUR0 :( (n1 = 10 & n1ev = 0) ? N1_RS10_DUR0 :( (n1 = 11 & n1ev = 0) ? N1_RS11_DUR0 :( (n1 = 12 & n1ev = 0) ? N1_RS12_DUR0 :( (n1 = 13 & n1ev = 0) ? N1_RS13_DUR0 :( (n1 = 14 & n1ev = 0) ? N1_RS14_DUR0 :( (n1 = 15 & n1ev = 0) ? N1_RS15_DUR0 :( (n1 = 16 & n1ev = 0) ? N1_RS16_DUR0 :( (n1 = 17 & n1ev = 0) ? N1_RS17_DUR0 :( (n1 = 18 & n1ev = 0) ? N1_RS18_DUR0 :( (n1 = 19 & n1ev = 0) ? N1_RS19_DUR0 :( (n1 = 20 & n1ev = 0) ? N1_RS20_DUR0 :( (n1 = 21 & n1ev = 0) ? N1_RS21_DUR0 :( (n1 = 22 & n1ev = 0) ? N1_RS22_DUR0 :( (n1 = 23 & n1ev = 0) ? N1_RS23_DUR0 :( (n1 = 24 & n1ev = 0) ? N1_RS24_DUR0 :( (n1 = 25 & n1ev = 0) ? N1_RS25_DUR0 :( (n1 = 26 & n1ev = 0) ? N1_RS26_DUR0 :( (n1 = 27 & n1ev = 0) ? N1_RS27_DUR0 :( (n1 = 28 & n1ev = 0) ? N1_RS28_DUR0 :( (n1 = 29 & n1ev = 0) ? N1_RS29_DUR0 :( (n1 = 30 & n1ev = 0) ? N1_RS30_DUR0 :( (n1 = 31 & n1ev = 0) ? N1_RS31_DUR0 :( (n1 = 32 & n1ev = 0) ? N1_RS32_DUR0 :( (n1 = 33 & n1ev = 0) ? N1_RS33_DUR0 :( (n1 = 34 & n1ev = 0) ? N1_RS34_DUR0 :( (n1 = 35 & n1ev = 0) ? N1_RS35_DUR0 :( (n1 = 36 & n1ev = 0) ? N1_RS36_DUR0 :( (n1 = 37 & n1ev = 0) ? N1_RS37_DUR0 :( (n1 = 38 & n1ev = 0) ? N1_RS38_DUR0 :( (n1 = 39 & n1ev = 0) ? N1_RS39_DUR0 :( (n1 = 40 & n1ev = 0) ? N1_RS40_DUR0 :( (n1 = 41 & n1ev = 0) ? N1_RS41_DUR0 :( (n1 = 42 & n1ev = 0) ? N1_RS42_DUR0 :( (n1 = 43 & n1ev = 0) ? N1_RS43_DUR0 :( (n1 = 44 & n1ev = 0) ? N1_RS44_DUR0 :( (n1 = 45 & n1ev = 0) ? N1_RS45_DUR0 :( (n1 = 46 & n1ev = 0) ? N1_RS46_DUR0 :( (n1 = 47 & n1ev = 0) ? N1_RS47_DUR0 :( (n1 = 48 & n1ev = 0) ? N1_RS48_DUR0 :( (n1 = 49 & n1ev = 0) ? N1_RS49_DUR0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_dur0 = max(N1_RS0_DUR0,N1_RS1_DUR0,N1_RS2_DUR0,N1_RS3_DUR0,N1_RS4_DUR0,N1_RS5_DUR0,N1_RS6_DUR0,N1_RS7_DUR0,N1_RS8_DUR0,N1_RS9_DUR0,N1_RS10_DUR0,N1_RS11_DUR0,N1_RS12_DUR0,N1_RS13_DUR0,N1_RS14_DUR0,N1_RS15_DUR0,N1_RS16_DUR0,N1_RS17_DUR0,N1_RS18_DUR0,N1_RS19_DUR0,N1_RS20_DUR0,N1_RS21_DUR0,N1_RS22_DUR0,N1_RS23_DUR0,N1_RS24_DUR0,N1_RS25_DUR0,N1_RS26_DUR0,N1_RS27_DUR0,N1_RS28_DUR0,N1_RS29_DUR0,N1_RS30_DUR0,N1_RS31_DUR0,N1_RS32_DUR0,N1_RS33_DUR0,N1_RS34_DUR0,N1_RS35_DUR0,N1_RS36_DUR0,N1_RS37_DUR0,N1_RS38_DUR0,N1_RS39_DUR0,N1_RS40_DUR0,N1_RS41_DUR0,N1_RS42_DUR0,N1_RS43_DUR0,N1_RS44_DUR0,N1_RS45_DUR0,N1_RS46_DUR0,N1_RS47_DUR0,N1_RS48_DUR0,N1_RS49_DUR0);
formula n1_mn_dur0 = min(N1_RS0_DUR0,N1_RS1_DUR0,N1_RS2_DUR0,N1_RS3_DUR0,N1_RS4_DUR0,N1_RS5_DUR0,N1_RS6_DUR0,N1_RS7_DUR0,N1_RS8_DUR0,N1_RS9_DUR0,N1_RS10_DUR0,N1_RS11_DUR0,N1_RS12_DUR0,N1_RS13_DUR0,N1_RS14_DUR0,N1_RS15_DUR0,N1_RS16_DUR0,N1_RS17_DUR0,N1_RS18_DUR0,N1_RS19_DUR0,N1_RS20_DUR0,N1_RS21_DUR0,N1_RS22_DUR0,N1_RS23_DUR0,N1_RS24_DUR0,N1_RS25_DUR0,N1_RS26_DUR0,N1_RS27_DUR0,N1_RS28_DUR0,N1_RS29_DUR0,N1_RS30_DUR0,N1_RS31_DUR0,N1_RS32_DUR0,N1_RS33_DUR0,N1_RS34_DUR0,N1_RS35_DUR0,N1_RS36_DUR0,N1_RS37_DUR0,N1_RS38_DUR0,N1_RS39_DUR0,N1_RS40_DUR0,N1_RS41_DUR0,N1_RS42_DUR0,N1_RS43_DUR0,N1_RS44_DUR0,N1_RS45_DUR0,N1_RS46_DUR0,N1_RS47_DUR0,N1_RS48_DUR0,N1_RS49_DUR0);
formula n1_uv_dur0 = (n1_mx_dur0 - n1_rs_dur0) / (n1_mx_dur0 - n1_mn_dur0);

formula n1_rs_dur1=( (n1 = 0 & n1ev = 1) ? N1_RS0_DUR1 :( (n1 = 1 & n1ev = 1) ? N1_RS1_DUR1 :( (n1 = 2 & n1ev = 1) ? N1_RS2_DUR1 :( (n1 = 3 & n1ev = 1) ? N1_RS3_DUR1 :( (n1 = 4 & n1ev = 1) ? N1_RS4_DUR1 :( (n1 = 5 & n1ev = 1) ? N1_RS5_DUR1 :( (n1 = 6 & n1ev = 1) ? N1_RS6_DUR1 :( (n1 = 7 & n1ev = 1) ? N1_RS7_DUR1 :( (n1 = 8 & n1ev = 1) ? N1_RS8_DUR1 :( (n1 = 9 & n1ev = 1) ? N1_RS9_DUR1 :( (n1 = 10 & n1ev = 1) ? N1_RS10_DUR1 :( (n1 = 11 & n1ev = 1) ? N1_RS11_DUR1 :( (n1 = 12 & n1ev = 1) ? N1_RS12_DUR1 :( (n1 = 13 & n1ev = 1) ? N1_RS13_DUR1 :( (n1 = 14 & n1ev = 1) ? N1_RS14_DUR1 :( (n1 = 15 & n1ev = 1) ? N1_RS15_DUR1 :( (n1 = 16 & n1ev = 1) ? N1_RS16_DUR1 :( (n1 = 17 & n1ev = 1) ? N1_RS17_DUR1 :( (n1 = 18 & n1ev = 1) ? N1_RS18_DUR1 :( (n1 = 19 & n1ev = 1) ? N1_RS19_DUR1 :( (n1 = 20 & n1ev = 1) ? N1_RS20_DUR1 :( (n1 = 21 & n1ev = 1) ? N1_RS21_DUR1 :( (n1 = 22 & n1ev = 1) ? N1_RS22_DUR1 :( (n1 = 23 & n1ev = 1) ? N1_RS23_DUR1 :( (n1 = 24 & n1ev = 1) ? N1_RS24_DUR1 :( (n1 = 25 & n1ev = 1) ? N1_RS25_DUR1 :( (n1 = 26 & n1ev = 1) ? N1_RS26_DUR1 :( (n1 = 27 & n1ev = 1) ? N1_RS27_DUR1 :( (n1 = 28 & n1ev = 1) ? N1_RS28_DUR1 :( (n1 = 29 & n1ev = 1) ? N1_RS29_DUR1 :( (n1 = 30 & n1ev = 1) ? N1_RS30_DUR1 :( (n1 = 31 & n1ev = 1) ? N1_RS31_DUR1 :( (n1 = 32 & n1ev = 1) ? N1_RS32_DUR1 :( (n1 = 33 & n1ev = 1) ? N1_RS33_DUR1 :( (n1 = 34 & n1ev = 1) ? N1_RS34_DUR1 :( (n1 = 35 & n1ev = 1) ? N1_RS35_DUR1 :( (n1 = 36 & n1ev = 1) ? N1_RS36_DUR1 :( (n1 = 37 & n1ev = 1) ? N1_RS37_DUR1 :( (n1 = 38 & n1ev = 1) ? N1_RS38_DUR1 :( (n1 = 39 & n1ev = 1) ? N1_RS39_DUR1 :( (n1 = 40 & n1ev = 1) ? N1_RS40_DUR1 :( (n1 = 41 & n1ev = 1) ? N1_RS41_DUR1 :( (n1 = 42 & n1ev = 1) ? N1_RS42_DUR1 :( (n1 = 43 & n1ev = 1) ? N1_RS43_DUR1 :( (n1 = 44 & n1ev = 1) ? N1_RS44_DUR1 :( (n1 = 45 & n1ev = 1) ? N1_RS45_DUR1 :( (n1 = 46 & n1ev = 1) ? N1_RS46_DUR1 :( (n1 = 47 & n1ev = 1) ? N1_RS47_DUR1 :( (n1 = 48 & n1ev = 1) ? N1_RS48_DUR1 :( (n1 = 49 & n1ev = 1) ? N1_RS49_DUR1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_dur1 = max(N1_RS0_DUR1,N1_RS1_DUR1,N1_RS2_DUR1,N1_RS3_DUR1,N1_RS4_DUR1,N1_RS5_DUR1,N1_RS6_DUR1,N1_RS7_DUR1,N1_RS8_DUR1,N1_RS9_DUR1,N1_RS10_DUR1,N1_RS11_DUR1,N1_RS12_DUR1,N1_RS13_DUR1,N1_RS14_DUR1,N1_RS15_DUR1,N1_RS16_DUR1,N1_RS17_DUR1,N1_RS18_DUR1,N1_RS19_DUR1,N1_RS20_DUR1,N1_RS21_DUR1,N1_RS22_DUR1,N1_RS23_DUR1,N1_RS24_DUR1,N1_RS25_DUR1,N1_RS26_DUR1,N1_RS27_DUR1,N1_RS28_DUR1,N1_RS29_DUR1,N1_RS30_DUR1,N1_RS31_DUR1,N1_RS32_DUR1,N1_RS33_DUR1,N1_RS34_DUR1,N1_RS35_DUR1,N1_RS36_DUR1,N1_RS37_DUR1,N1_RS38_DUR1,N1_RS39_DUR1,N1_RS40_DUR1,N1_RS41_DUR1,N1_RS42_DUR1,N1_RS43_DUR1,N1_RS44_DUR1,N1_RS45_DUR1,N1_RS46_DUR1,N1_RS47_DUR1,N1_RS48_DUR1,N1_RS49_DUR1);
formula n1_mn_dur1 = min(N1_RS0_DUR1,N1_RS1_DUR1,N1_RS2_DUR1,N1_RS3_DUR1,N1_RS4_DUR1,N1_RS5_DUR1,N1_RS6_DUR1,N1_RS7_DUR1,N1_RS8_DUR1,N1_RS9_DUR1,N1_RS10_DUR1,N1_RS11_DUR1,N1_RS12_DUR1,N1_RS13_DUR1,N1_RS14_DUR1,N1_RS15_DUR1,N1_RS16_DUR1,N1_RS17_DUR1,N1_RS18_DUR1,N1_RS19_DUR1,N1_RS20_DUR1,N1_RS21_DUR1,N1_RS22_DUR1,N1_RS23_DUR1,N1_RS24_DUR1,N1_RS25_DUR1,N1_RS26_DUR1,N1_RS27_DUR1,N1_RS28_DUR1,N1_RS29_DUR1,N1_RS30_DUR1,N1_RS31_DUR1,N1_RS32_DUR1,N1_RS33_DUR1,N1_RS34_DUR1,N1_RS35_DUR1,N1_RS36_DUR1,N1_RS37_DUR1,N1_RS38_DUR1,N1_RS39_DUR1,N1_RS40_DUR1,N1_RS41_DUR1,N1_RS42_DUR1,N1_RS43_DUR1,N1_RS44_DUR1,N1_RS45_DUR1,N1_RS46_DUR1,N1_RS47_DUR1,N1_RS48_DUR1,N1_RS49_DUR1);
formula n1_uv_dur1 = (n1_mx_dur1 - n1_rs_dur1) / (n1_mx_dur1 - n1_mn_dur1);

formula n1_rs_dur2=( (n1 = 0 & n1ev = 2) ? N1_RS0_DUR2 :( (n1 = 1 & n1ev = 2) ? N1_RS1_DUR2 :( (n1 = 2 & n1ev = 2) ? N1_RS2_DUR2 :( (n1 = 3 & n1ev = 2) ? N1_RS3_DUR2 :( (n1 = 4 & n1ev = 2) ? N1_RS4_DUR2 :( (n1 = 5 & n1ev = 2) ? N1_RS5_DUR2 :( (n1 = 6 & n1ev = 2) ? N1_RS6_DUR2 :( (n1 = 7 & n1ev = 2) ? N1_RS7_DUR2 :( (n1 = 8 & n1ev = 2) ? N1_RS8_DUR2 :( (n1 = 9 & n1ev = 2) ? N1_RS9_DUR2 :( (n1 = 10 & n1ev = 2) ? N1_RS10_DUR2 :( (n1 = 11 & n1ev = 2) ? N1_RS11_DUR2 :( (n1 = 12 & n1ev = 2) ? N1_RS12_DUR2 :( (n1 = 13 & n1ev = 2) ? N1_RS13_DUR2 :( (n1 = 14 & n1ev = 2) ? N1_RS14_DUR2 :( (n1 = 15 & n1ev = 2) ? N1_RS15_DUR2 :( (n1 = 16 & n1ev = 2) ? N1_RS16_DUR2 :( (n1 = 17 & n1ev = 2) ? N1_RS17_DUR2 :( (n1 = 18 & n1ev = 2) ? N1_RS18_DUR2 :( (n1 = 19 & n1ev = 2) ? N1_RS19_DUR2 :( (n1 = 20 & n1ev = 2) ? N1_RS20_DUR2 :( (n1 = 21 & n1ev = 2) ? N1_RS21_DUR2 :( (n1 = 22 & n1ev = 2) ? N1_RS22_DUR2 :( (n1 = 23 & n1ev = 2) ? N1_RS23_DUR2 :( (n1 = 24 & n1ev = 2) ? N1_RS24_DUR2 :( (n1 = 25 & n1ev = 2) ? N1_RS25_DUR2 :( (n1 = 26 & n1ev = 2) ? N1_RS26_DUR2 :( (n1 = 27 & n1ev = 2) ? N1_RS27_DUR2 :( (n1 = 28 & n1ev = 2) ? N1_RS28_DUR2 :( (n1 = 29 & n1ev = 2) ? N1_RS29_DUR2 :( (n1 = 30 & n1ev = 2) ? N1_RS30_DUR2 :( (n1 = 31 & n1ev = 2) ? N1_RS31_DUR2 :( (n1 = 32 & n1ev = 2) ? N1_RS32_DUR2 :( (n1 = 33 & n1ev = 2) ? N1_RS33_DUR2 :( (n1 = 34 & n1ev = 2) ? N1_RS34_DUR2 :( (n1 = 35 & n1ev = 2) ? N1_RS35_DUR2 :( (n1 = 36 & n1ev = 2) ? N1_RS36_DUR2 :( (n1 = 37 & n1ev = 2) ? N1_RS37_DUR2 :( (n1 = 38 & n1ev = 2) ? N1_RS38_DUR2 :( (n1 = 39 & n1ev = 2) ? N1_RS39_DUR2 :( (n1 = 40 & n1ev = 2) ? N1_RS40_DUR2 :( (n1 = 41 & n1ev = 2) ? N1_RS41_DUR2 :( (n1 = 42 & n1ev = 2) ? N1_RS42_DUR2 :( (n1 = 43 & n1ev = 2) ? N1_RS43_DUR2 :( (n1 = 44 & n1ev = 2) ? N1_RS44_DUR2 :( (n1 = 45 & n1ev = 2) ? N1_RS45_DUR2 :( (n1 = 46 & n1ev = 2) ? N1_RS46_DUR2 :( (n1 = 47 & n1ev = 2) ? N1_RS47_DUR2 :( (n1 = 48 & n1ev = 2) ? N1_RS48_DUR2 :( (n1 = 49 & n1ev = 2) ? N1_RS49_DUR2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_dur2 = max(N1_RS0_DUR2,N1_RS1_DUR2,N1_RS2_DUR2,N1_RS3_DUR2,N1_RS4_DUR2,N1_RS5_DUR2,N1_RS6_DUR2,N1_RS7_DUR2,N1_RS8_DUR2,N1_RS9_DUR2,N1_RS10_DUR2,N1_RS11_DUR2,N1_RS12_DUR2,N1_RS13_DUR2,N1_RS14_DUR2,N1_RS15_DUR2,N1_RS16_DUR2,N1_RS17_DUR2,N1_RS18_DUR2,N1_RS19_DUR2,N1_RS20_DUR2,N1_RS21_DUR2,N1_RS22_DUR2,N1_RS23_DUR2,N1_RS24_DUR2,N1_RS25_DUR2,N1_RS26_DUR2,N1_RS27_DUR2,N1_RS28_DUR2,N1_RS29_DUR2,N1_RS30_DUR2,N1_RS31_DUR2,N1_RS32_DUR2,N1_RS33_DUR2,N1_RS34_DUR2,N1_RS35_DUR2,N1_RS36_DUR2,N1_RS37_DUR2,N1_RS38_DUR2,N1_RS39_DUR2,N1_RS40_DUR2,N1_RS41_DUR2,N1_RS42_DUR2,N1_RS43_DUR2,N1_RS44_DUR2,N1_RS45_DUR2,N1_RS46_DUR2,N1_RS47_DUR2,N1_RS48_DUR2,N1_RS49_DUR2);
formula n1_mn_dur2 = min(N1_RS0_DUR2,N1_RS1_DUR2,N1_RS2_DUR2,N1_RS3_DUR2,N1_RS4_DUR2,N1_RS5_DUR2,N1_RS6_DUR2,N1_RS7_DUR2,N1_RS8_DUR2,N1_RS9_DUR2,N1_RS10_DUR2,N1_RS11_DUR2,N1_RS12_DUR2,N1_RS13_DUR2,N1_RS14_DUR2,N1_RS15_DUR2,N1_RS16_DUR2,N1_RS17_DUR2,N1_RS18_DUR2,N1_RS19_DUR2,N1_RS20_DUR2,N1_RS21_DUR2,N1_RS22_DUR2,N1_RS23_DUR2,N1_RS24_DUR2,N1_RS25_DUR2,N1_RS26_DUR2,N1_RS27_DUR2,N1_RS28_DUR2,N1_RS29_DUR2,N1_RS30_DUR2,N1_RS31_DUR2,N1_RS32_DUR2,N1_RS33_DUR2,N1_RS34_DUR2,N1_RS35_DUR2,N1_RS36_DUR2,N1_RS37_DUR2,N1_RS38_DUR2,N1_RS39_DUR2,N1_RS40_DUR2,N1_RS41_DUR2,N1_RS42_DUR2,N1_RS43_DUR2,N1_RS44_DUR2,N1_RS45_DUR2,N1_RS46_DUR2,N1_RS47_DUR2,N1_RS48_DUR2,N1_RS49_DUR2);
formula n1_uv_dur2 = (n1_mx_dur2 - n1_rs_dur2) / (n1_mx_dur2 - n1_mn_dur2);

formula n1_rs_dur3=( (n1 = 0 & n1ev = 3) ? N1_RS0_DUR3 :( (n1 = 1 & n1ev = 3) ? N1_RS1_DUR3 :( (n1 = 2 & n1ev = 3) ? N1_RS2_DUR3 :( (n1 = 3 & n1ev = 3) ? N1_RS3_DUR3 :( (n1 = 4 & n1ev = 3) ? N1_RS4_DUR3 :( (n1 = 5 & n1ev = 3) ? N1_RS5_DUR3 :( (n1 = 6 & n1ev = 3) ? N1_RS6_DUR3 :( (n1 = 7 & n1ev = 3) ? N1_RS7_DUR3 :( (n1 = 8 & n1ev = 3) ? N1_RS8_DUR3 :( (n1 = 9 & n1ev = 3) ? N1_RS9_DUR3 :( (n1 = 10 & n1ev = 3) ? N1_RS10_DUR3 :( (n1 = 11 & n1ev = 3) ? N1_RS11_DUR3 :( (n1 = 12 & n1ev = 3) ? N1_RS12_DUR3 :( (n1 = 13 & n1ev = 3) ? N1_RS13_DUR3 :( (n1 = 14 & n1ev = 3) ? N1_RS14_DUR3 :( (n1 = 15 & n1ev = 3) ? N1_RS15_DUR3 :( (n1 = 16 & n1ev = 3) ? N1_RS16_DUR3 :( (n1 = 17 & n1ev = 3) ? N1_RS17_DUR3 :( (n1 = 18 & n1ev = 3) ? N1_RS18_DUR3 :( (n1 = 19 & n1ev = 3) ? N1_RS19_DUR3 :( (n1 = 20 & n1ev = 3) ? N1_RS20_DUR3 :( (n1 = 21 & n1ev = 3) ? N1_RS21_DUR3 :( (n1 = 22 & n1ev = 3) ? N1_RS22_DUR3 :( (n1 = 23 & n1ev = 3) ? N1_RS23_DUR3 :( (n1 = 24 & n1ev = 3) ? N1_RS24_DUR3 :( (n1 = 25 & n1ev = 3) ? N1_RS25_DUR3 :( (n1 = 26 & n1ev = 3) ? N1_RS26_DUR3 :( (n1 = 27 & n1ev = 3) ? N1_RS27_DUR3 :( (n1 = 28 & n1ev = 3) ? N1_RS28_DUR3 :( (n1 = 29 & n1ev = 3) ? N1_RS29_DUR3 :( (n1 = 30 & n1ev = 3) ? N1_RS30_DUR3 :( (n1 = 31 & n1ev = 3) ? N1_RS31_DUR3 :( (n1 = 32 & n1ev = 3) ? N1_RS32_DUR3 :( (n1 = 33 & n1ev = 3) ? N1_RS33_DUR3 :( (n1 = 34 & n1ev = 3) ? N1_RS34_DUR3 :( (n1 = 35 & n1ev = 3) ? N1_RS35_DUR3 :( (n1 = 36 & n1ev = 3) ? N1_RS36_DUR3 :( (n1 = 37 & n1ev = 3) ? N1_RS37_DUR3 :( (n1 = 38 & n1ev = 3) ? N1_RS38_DUR3 :( (n1 = 39 & n1ev = 3) ? N1_RS39_DUR3 :( (n1 = 40 & n1ev = 3) ? N1_RS40_DUR3 :( (n1 = 41 & n1ev = 3) ? N1_RS41_DUR3 :( (n1 = 42 & n1ev = 3) ? N1_RS42_DUR3 :( (n1 = 43 & n1ev = 3) ? N1_RS43_DUR3 :( (n1 = 44 & n1ev = 3) ? N1_RS44_DUR3 :( (n1 = 45 & n1ev = 3) ? N1_RS45_DUR3 :( (n1 = 46 & n1ev = 3) ? N1_RS46_DUR3 :( (n1 = 47 & n1ev = 3) ? N1_RS47_DUR3 :( (n1 = 48 & n1ev = 3) ? N1_RS48_DUR3 :( (n1 = 49 & n1ev = 3) ? N1_RS49_DUR3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_dur3 = max(N1_RS0_DUR3,N1_RS1_DUR3,N1_RS2_DUR3,N1_RS3_DUR3,N1_RS4_DUR3,N1_RS5_DUR3,N1_RS6_DUR3,N1_RS7_DUR3,N1_RS8_DUR3,N1_RS9_DUR3,N1_RS10_DUR3,N1_RS11_DUR3,N1_RS12_DUR3,N1_RS13_DUR3,N1_RS14_DUR3,N1_RS15_DUR3,N1_RS16_DUR3,N1_RS17_DUR3,N1_RS18_DUR3,N1_RS19_DUR3,N1_RS20_DUR3,N1_RS21_DUR3,N1_RS22_DUR3,N1_RS23_DUR3,N1_RS24_DUR3,N1_RS25_DUR3,N1_RS26_DUR3,N1_RS27_DUR3,N1_RS28_DUR3,N1_RS29_DUR3,N1_RS30_DUR3,N1_RS31_DUR3,N1_RS32_DUR3,N1_RS33_DUR3,N1_RS34_DUR3,N1_RS35_DUR3,N1_RS36_DUR3,N1_RS37_DUR3,N1_RS38_DUR3,N1_RS39_DUR3,N1_RS40_DUR3,N1_RS41_DUR3,N1_RS42_DUR3,N1_RS43_DUR3,N1_RS44_DUR3,N1_RS45_DUR3,N1_RS46_DUR3,N1_RS47_DUR3,N1_RS48_DUR3,N1_RS49_DUR3);
formula n1_mn_dur3 = min(N1_RS0_DUR3,N1_RS1_DUR3,N1_RS2_DUR3,N1_RS3_DUR3,N1_RS4_DUR3,N1_RS5_DUR3,N1_RS6_DUR3,N1_RS7_DUR3,N1_RS8_DUR3,N1_RS9_DUR3,N1_RS10_DUR3,N1_RS11_DUR3,N1_RS12_DUR3,N1_RS13_DUR3,N1_RS14_DUR3,N1_RS15_DUR3,N1_RS16_DUR3,N1_RS17_DUR3,N1_RS18_DUR3,N1_RS19_DUR3,N1_RS20_DUR3,N1_RS21_DUR3,N1_RS22_DUR3,N1_RS23_DUR3,N1_RS24_DUR3,N1_RS25_DUR3,N1_RS26_DUR3,N1_RS27_DUR3,N1_RS28_DUR3,N1_RS29_DUR3,N1_RS30_DUR3,N1_RS31_DUR3,N1_RS32_DUR3,N1_RS33_DUR3,N1_RS34_DUR3,N1_RS35_DUR3,N1_RS36_DUR3,N1_RS37_DUR3,N1_RS38_DUR3,N1_RS39_DUR3,N1_RS40_DUR3,N1_RS41_DUR3,N1_RS42_DUR3,N1_RS43_DUR3,N1_RS44_DUR3,N1_RS45_DUR3,N1_RS46_DUR3,N1_RS47_DUR3,N1_RS48_DUR3,N1_RS49_DUR3);
formula n1_uv_dur3 = (n1_mx_dur3 - n1_rs_dur3) / (n1_mx_dur3 - n1_mn_dur3);

formula n1_rs_dur4=( (n1 = 0 & n1ev = 4) ? N1_RS0_DUR4 :( (n1 = 1 & n1ev = 4) ? N1_RS1_DUR4 :( (n1 = 2 & n1ev = 4) ? N1_RS2_DUR4 :( (n1 = 3 & n1ev = 4) ? N1_RS3_DUR4 :( (n1 = 4 & n1ev = 4) ? N1_RS4_DUR4 :( (n1 = 5 & n1ev = 4) ? N1_RS5_DUR4 :( (n1 = 6 & n1ev = 4) ? N1_RS6_DUR4 :( (n1 = 7 & n1ev = 4) ? N1_RS7_DUR4 :( (n1 = 8 & n1ev = 4) ? N1_RS8_DUR4 :( (n1 = 9 & n1ev = 4) ? N1_RS9_DUR4 :( (n1 = 10 & n1ev = 4) ? N1_RS10_DUR4 :( (n1 = 11 & n1ev = 4) ? N1_RS11_DUR4 :( (n1 = 12 & n1ev = 4) ? N1_RS12_DUR4 :( (n1 = 13 & n1ev = 4) ? N1_RS13_DUR4 :( (n1 = 14 & n1ev = 4) ? N1_RS14_DUR4 :( (n1 = 15 & n1ev = 4) ? N1_RS15_DUR4 :( (n1 = 16 & n1ev = 4) ? N1_RS16_DUR4 :( (n1 = 17 & n1ev = 4) ? N1_RS17_DUR4 :( (n1 = 18 & n1ev = 4) ? N1_RS18_DUR4 :( (n1 = 19 & n1ev = 4) ? N1_RS19_DUR4 :( (n1 = 20 & n1ev = 4) ? N1_RS20_DUR4 :( (n1 = 21 & n1ev = 4) ? N1_RS21_DUR4 :( (n1 = 22 & n1ev = 4) ? N1_RS22_DUR4 :( (n1 = 23 & n1ev = 4) ? N1_RS23_DUR4 :( (n1 = 24 & n1ev = 4) ? N1_RS24_DUR4 :( (n1 = 25 & n1ev = 4) ? N1_RS25_DUR4 :( (n1 = 26 & n1ev = 4) ? N1_RS26_DUR4 :( (n1 = 27 & n1ev = 4) ? N1_RS27_DUR4 :( (n1 = 28 & n1ev = 4) ? N1_RS28_DUR4 :( (n1 = 29 & n1ev = 4) ? N1_RS29_DUR4 :( (n1 = 30 & n1ev = 4) ? N1_RS30_DUR4 :( (n1 = 31 & n1ev = 4) ? N1_RS31_DUR4 :( (n1 = 32 & n1ev = 4) ? N1_RS32_DUR4 :( (n1 = 33 & n1ev = 4) ? N1_RS33_DUR4 :( (n1 = 34 & n1ev = 4) ? N1_RS34_DUR4 :( (n1 = 35 & n1ev = 4) ? N1_RS35_DUR4 :( (n1 = 36 & n1ev = 4) ? N1_RS36_DUR4 :( (n1 = 37 & n1ev = 4) ? N1_RS37_DUR4 :( (n1 = 38 & n1ev = 4) ? N1_RS38_DUR4 :( (n1 = 39 & n1ev = 4) ? N1_RS39_DUR4 :( (n1 = 40 & n1ev = 4) ? N1_RS40_DUR4 :( (n1 = 41 & n1ev = 4) ? N1_RS41_DUR4 :( (n1 = 42 & n1ev = 4) ? N1_RS42_DUR4 :( (n1 = 43 & n1ev = 4) ? N1_RS43_DUR4 :( (n1 = 44 & n1ev = 4) ? N1_RS44_DUR4 :( (n1 = 45 & n1ev = 4) ? N1_RS45_DUR4 :( (n1 = 46 & n1ev = 4) ? N1_RS46_DUR4 :( (n1 = 47 & n1ev = 4) ? N1_RS47_DUR4 :( (n1 = 48 & n1ev = 4) ? N1_RS48_DUR4 :( (n1 = 49 & n1ev = 4) ? N1_RS49_DUR4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_dur4 = max(N1_RS0_DUR4,N1_RS1_DUR4,N1_RS2_DUR4,N1_RS3_DUR4,N1_RS4_DUR4,N1_RS5_DUR4,N1_RS6_DUR4,N1_RS7_DUR4,N1_RS8_DUR4,N1_RS9_DUR4,N1_RS10_DUR4,N1_RS11_DUR4,N1_RS12_DUR4,N1_RS13_DUR4,N1_RS14_DUR4,N1_RS15_DUR4,N1_RS16_DUR4,N1_RS17_DUR4,N1_RS18_DUR4,N1_RS19_DUR4,N1_RS20_DUR4,N1_RS21_DUR4,N1_RS22_DUR4,N1_RS23_DUR4,N1_RS24_DUR4,N1_RS25_DUR4,N1_RS26_DUR4,N1_RS27_DUR4,N1_RS28_DUR4,N1_RS29_DUR4,N1_RS30_DUR4,N1_RS31_DUR4,N1_RS32_DUR4,N1_RS33_DUR4,N1_RS34_DUR4,N1_RS35_DUR4,N1_RS36_DUR4,N1_RS37_DUR4,N1_RS38_DUR4,N1_RS39_DUR4,N1_RS40_DUR4,N1_RS41_DUR4,N1_RS42_DUR4,N1_RS43_DUR4,N1_RS44_DUR4,N1_RS45_DUR4,N1_RS46_DUR4,N1_RS47_DUR4,N1_RS48_DUR4,N1_RS49_DUR4);
formula n1_mn_dur4 = min(N1_RS0_DUR4,N1_RS1_DUR4,N1_RS2_DUR4,N1_RS3_DUR4,N1_RS4_DUR4,N1_RS5_DUR4,N1_RS6_DUR4,N1_RS7_DUR4,N1_RS8_DUR4,N1_RS9_DUR4,N1_RS10_DUR4,N1_RS11_DUR4,N1_RS12_DUR4,N1_RS13_DUR4,N1_RS14_DUR4,N1_RS15_DUR4,N1_RS16_DUR4,N1_RS17_DUR4,N1_RS18_DUR4,N1_RS19_DUR4,N1_RS20_DUR4,N1_RS21_DUR4,N1_RS22_DUR4,N1_RS23_DUR4,N1_RS24_DUR4,N1_RS25_DUR4,N1_RS26_DUR4,N1_RS27_DUR4,N1_RS28_DUR4,N1_RS29_DUR4,N1_RS30_DUR4,N1_RS31_DUR4,N1_RS32_DUR4,N1_RS33_DUR4,N1_RS34_DUR4,N1_RS35_DUR4,N1_RS36_DUR4,N1_RS37_DUR4,N1_RS38_DUR4,N1_RS39_DUR4,N1_RS40_DUR4,N1_RS41_DUR4,N1_RS42_DUR4,N1_RS43_DUR4,N1_RS44_DUR4,N1_RS45_DUR4,N1_RS46_DUR4,N1_RS47_DUR4,N1_RS48_DUR4,N1_RS49_DUR4);
formula n1_uv_dur4 = (n1_mx_dur4 - n1_rs_dur4) / (n1_mx_dur4 - n1_mn_dur4);

//get the reliability of selected node..
formula n1_rs_rel0=( (n1 = 0 & n1ev = 0) ? N1_RS0_REL0 :( (n1 = 1 & n1ev = 0) ? N1_RS1_REL0 :( (n1 = 2 & n1ev = 0) ? N1_RS2_REL0 :( (n1 = 3 & n1ev = 0) ? N1_RS3_REL0 :( (n1 = 4 & n1ev = 0) ? N1_RS4_REL0 :( (n1 = 5 & n1ev = 0) ? N1_RS5_REL0 :( (n1 = 6 & n1ev = 0) ? N1_RS6_REL0 :( (n1 = 7 & n1ev = 0) ? N1_RS7_REL0 :( (n1 = 8 & n1ev = 0) ? N1_RS8_REL0 :( (n1 = 9 & n1ev = 0) ? N1_RS9_REL0 :( (n1 = 10 & n1ev = 0) ? N1_RS10_REL0 :( (n1 = 11 & n1ev = 0) ? N1_RS11_REL0 :( (n1 = 12 & n1ev = 0) ? N1_RS12_REL0 :( (n1 = 13 & n1ev = 0) ? N1_RS13_REL0 :( (n1 = 14 & n1ev = 0) ? N1_RS14_REL0 :( (n1 = 15 & n1ev = 0) ? N1_RS15_REL0 :( (n1 = 16 & n1ev = 0) ? N1_RS16_REL0 :( (n1 = 17 & n1ev = 0) ? N1_RS17_REL0 :( (n1 = 18 & n1ev = 0) ? N1_RS18_REL0 :( (n1 = 19 & n1ev = 0) ? N1_RS19_REL0 :( (n1 = 20 & n1ev = 0) ? N1_RS20_REL0 :( (n1 = 21 & n1ev = 0) ? N1_RS21_REL0 :( (n1 = 22 & n1ev = 0) ? N1_RS22_REL0 :( (n1 = 23 & n1ev = 0) ? N1_RS23_REL0 :( (n1 = 24 & n1ev = 0) ? N1_RS24_REL0 :( (n1 = 25 & n1ev = 0) ? N1_RS25_REL0 :( (n1 = 26 & n1ev = 0) ? N1_RS26_REL0 :( (n1 = 27 & n1ev = 0) ? N1_RS27_REL0 :( (n1 = 28 & n1ev = 0) ? N1_RS28_REL0 :( (n1 = 29 & n1ev = 0) ? N1_RS29_REL0 :( (n1 = 30 & n1ev = 0) ? N1_RS30_REL0 :( (n1 = 31 & n1ev = 0) ? N1_RS31_REL0 :( (n1 = 32 & n1ev = 0) ? N1_RS32_REL0 :( (n1 = 33 & n1ev = 0) ? N1_RS33_REL0 :( (n1 = 34 & n1ev = 0) ? N1_RS34_REL0 :( (n1 = 35 & n1ev = 0) ? N1_RS35_REL0 :( (n1 = 36 & n1ev = 0) ? N1_RS36_REL0 :( (n1 = 37 & n1ev = 0) ? N1_RS37_REL0 :( (n1 = 38 & n1ev = 0) ? N1_RS38_REL0 :( (n1 = 39 & n1ev = 0) ? N1_RS39_REL0 :( (n1 = 40 & n1ev = 0) ? N1_RS40_REL0 :( (n1 = 41 & n1ev = 0) ? N1_RS41_REL0 :( (n1 = 42 & n1ev = 0) ? N1_RS42_REL0 :( (n1 = 43 & n1ev = 0) ? N1_RS43_REL0 :( (n1 = 44 & n1ev = 0) ? N1_RS44_REL0 :( (n1 = 45 & n1ev = 0) ? N1_RS45_REL0 :( (n1 = 46 & n1ev = 0) ? N1_RS46_REL0 :( (n1 = 47 & n1ev = 0) ? N1_RS47_REL0 :( (n1 = 48 & n1ev = 0) ? N1_RS48_REL0 :( (n1 = 49 & n1ev = 0) ? N1_RS49_REL0 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_rel0 = max(N1_RS0_REL0,N1_RS1_REL0,N1_RS2_REL0,N1_RS3_REL0,N1_RS4_REL0,N1_RS5_REL0,N1_RS6_REL0,N1_RS7_REL0,N1_RS8_REL0,N1_RS9_REL0,N1_RS10_REL0,N1_RS11_REL0,N1_RS12_REL0,N1_RS13_REL0,N1_RS14_REL0,N1_RS15_REL0,N1_RS16_REL0,N1_RS17_REL0,N1_RS18_REL0,N1_RS19_REL0,N1_RS20_REL0,N1_RS21_REL0,N1_RS22_REL0,N1_RS23_REL0,N1_RS24_REL0,N1_RS25_REL0,N1_RS26_REL0,N1_RS27_REL0,N1_RS28_REL0,N1_RS29_REL0,N1_RS30_REL0,N1_RS31_REL0,N1_RS32_REL0,N1_RS33_REL0,N1_RS34_REL0,N1_RS35_REL0,N1_RS36_REL0,N1_RS37_REL0,N1_RS38_REL0,N1_RS39_REL0,N1_RS40_REL0,N1_RS41_REL0,N1_RS42_REL0,N1_RS43_REL0,N1_RS44_REL0,N1_RS45_REL0,N1_RS46_REL0,N1_RS47_REL0,N1_RS48_REL0,N1_RS49_REL0);
formula n1_mn_rel0 = min(N1_RS0_REL0,N1_RS1_REL0,N1_RS2_REL0,N1_RS3_REL0,N1_RS4_REL0,N1_RS5_REL0,N1_RS6_REL0,N1_RS7_REL0,N1_RS8_REL0,N1_RS9_REL0,N1_RS10_REL0,N1_RS11_REL0,N1_RS12_REL0,N1_RS13_REL0,N1_RS14_REL0,N1_RS15_REL0,N1_RS16_REL0,N1_RS17_REL0,N1_RS18_REL0,N1_RS19_REL0,N1_RS20_REL0,N1_RS21_REL0,N1_RS22_REL0,N1_RS23_REL0,N1_RS24_REL0,N1_RS25_REL0,N1_RS26_REL0,N1_RS27_REL0,N1_RS28_REL0,N1_RS29_REL0,N1_RS30_REL0,N1_RS31_REL0,N1_RS32_REL0,N1_RS33_REL0,N1_RS34_REL0,N1_RS35_REL0,N1_RS36_REL0,N1_RS37_REL0,N1_RS38_REL0,N1_RS39_REL0,N1_RS40_REL0,N1_RS41_REL0,N1_RS42_REL0,N1_RS43_REL0,N1_RS44_REL0,N1_RS45_REL0,N1_RS46_REL0,N1_RS47_REL0,N1_RS48_REL0,N1_RS49_REL0);
formula n1_uv_rel0 = (n1_mx_rel0 - n1_rs_rel0) / (n1_mx_rel0 - n1_mn_rel0);

formula n1_rs_rel1=( (n1 = 0 & n1ev = 1) ? N1_RS0_REL1 :( (n1 = 1 & n1ev = 1) ? N1_RS1_REL1 :( (n1 = 2 & n1ev = 1) ? N1_RS2_REL1 :( (n1 = 3 & n1ev = 1) ? N1_RS3_REL1 :( (n1 = 4 & n1ev = 1) ? N1_RS4_REL1 :( (n1 = 5 & n1ev = 1) ? N1_RS5_REL1 :( (n1 = 6 & n1ev = 1) ? N1_RS6_REL1 :( (n1 = 7 & n1ev = 1) ? N1_RS7_REL1 :( (n1 = 8 & n1ev = 1) ? N1_RS8_REL1 :( (n1 = 9 & n1ev = 1) ? N1_RS9_REL1 :( (n1 = 10 & n1ev = 1) ? N1_RS10_REL1 :( (n1 = 11 & n1ev = 1) ? N1_RS11_REL1 :( (n1 = 12 & n1ev = 1) ? N1_RS12_REL1 :( (n1 = 13 & n1ev = 1) ? N1_RS13_REL1 :( (n1 = 14 & n1ev = 1) ? N1_RS14_REL1 :( (n1 = 15 & n1ev = 1) ? N1_RS15_REL1 :( (n1 = 16 & n1ev = 1) ? N1_RS16_REL1 :( (n1 = 17 & n1ev = 1) ? N1_RS17_REL1 :( (n1 = 18 & n1ev = 1) ? N1_RS18_REL1 :( (n1 = 19 & n1ev = 1) ? N1_RS19_REL1 :( (n1 = 20 & n1ev = 1) ? N1_RS20_REL1 :( (n1 = 21 & n1ev = 1) ? N1_RS21_REL1 :( (n1 = 22 & n1ev = 1) ? N1_RS22_REL1 :( (n1 = 23 & n1ev = 1) ? N1_RS23_REL1 :( (n1 = 24 & n1ev = 1) ? N1_RS24_REL1 :( (n1 = 25 & n1ev = 1) ? N1_RS25_REL1 :( (n1 = 26 & n1ev = 1) ? N1_RS26_REL1 :( (n1 = 27 & n1ev = 1) ? N1_RS27_REL1 :( (n1 = 28 & n1ev = 1) ? N1_RS28_REL1 :( (n1 = 29 & n1ev = 1) ? N1_RS29_REL1 :( (n1 = 30 & n1ev = 1) ? N1_RS30_REL1 :( (n1 = 31 & n1ev = 1) ? N1_RS31_REL1 :( (n1 = 32 & n1ev = 1) ? N1_RS32_REL1 :( (n1 = 33 & n1ev = 1) ? N1_RS33_REL1 :( (n1 = 34 & n1ev = 1) ? N1_RS34_REL1 :( (n1 = 35 & n1ev = 1) ? N1_RS35_REL1 :( (n1 = 36 & n1ev = 1) ? N1_RS36_REL1 :( (n1 = 37 & n1ev = 1) ? N1_RS37_REL1 :( (n1 = 38 & n1ev = 1) ? N1_RS38_REL1 :( (n1 = 39 & n1ev = 1) ? N1_RS39_REL1 :( (n1 = 40 & n1ev = 1) ? N1_RS40_REL1 :( (n1 = 41 & n1ev = 1) ? N1_RS41_REL1 :( (n1 = 42 & n1ev = 1) ? N1_RS42_REL1 :( (n1 = 43 & n1ev = 1) ? N1_RS43_REL1 :( (n1 = 44 & n1ev = 1) ? N1_RS44_REL1 :( (n1 = 45 & n1ev = 1) ? N1_RS45_REL1 :( (n1 = 46 & n1ev = 1) ? N1_RS46_REL1 :( (n1 = 47 & n1ev = 1) ? N1_RS47_REL1 :( (n1 = 48 & n1ev = 1) ? N1_RS48_REL1 :( (n1 = 49 & n1ev = 1) ? N1_RS49_REL1 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_rel1 = max(N1_RS0_REL1,N1_RS1_REL1,N1_RS2_REL1,N1_RS3_REL1,N1_RS4_REL1,N1_RS5_REL1,N1_RS6_REL1,N1_RS7_REL1,N1_RS8_REL1,N1_RS9_REL1,N1_RS10_REL1,N1_RS11_REL1,N1_RS12_REL1,N1_RS13_REL1,N1_RS14_REL1,N1_RS15_REL1,N1_RS16_REL1,N1_RS17_REL1,N1_RS18_REL1,N1_RS19_REL1,N1_RS20_REL1,N1_RS21_REL1,N1_RS22_REL1,N1_RS23_REL1,N1_RS24_REL1,N1_RS25_REL1,N1_RS26_REL1,N1_RS27_REL1,N1_RS28_REL1,N1_RS29_REL1,N1_RS30_REL1,N1_RS31_REL1,N1_RS32_REL1,N1_RS33_REL1,N1_RS34_REL1,N1_RS35_REL1,N1_RS36_REL1,N1_RS37_REL1,N1_RS38_REL1,N1_RS39_REL1,N1_RS40_REL1,N1_RS41_REL1,N1_RS42_REL1,N1_RS43_REL1,N1_RS44_REL1,N1_RS45_REL1,N1_RS46_REL1,N1_RS47_REL1,N1_RS48_REL1,N1_RS49_REL1);
formula n1_mn_rel1 = min(N1_RS0_REL1,N1_RS1_REL1,N1_RS2_REL1,N1_RS3_REL1,N1_RS4_REL1,N1_RS5_REL1,N1_RS6_REL1,N1_RS7_REL1,N1_RS8_REL1,N1_RS9_REL1,N1_RS10_REL1,N1_RS11_REL1,N1_RS12_REL1,N1_RS13_REL1,N1_RS14_REL1,N1_RS15_REL1,N1_RS16_REL1,N1_RS17_REL1,N1_RS18_REL1,N1_RS19_REL1,N1_RS20_REL1,N1_RS21_REL1,N1_RS22_REL1,N1_RS23_REL1,N1_RS24_REL1,N1_RS25_REL1,N1_RS26_REL1,N1_RS27_REL1,N1_RS28_REL1,N1_RS29_REL1,N1_RS30_REL1,N1_RS31_REL1,N1_RS32_REL1,N1_RS33_REL1,N1_RS34_REL1,N1_RS35_REL1,N1_RS36_REL1,N1_RS37_REL1,N1_RS38_REL1,N1_RS39_REL1,N1_RS40_REL1,N1_RS41_REL1,N1_RS42_REL1,N1_RS43_REL1,N1_RS44_REL1,N1_RS45_REL1,N1_RS46_REL1,N1_RS47_REL1,N1_RS48_REL1,N1_RS49_REL1);
formula n1_uv_rel1 = (n1_mx_rel1 - n1_rs_rel1) / (n1_mx_rel1 - n1_mn_rel1);

formula n1_rs_rel2=( (n1 = 0 & n1ev = 2) ? N1_RS0_REL2 :( (n1 = 1 & n1ev = 2) ? N1_RS1_REL2 :( (n1 = 2 & n1ev = 2) ? N1_RS2_REL2 :( (n1 = 3 & n1ev = 2) ? N1_RS3_REL2 :( (n1 = 4 & n1ev = 2) ? N1_RS4_REL2 :( (n1 = 5 & n1ev = 2) ? N1_RS5_REL2 :( (n1 = 6 & n1ev = 2) ? N1_RS6_REL2 :( (n1 = 7 & n1ev = 2) ? N1_RS7_REL2 :( (n1 = 8 & n1ev = 2) ? N1_RS8_REL2 :( (n1 = 9 & n1ev = 2) ? N1_RS9_REL2 :( (n1 = 10 & n1ev = 2) ? N1_RS10_REL2 :( (n1 = 11 & n1ev = 2) ? N1_RS11_REL2 :( (n1 = 12 & n1ev = 2) ? N1_RS12_REL2 :( (n1 = 13 & n1ev = 2) ? N1_RS13_REL2 :( (n1 = 14 & n1ev = 2) ? N1_RS14_REL2 :( (n1 = 15 & n1ev = 2) ? N1_RS15_REL2 :( (n1 = 16 & n1ev = 2) ? N1_RS16_REL2 :( (n1 = 17 & n1ev = 2) ? N1_RS17_REL2 :( (n1 = 18 & n1ev = 2) ? N1_RS18_REL2 :( (n1 = 19 & n1ev = 2) ? N1_RS19_REL2 :( (n1 = 20 & n1ev = 2) ? N1_RS20_REL2 :( (n1 = 21 & n1ev = 2) ? N1_RS21_REL2 :( (n1 = 22 & n1ev = 2) ? N1_RS22_REL2 :( (n1 = 23 & n1ev = 2) ? N1_RS23_REL2 :( (n1 = 24 & n1ev = 2) ? N1_RS24_REL2 :( (n1 = 25 & n1ev = 2) ? N1_RS25_REL2 :( (n1 = 26 & n1ev = 2) ? N1_RS26_REL2 :( (n1 = 27 & n1ev = 2) ? N1_RS27_REL2 :( (n1 = 28 & n1ev = 2) ? N1_RS28_REL2 :( (n1 = 29 & n1ev = 2) ? N1_RS29_REL2 :( (n1 = 30 & n1ev = 2) ? N1_RS30_REL2 :( (n1 = 31 & n1ev = 2) ? N1_RS31_REL2 :( (n1 = 32 & n1ev = 2) ? N1_RS32_REL2 :( (n1 = 33 & n1ev = 2) ? N1_RS33_REL2 :( (n1 = 34 & n1ev = 2) ? N1_RS34_REL2 :( (n1 = 35 & n1ev = 2) ? N1_RS35_REL2 :( (n1 = 36 & n1ev = 2) ? N1_RS36_REL2 :( (n1 = 37 & n1ev = 2) ? N1_RS37_REL2 :( (n1 = 38 & n1ev = 2) ? N1_RS38_REL2 :( (n1 = 39 & n1ev = 2) ? N1_RS39_REL2 :( (n1 = 40 & n1ev = 2) ? N1_RS40_REL2 :( (n1 = 41 & n1ev = 2) ? N1_RS41_REL2 :( (n1 = 42 & n1ev = 2) ? N1_RS42_REL2 :( (n1 = 43 & n1ev = 2) ? N1_RS43_REL2 :( (n1 = 44 & n1ev = 2) ? N1_RS44_REL2 :( (n1 = 45 & n1ev = 2) ? N1_RS45_REL2 :( (n1 = 46 & n1ev = 2) ? N1_RS46_REL2 :( (n1 = 47 & n1ev = 2) ? N1_RS47_REL2 :( (n1 = 48 & n1ev = 2) ? N1_RS48_REL2 :( (n1 = 49 & n1ev = 2) ? N1_RS49_REL2 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_rel2 = max(N1_RS0_REL2,N1_RS1_REL2,N1_RS2_REL2,N1_RS3_REL2,N1_RS4_REL2,N1_RS5_REL2,N1_RS6_REL2,N1_RS7_REL2,N1_RS8_REL2,N1_RS9_REL2,N1_RS10_REL2,N1_RS11_REL2,N1_RS12_REL2,N1_RS13_REL2,N1_RS14_REL2,N1_RS15_REL2,N1_RS16_REL2,N1_RS17_REL2,N1_RS18_REL2,N1_RS19_REL2,N1_RS20_REL2,N1_RS21_REL2,N1_RS22_REL2,N1_RS23_REL2,N1_RS24_REL2,N1_RS25_REL2,N1_RS26_REL2,N1_RS27_REL2,N1_RS28_REL2,N1_RS29_REL2,N1_RS30_REL2,N1_RS31_REL2,N1_RS32_REL2,N1_RS33_REL2,N1_RS34_REL2,N1_RS35_REL2,N1_RS36_REL2,N1_RS37_REL2,N1_RS38_REL2,N1_RS39_REL2,N1_RS40_REL2,N1_RS41_REL2,N1_RS42_REL2,N1_RS43_REL2,N1_RS44_REL2,N1_RS45_REL2,N1_RS46_REL2,N1_RS47_REL2,N1_RS48_REL2,N1_RS49_REL2);
formula n1_mn_rel2 = min(N1_RS0_REL2,N1_RS1_REL2,N1_RS2_REL2,N1_RS3_REL2,N1_RS4_REL2,N1_RS5_REL2,N1_RS6_REL2,N1_RS7_REL2,N1_RS8_REL2,N1_RS9_REL2,N1_RS10_REL2,N1_RS11_REL2,N1_RS12_REL2,N1_RS13_REL2,N1_RS14_REL2,N1_RS15_REL2,N1_RS16_REL2,N1_RS17_REL2,N1_RS18_REL2,N1_RS19_REL2,N1_RS20_REL2,N1_RS21_REL2,N1_RS22_REL2,N1_RS23_REL2,N1_RS24_REL2,N1_RS25_REL2,N1_RS26_REL2,N1_RS27_REL2,N1_RS28_REL2,N1_RS29_REL2,N1_RS30_REL2,N1_RS31_REL2,N1_RS32_REL2,N1_RS33_REL2,N1_RS34_REL2,N1_RS35_REL2,N1_RS36_REL2,N1_RS37_REL2,N1_RS38_REL2,N1_RS39_REL2,N1_RS40_REL2,N1_RS41_REL2,N1_RS42_REL2,N1_RS43_REL2,N1_RS44_REL2,N1_RS45_REL2,N1_RS46_REL2,N1_RS47_REL2,N1_RS48_REL2,N1_RS49_REL2);
formula n1_uv_rel2 = (n1_mx_rel2 - n1_rs_rel2) / (n1_mx_rel2 - n1_mn_rel2);

formula n1_rs_rel3=( (n1 = 0 & n1ev = 3) ? N1_RS0_REL3 :( (n1 = 1 & n1ev = 3) ? N1_RS1_REL3 :( (n1 = 2 & n1ev = 3) ? N1_RS2_REL3 :( (n1 = 3 & n1ev = 3) ? N1_RS3_REL3 :( (n1 = 4 & n1ev = 3) ? N1_RS4_REL3 :( (n1 = 5 & n1ev = 3) ? N1_RS5_REL3 :( (n1 = 6 & n1ev = 3) ? N1_RS6_REL3 :( (n1 = 7 & n1ev = 3) ? N1_RS7_REL3 :( (n1 = 8 & n1ev = 3) ? N1_RS8_REL3 :( (n1 = 9 & n1ev = 3) ? N1_RS9_REL3 :( (n1 = 10 & n1ev = 3) ? N1_RS10_REL3 :( (n1 = 11 & n1ev = 3) ? N1_RS11_REL3 :( (n1 = 12 & n1ev = 3) ? N1_RS12_REL3 :( (n1 = 13 & n1ev = 3) ? N1_RS13_REL3 :( (n1 = 14 & n1ev = 3) ? N1_RS14_REL3 :( (n1 = 15 & n1ev = 3) ? N1_RS15_REL3 :( (n1 = 16 & n1ev = 3) ? N1_RS16_REL3 :( (n1 = 17 & n1ev = 3) ? N1_RS17_REL3 :( (n1 = 18 & n1ev = 3) ? N1_RS18_REL3 :( (n1 = 19 & n1ev = 3) ? N1_RS19_REL3 :( (n1 = 20 & n1ev = 3) ? N1_RS20_REL3 :( (n1 = 21 & n1ev = 3) ? N1_RS21_REL3 :( (n1 = 22 & n1ev = 3) ? N1_RS22_REL3 :( (n1 = 23 & n1ev = 3) ? N1_RS23_REL3 :( (n1 = 24 & n1ev = 3) ? N1_RS24_REL3 :( (n1 = 25 & n1ev = 3) ? N1_RS25_REL3 :( (n1 = 26 & n1ev = 3) ? N1_RS26_REL3 :( (n1 = 27 & n1ev = 3) ? N1_RS27_REL3 :( (n1 = 28 & n1ev = 3) ? N1_RS28_REL3 :( (n1 = 29 & n1ev = 3) ? N1_RS29_REL3 :( (n1 = 30 & n1ev = 3) ? N1_RS30_REL3 :( (n1 = 31 & n1ev = 3) ? N1_RS31_REL3 :( (n1 = 32 & n1ev = 3) ? N1_RS32_REL3 :( (n1 = 33 & n1ev = 3) ? N1_RS33_REL3 :( (n1 = 34 & n1ev = 3) ? N1_RS34_REL3 :( (n1 = 35 & n1ev = 3) ? N1_RS35_REL3 :( (n1 = 36 & n1ev = 3) ? N1_RS36_REL3 :( (n1 = 37 & n1ev = 3) ? N1_RS37_REL3 :( (n1 = 38 & n1ev = 3) ? N1_RS38_REL3 :( (n1 = 39 & n1ev = 3) ? N1_RS39_REL3 :( (n1 = 40 & n1ev = 3) ? N1_RS40_REL3 :( (n1 = 41 & n1ev = 3) ? N1_RS41_REL3 :( (n1 = 42 & n1ev = 3) ? N1_RS42_REL3 :( (n1 = 43 & n1ev = 3) ? N1_RS43_REL3 :( (n1 = 44 & n1ev = 3) ? N1_RS44_REL3 :( (n1 = 45 & n1ev = 3) ? N1_RS45_REL3 :( (n1 = 46 & n1ev = 3) ? N1_RS46_REL3 :( (n1 = 47 & n1ev = 3) ? N1_RS47_REL3 :( (n1 = 48 & n1ev = 3) ? N1_RS48_REL3 :( (n1 = 49 & n1ev = 3) ? N1_RS49_REL3 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_rel3 = max(N1_RS0_REL3,N1_RS1_REL3,N1_RS2_REL3,N1_RS3_REL3,N1_RS4_REL3,N1_RS5_REL3,N1_RS6_REL3,N1_RS7_REL3,N1_RS8_REL3,N1_RS9_REL3,N1_RS10_REL3,N1_RS11_REL3,N1_RS12_REL3,N1_RS13_REL3,N1_RS14_REL3,N1_RS15_REL3,N1_RS16_REL3,N1_RS17_REL3,N1_RS18_REL3,N1_RS19_REL3,N1_RS20_REL3,N1_RS21_REL3,N1_RS22_REL3,N1_RS23_REL3,N1_RS24_REL3,N1_RS25_REL3,N1_RS26_REL3,N1_RS27_REL3,N1_RS28_REL3,N1_RS29_REL3,N1_RS30_REL3,N1_RS31_REL3,N1_RS32_REL3,N1_RS33_REL3,N1_RS34_REL3,N1_RS35_REL3,N1_RS36_REL3,N1_RS37_REL3,N1_RS38_REL3,N1_RS39_REL3,N1_RS40_REL3,N1_RS41_REL3,N1_RS42_REL3,N1_RS43_REL3,N1_RS44_REL3,N1_RS45_REL3,N1_RS46_REL3,N1_RS47_REL3,N1_RS48_REL3,N1_RS49_REL3);
formula n1_mn_rel3 = min(N1_RS0_REL3,N1_RS1_REL3,N1_RS2_REL3,N1_RS3_REL3,N1_RS4_REL3,N1_RS5_REL3,N1_RS6_REL3,N1_RS7_REL3,N1_RS8_REL3,N1_RS9_REL3,N1_RS10_REL3,N1_RS11_REL3,N1_RS12_REL3,N1_RS13_REL3,N1_RS14_REL3,N1_RS15_REL3,N1_RS16_REL3,N1_RS17_REL3,N1_RS18_REL3,N1_RS19_REL3,N1_RS20_REL3,N1_RS21_REL3,N1_RS22_REL3,N1_RS23_REL3,N1_RS24_REL3,N1_RS25_REL3,N1_RS26_REL3,N1_RS27_REL3,N1_RS28_REL3,N1_RS29_REL3,N1_RS30_REL3,N1_RS31_REL3,N1_RS32_REL3,N1_RS33_REL3,N1_RS34_REL3,N1_RS35_REL3,N1_RS36_REL3,N1_RS37_REL3,N1_RS38_REL3,N1_RS39_REL3,N1_RS40_REL3,N1_RS41_REL3,N1_RS42_REL3,N1_RS43_REL3,N1_RS44_REL3,N1_RS45_REL3,N1_RS46_REL3,N1_RS47_REL3,N1_RS48_REL3,N1_RS49_REL3);
formula n1_uv_rel3 = (n1_mx_rel3 - n1_rs_rel3) / (n1_mx_rel3 - n1_mn_rel3);

formula n1_rs_rel4=( (n1 = 0 & n1ev = 4) ? N1_RS0_REL4 :( (n1 = 1 & n1ev = 4) ? N1_RS1_REL4 :( (n1 = 2 & n1ev = 4) ? N1_RS2_REL4 :( (n1 = 3 & n1ev = 4) ? N1_RS3_REL4 :( (n1 = 4 & n1ev = 4) ? N1_RS4_REL4 :( (n1 = 5 & n1ev = 4) ? N1_RS5_REL4 :( (n1 = 6 & n1ev = 4) ? N1_RS6_REL4 :( (n1 = 7 & n1ev = 4) ? N1_RS7_REL4 :( (n1 = 8 & n1ev = 4) ? N1_RS8_REL4 :( (n1 = 9 & n1ev = 4) ? N1_RS9_REL4 :( (n1 = 10 & n1ev = 4) ? N1_RS10_REL4 :( (n1 = 11 & n1ev = 4) ? N1_RS11_REL4 :( (n1 = 12 & n1ev = 4) ? N1_RS12_REL4 :( (n1 = 13 & n1ev = 4) ? N1_RS13_REL4 :( (n1 = 14 & n1ev = 4) ? N1_RS14_REL4 :( (n1 = 15 & n1ev = 4) ? N1_RS15_REL4 :( (n1 = 16 & n1ev = 4) ? N1_RS16_REL4 :( (n1 = 17 & n1ev = 4) ? N1_RS17_REL4 :( (n1 = 18 & n1ev = 4) ? N1_RS18_REL4 :( (n1 = 19 & n1ev = 4) ? N1_RS19_REL4 :( (n1 = 20 & n1ev = 4) ? N1_RS20_REL4 :( (n1 = 21 & n1ev = 4) ? N1_RS21_REL4 :( (n1 = 22 & n1ev = 4) ? N1_RS22_REL4 :( (n1 = 23 & n1ev = 4) ? N1_RS23_REL4 :( (n1 = 24 & n1ev = 4) ? N1_RS24_REL4 :( (n1 = 25 & n1ev = 4) ? N1_RS25_REL4 :( (n1 = 26 & n1ev = 4) ? N1_RS26_REL4 :( (n1 = 27 & n1ev = 4) ? N1_RS27_REL4 :( (n1 = 28 & n1ev = 4) ? N1_RS28_REL4 :( (n1 = 29 & n1ev = 4) ? N1_RS29_REL4 :( (n1 = 30 & n1ev = 4) ? N1_RS30_REL4 :( (n1 = 31 & n1ev = 4) ? N1_RS31_REL4 :( (n1 = 32 & n1ev = 4) ? N1_RS32_REL4 :( (n1 = 33 & n1ev = 4) ? N1_RS33_REL4 :( (n1 = 34 & n1ev = 4) ? N1_RS34_REL4 :( (n1 = 35 & n1ev = 4) ? N1_RS35_REL4 :( (n1 = 36 & n1ev = 4) ? N1_RS36_REL4 :( (n1 = 37 & n1ev = 4) ? N1_RS37_REL4 :( (n1 = 38 & n1ev = 4) ? N1_RS38_REL4 :( (n1 = 39 & n1ev = 4) ? N1_RS39_REL4 :( (n1 = 40 & n1ev = 4) ? N1_RS40_REL4 :( (n1 = 41 & n1ev = 4) ? N1_RS41_REL4 :( (n1 = 42 & n1ev = 4) ? N1_RS42_REL4 :( (n1 = 43 & n1ev = 4) ? N1_RS43_REL4 :( (n1 = 44 & n1ev = 4) ? N1_RS44_REL4 :( (n1 = 45 & n1ev = 4) ? N1_RS45_REL4 :( (n1 = 46 & n1ev = 4) ? N1_RS46_REL4 :( (n1 = 47 & n1ev = 4) ? N1_RS47_REL4 :( (n1 = 48 & n1ev = 4) ? N1_RS48_REL4 :( (n1 = 49 & n1ev = 4) ? N1_RS49_REL4 :0.0))))))))))))))))))))))))))))))))))))))))))))))))));
//Computing the utility value..
formula n1_mx_rel4 = max(N1_RS0_REL4,N1_RS1_REL4,N1_RS2_REL4,N1_RS3_REL4,N1_RS4_REL4,N1_RS5_REL4,N1_RS6_REL4,N1_RS7_REL4,N1_RS8_REL4,N1_RS9_REL4,N1_RS10_REL4,N1_RS11_REL4,N1_RS12_REL4,N1_RS13_REL4,N1_RS14_REL4,N1_RS15_REL4,N1_RS16_REL4,N1_RS17_REL4,N1_RS18_REL4,N1_RS19_REL4,N1_RS20_REL4,N1_RS21_REL4,N1_RS22_REL4,N1_RS23_REL4,N1_RS24_REL4,N1_RS25_REL4,N1_RS26_REL4,N1_RS27_REL4,N1_RS28_REL4,N1_RS29_REL4,N1_RS30_REL4,N1_RS31_REL4,N1_RS32_REL4,N1_RS33_REL4,N1_RS34_REL4,N1_RS35_REL4,N1_RS36_REL4,N1_RS37_REL4,N1_RS38_REL4,N1_RS39_REL4,N1_RS40_REL4,N1_RS41_REL4,N1_RS42_REL4,N1_RS43_REL4,N1_RS44_REL4,N1_RS45_REL4,N1_RS46_REL4,N1_RS47_REL4,N1_RS48_REL4,N1_RS49_REL4);
formula n1_mn_rel4 = min(N1_RS0_REL4,N1_RS1_REL4,N1_RS2_REL4,N1_RS3_REL4,N1_RS4_REL4,N1_RS5_REL4,N1_RS6_REL4,N1_RS7_REL4,N1_RS8_REL4,N1_RS9_REL4,N1_RS10_REL4,N1_RS11_REL4,N1_RS12_REL4,N1_RS13_REL4,N1_RS14_REL4,N1_RS15_REL4,N1_RS16_REL4,N1_RS17_REL4,N1_RS18_REL4,N1_RS19_REL4,N1_RS20_REL4,N1_RS21_REL4,N1_RS22_REL4,N1_RS23_REL4,N1_RS24_REL4,N1_RS25_REL4,N1_RS26_REL4,N1_RS27_REL4,N1_RS28_REL4,N1_RS29_REL4,N1_RS30_REL4,N1_RS31_REL4,N1_RS32_REL4,N1_RS33_REL4,N1_RS34_REL4,N1_RS35_REL4,N1_RS36_REL4,N1_RS37_REL4,N1_RS38_REL4,N1_RS39_REL4,N1_RS40_REL4,N1_RS41_REL4,N1_RS42_REL4,N1_RS43_REL4,N1_RS44_REL4,N1_RS45_REL4,N1_RS46_REL4,N1_RS47_REL4,N1_RS48_REL4,N1_RS49_REL4);
formula n1_uv_rel4 = (n1_mx_rel4 - n1_rs_rel4) / (n1_mx_rel4 - n1_mn_rel4);


//Preventing from non-evaluated problem..
formula n1_ut_cost = (n1_uv_cost > 0.0 ? n1_uv_cost: 0.0);
formula n1_ut_dur0 = (n1_uv_dur0 > 0.0 ? n1_uv_dur0: 0.0);
formula n1_ut_dur1 = (n1_uv_dur1 > 0.0 ? n1_uv_dur1: 0.0);
formula n1_ut_dur2 = (n1_uv_dur2 > 0.0 ? n1_uv_dur2: 0.0);
formula n1_ut_dur3 = (n1_uv_dur3 > 0.0 ? n1_uv_dur3: 0.0);
formula n1_ut_dur4 = (n1_uv_dur4 > 0.0 ? n1_uv_dur4: 0.0);
formula n1_ut_rel0 = (n1_uv_rel0 > 0.0 ? n1_uv_rel0: 0.0);
formula n1_ut_rel1 = (n1_uv_rel1 > 0.0 ? n1_uv_rel1: 0.0);
formula n1_ut_rel2 = (n1_uv_rel2 > 0.0 ? n1_uv_rel2: 0.0);
formula n1_ut_rel3 = (n1_uv_rel3 > 0.0 ? n1_uv_rel3: 0.0);
formula n1_ut_rel4 = (n1_uv_rel4 > 0.0 ? n1_uv_rel4: 0.0);

//Compute the overall utility value..
formula n1_ut_all = (n1ev=0 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur0 * A0_WG_DUR + n1_ut_rel0 * A0_WG_REL):(n1ev=1 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur1 * A0_WG_DUR + n1_ut_rel1 * A0_WG_REL):(n1ev=2 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur2 * A0_WG_DUR + n1_ut_rel2 * A0_WG_REL):(n1ev=3 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur3 * A0_WG_DUR + n1_ut_rel3 * A0_WG_REL):(n1ev=4 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur4 * A0_WG_DUR + n1_ut_rel4 * A0_WG_REL):0.0)))));

//=========Reward Structure=======
rewards "cost"
[] true: n0_rs_cost;
[] true: n1_rs_cost;
endrewards
rewards "time"
[] true: n0_rs_dur0;
[] true: n0_rs_dur1;
[] true: n0_rs_dur2;
[] true: n0_rs_dur3;
[] true: n0_rs_dur4;
[] true: n1_rs_dur0;
[] true: n1_rs_dur1;
[] true: n1_rs_dur2;
[] true: n1_rs_dur3;
[] true: n1_rs_dur4;
endrewards
rewards "reliability"
[] true: n0_rs_rel0;
[] true: n0_rs_rel1;
[] true: n0_rs_rel2;
[] true: n0_rs_rel3;
[] true: n0_rs_rel4;
[] true: n1_rs_rel0;
[] true: n1_rs_rel1;
[] true: n1_rs_rel2;
[] true: n1_rs_rel3;
[] true: n1_rs_rel4;
endrewards
rewards "utility"
[] true: n0_ut_all;
[] true: n1_ut_all;
endrewards

//=========Labels=======
label "done" = (end=true);
